{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","src/game.ts","src/main.ts","src/veryengine/action/actionBehaviour.ts","src/veryengine/action/actions.ts","src/veryengine/action/assignment.ts","src/veryengine/action/index.ts","src/veryengine/dataSource/dataSource.ts","src/veryengine/dataSource/fsmData.ts","src/veryengine/dataSource/index.ts","src/veryengine/dataSource/stateActionData.ts","src/veryengine/dataSource/stateData.ts","src/veryengine/dataSource/stateTriggerData.ts","src/veryengine/dataSource/variableData.ts","src/veryengine/enum/enumTypes.ts","src/veryengine/enum/index.ts","src/veryengine/expression/expChar.ts","src/veryengine/expression/expManager.ts","src/veryengine/expression/expressionEnum.ts","src/veryengine/expression/expressionParsing.ts","src/veryengine/expression/expressions.ts","src/veryengine/expression/forwardQuery.ts","src/veryengine/expression/functionExpression.ts","src/veryengine/expression/functions.ts","src/veryengine/expression/index.ts","src/veryengine/expression/positions.ts","src/veryengine/expression/scope.ts","src/veryengine/expression/token.ts","src/veryengine/expression/tokenReader.ts","src/veryengine/expression/tokenizer.ts","src/veryengine/expression/variable.ts","src/veryengine/expression/variableExpression.ts","src/veryengine/global/gameGlobal.ts","src/veryengine/global/index.ts","src/veryengine/global/time.ts","src/veryengine/html/index.ts","src/veryengine/html/showError.ts","src/veryengine/index.ts","src/veryengine/library/action/index.ts","src/veryengine/library/action/transform.ts","src/veryengine/library/trigger/index.ts","src/veryengine/library/trigger/input.ts","src/veryengine/manager/index.ts","src/veryengine/manager/manager.ts","src/veryengine/manager/projects.ts","src/veryengine/manager/reset.ts","src/veryengine/object/index.ts","src/veryengine/object/objects.ts","src/veryengine/object/veryObject.ts","src/veryengine/state/associatedState.ts","src/veryengine/state/fsm.ts","src/veryengine/state/index.ts","src/veryengine/state/state.ts","src/veryengine/state/stateAction.ts","src/veryengine/state/stateConst.ts","src/veryengine/template/index.ts","src/veryengine/template/template.ts","src/veryengine/template/templates.ts","src/veryengine/trigger/index.ts","src/veryengine/trigger/triggerBehaviour.ts","src/veryengine/trigger/triggers.ts","src/veryengine/utility/arrayUtility.ts","src/veryengine/utility/dictionary.ts","src/veryengine/utility/errorInfo.ts","src/veryengine/utility/index.ts","src/veryengine/variables/babylonVariables.ts","src/veryengine/variables/index.ts","src/veryengine/variables/veryVarManager.ts","src/veryengine/variables/veryVariables.ts","src/veryengine/veryEngine.ts","src/verytable/index.ts","src/verytable/veryTable.ts","src/verytable/veryTableRow.ts","src/verytable/veryTableSet.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","veryEngine_1","Game","canvasElement","fps","this","_showFps","_canvas","VeryEngine","Canvas","_fps","_table","document","getElementById","prototype","createScene","_engine","dispose","BABYLON","Engine","engine","window","addEventListener","resize","_scene","Scene","camera","ArcRotateCamera","Vector3","setPosition","attachControl","lowerBetaLimit","upperBetaLimit","Math","PI","lowerRadiusLimit","displayLoadingUI","SceneLoader","Append","scene","hideLoadingUI","init","hot1","getData","projectName","onBeforeRenderObservable","add","Time","_sum","animate","_this","runRenderLoop","width","clientWidth","render","updateFpsPos","toggleDebug","scenes","debugLayer","isVisible","hide","show","embedMode","style","right","body","innerHTML","getFps","toFixed","game","canvas","fpsLabel","game_1","__importDefault","default","enum_1","VE_ActionBehaviour","_enabled","_projectName","_objectID","_actionID","_erveryFrame","isSequence","_sequenceState","SequenceActionState","Initial","Object","defineProperty","val","ActionType","Normal","setEveryFrame","is_every_frame","setActionID","object_id","action_id","paraParser","para_array","action","action_val","every_frame","active","onUpdate","update","pause","Pause","resume","Running","stop","finish","enabled","html_1","VE_Actions","addAction","ids","ID","split","id","trim","toLowerCase","_actionDics","ShowError","showError","hasAction","createAction","create","remove","VE_Assignment","state","total_string","_totalStr","_leftType","AssignType","Variable","_rightType","_state","__export","fsmData_1","VE_DataSource","project_name","name_id","is_template","_templateID","_isTemplate","_fsmIDs","_fsmDic","_triggerIDs","_triggerDic","_actionIDs","_actionDic","_actionInitValue","hasFsm","fsm_id","createFsm","push","VE_FsmData","getFsm","hasFsmIndex","index","getFsmID","hasTrigger","trigger_id","addTrigger","trigger_data","getTrigger","hasTriggerIndex","getTriggerID","action_data","action_init_val","getAction","getActionInitVal","hasActionIndex","getActionID","clear","data_source","_initialValStr","_states","_dataSource","_fsmID","initFsm","initial_var","addState","state_data","getState","VE_StateActionData","sequence","type","StateActionType","Action","totalString","varID","varValue","actionID","everyFrame","setNormalAction","setAssignmentAction","var_id","var_value","Assignment","state_1","VE_StateData","fsm_data","val_str","is_initial_value","state_index","StateConst","STATE_INDEX","_stateIndex","logicalExp","_triggers","_actions","_associatedStates","_isSequence","_fsmData","_valStr","_isInitialValue","hasAssociatedState","addAssociatedState","associated_state_data","getAssociatedState","setSequence","VE_StateTriggerData","triggerID","logicalSwitch","VE_Variable","_variableIDs","_varDics","hasVariable","addVariable","var_paras","getVariableID","getVariableParas","AssociatedFsmType","VariableScope","ExpChar","value","line","pos","_value","_line","_pos","getValue","getLine","getPos","isDigit","test","isLetter","isWhiteSpace","isNewLine","isEndOfInput","is","_i","arguments","toString","scope_1","positions_1","expressionParsing_1","ExpManager","_scope","Scope","Create","isCreated","_expVariable","isCreatedVariable","isCreatedExpression","createVariable","errors","ParseError","NameLocation","setVariable","createExpression","exp_str","exp","VE_ExpressionParsing","parsing","find","evaluate","getExpression","getVariable","printError","console","log","_a","ExpressionType","tokenizer_1","expressions_1","expressionEnum_1","functionExpression_1","functions_1","variableExpression_1","_bracketPair","input_exp","scope","var_scope","_varScope","_tokenizer","Tokenizer","parse","resultExp","buildExpression","current","isEnd","addError","getSource","consume","getProblemCollector","left","relationalExp","isOperator","reOrder","BinaryOperator","Add","Or","algebraExp","LT","LT_EQ","EQ","GT_EQ","GT","NEQ","productExp","Subtract","exponentExp","Multiply","Divide","Modulo","atomExp","BinaryExpression","Not","result","ConstantExpression","setSeal","next","isIdentifier","isKeyword","isStartBracket","newValue","expType","Empty","isConstant","endBracket","className","expectTrigger","OPERATOR","typeStr","isBool","getContents","isNumber","parseFloat","endStart","functionCall","loc","variableID","endsWith","VariableExpression","isSpecialIdentifier","op","rightOp","isSealed","getPriority","getPriorityOp","replaceLeft","target","newLeft","getLeftExp","leftOp","setLeftExp","end_bracket","FunctionExpression","funcToken","CustomFunctions","hasFunction","fun","createFunction","setFunction","paraCount","addPara","parameterNumber","trigger","matches","getProjectCollector","Local","dictionary_1","TrueExpression","clone","_expType","isEmpty","left_exp","right_exp","_op","_isSealed","_left","_right","resultAutoType","_opDic","Power","And","_priority","setRightExp","getOp","getRightExp","leftValue","rightValue","subtract","multiplyByFloats","pow","l","getBoolean","x","y","z","Vector2","GetValue","Dictionary","ForwardQuery","itemBuffer","endReached","problemCollector","endOfInputIndicator","undefined","nextOffset","offset","item","fetch","endOfInput","consumeNext","numberOfItems","shift","setProblemCollector","_paras","_function","func","expClone","printStr","Pow","args","NaN","Ln","Infinity","Lg","log10","Sqrt","sqrt","Abs","abs","Random","start","distance","random","Round","round","Sin","sin","ASin","asin","Cos","cos","ACos","acos","Tan","tan","ATan","atan","func_name","_functions","addFunction","funcName","Severity","msg","severity","_message","_severity","Warning","message","getPosition","getMessage","getSeverity","variable_1","_parent","_context","GetRootScope","_root","makeConstant","E","CreateWithParent","parent","name","setType","setValue","Token","STRING","_source","_contents","_trigger","CreateAndFill","ch","addToTrigger","addToSource","addToContentChar","addToContent","getTokenType","setTokenType","new_type","setTrigger","setContent","content","setSource","source","EOI","symbols","isEndBracket","isStartSquareBracket","isEndSquareBracket","isStartBrace","isEndBrace","keywords","KEYWORD","values","triggers","SPECIAL_ID","isSpecialIdentifierWithContent","contents","NUMBER","BOOL","isString","forwardQuery_1","expChar_1","TokenReader","_super","_inputExp","_count","_operator","__extends","readChar","token_1","tokenReader_1","_decimalSeparator","_lineComment","_blockCommentStart","_blockCommentEnd","_brackets","_treatSinglePipeAsBracket","_specialIdStarters","_specialIdTerminators","_keywords","_keywordsCaseSensitive","_stringDelimiters","_boolConstant","isAtStartOfLineComment","skipToEndOfLine","isAtStartOfBlockComment","skipBlockComment","isAtStartOfNumber","fetchNumber","isAtStartOfIdentifier","fetchId","fetchString","isAtBracket","isAtStartOfSpecialId","fetchSpecialId","fetchOperator","hasDecimal","isIdentifierChar","indexOf","specialId","handleKeywords","separator","canConsumeThisString","check_string","isAtEndOfBlockComment","in_symbol","id_token","keyword","keywordToken","addWarning","_name","_constant","getName","GameGlobal","_frame","getDeltaTime","initZone","errorZone","showMsg","prefix","error_msg","errorContentNow","errorContentPrefix","display","closeBtn","querySelector","that","showWarn","close","Action_Translate","apply","_refType","Space","LOCAL","destroy","index_1","trigger_1","Trigger_MouseDown","onPointerObservable","pointInfo","VE_TriggerBehaviour","VE_Triggers","VE_Manager","VE_Projects","VE_Reset","utility_1","VE_Objects","_objectIDs","_objectDics","very_object","getObjectID","getVeryObject","unloadObject","ArrayUtility","tempObject","variables_1","VeryObject","game_object","gameObject","GameObject","_variables","_expressions","_fsms","_templates","addFsm","fsm","variable","hasExpression","exp_id","addExpression","expression","hasTemplate","template_id","addTemplate","template","getTemplate","hasAnyVar","unload","VE_AssociatedState","from_state","_types","_indexs","_numberIndex","_templateIDs","_fromState","key","connect","global_1","stateConst_1","VE_Fsm","_id","_stateDics","_frameCount","hasState","state_value","ContainsKey","removeState","Remove","receiveEvent","frameCount","startsWith","ASSOCIATED_STATE_PREFIX","VE_State","_stateActions","_assocaitedStates","_fsm","state_action","Mesh","bind","VE_StateAction","is_sequence","_type","_action","STATE_SEPARATOR","VARIABLE_SYMBOL","VE_Template","VE_Templates","_logicalSwitch","_logicalExp","_triggerTargets","_triggerID","set","setTriggerID","addLogicalSwitch","addTriggerTarget","sendEvent","isEnabled","eventProcess","_triggerDics","createTrigger","arr","ele","splice","_keys","_values","Count","SetValue","ks","GetKeys","GetValues","ErrorInfo","isRight","mesh","Transform","eulerAngles","Zero","showError_1","VeryVarManager","hasVarType","var_type","_veryVarTypes","addVarType","var_prototype","createVar","getVarType","veryVarManager_1","VeryBool","initValue","value_str","error_info","varType","VeryInt","Value","newFloat","isNaN","VeryFloat","newVal","VeryNumber","VeryString","substr","VeryVector3","data","tableData","VeryTable","showErrorTest","veryTableRow_1","_columnIDs","_rows","newRow","VeryTableRow","row_index","column_index","getRow","getColumnID","floor","b","addRow","row_data","_rowData","insert","tempData","slice","removeEnd","pop","VeryTableSet","tables","_tables","getTable","addTable","table","removeTable"],"mappings":"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","file":"veryengine.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/// <reference path=\"./dts/babylon.d.ts\"/>\r\n\r\nimport { VeryEngine, Time } from \"./veryengine/veryEngine\";\r\n\r\nexport default class Game {\r\n\tprivate _canvas: HTMLCanvasElement;\r\n\tprivate _fps: HTMLElement;\r\n\tprivate _table!: HTMLElement;\r\n\tprivate _showFps: boolean = true;\r\n\tprivate _engine!: BABYLON.Engine;\r\n\tprivate _scene!: BABYLON.Scene;\r\n\t// private _camera!: BABYLON.FreeCamera;\r\n\r\n\tconstructor(canvasElement: HTMLCanvasElement, fps: HTMLElement) {\r\n\t\tthis._canvas = canvasElement;\r\n\t\tVeryEngine.Canvas = this._canvas;\r\n\t\tthis._fps = fps;\r\n\t\t// this._engine = new BABYLON.Engine(this._canvas, true);\r\n\t\tthis._table = document.getElementById(\"VeryTable\")!;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建场景，并且启动\r\n\t */\r\n\tcreateScene(): Game {\r\n\t\t// 假设有运行中的engine，先停止，重新初始化\r\n\t\tif (this._engine) {\r\n\t\t\tthis._engine.dispose();\r\n\t\t}\r\n\t\tthis._engine = new BABYLON.Engine(this._canvas, true);\r\n\t\tVeryEngine.Engine = this._engine;\r\n\t\t// Resize\r\n\t\tlet engine = this._engine;\r\n\t\twindow.addEventListener(\"resize\", function () {\r\n\t\t\tengine.resize();\r\n\t\t});\r\n\r\n\t\tthis._scene = new BABYLON.Scene(this._engine);\r\n\t\tVeryEngine.Scene = this._scene;\r\n\r\n\t\t// 设定相机\r\n\t\tvar camera = new BABYLON.ArcRotateCamera(\"MainCamera\", 0, 0, 10, new BABYLON.Vector3(0, 0, 0), this._scene);\r\n    camera.setPosition(new BABYLON.Vector3(20, 200, 400));\r\n    camera.attachControl(this._canvas, true);\r\n    camera.lowerBetaLimit = 0.1;\r\n    camera.upperBetaLimit = (Math.PI / 2) * 0.99;\r\n    camera.lowerRadiusLimit = 150;\r\n\r\n\t\t// 加载过度动画开\r\n\t\tengine.displayLoadingUI();\r\n\r\n\t\t// 加载scene.babylon场景文件\r\n\t\tBABYLON.SceneLoader.Append(\"./scene/\", \"scene.babylon\", this._scene, function (scene) {\r\n\t\t\t\t// do something with the scene\r\n\t\t\t\t// 加载过度动画关\r\n\t\t\t\tengine.hideLoadingUI();\r\n\t\t});\r\n\r\n\r\n\t\t// const lightPos = new BABYLON.Vector3(0, 1, 0);\r\n\t\t// new BABYLON.HemisphericLight('hemlight', lightPos, this._scene);\r\n\r\n\t\t// const sphereOpts = { segments: 16, diameter: 1 };\r\n\t\t// let sphere = BABYLON.MeshBuilder.CreateSphere(\r\n\t\t// \t'mainsphere',\r\n\t\t// \tsphereOpts,\r\n\t\t// \tthis._scene\r\n\t\t// );\r\n\t\t// sphere.position.y = 1;\r\n\r\n\t\t// const groundOpts = { width: 6, height: 6, subdivisions: 2 };\r\n\t\t// BABYLON.MeshBuilder.CreateGround('mainground', groundOpts, this._scene);\r\n\r\n\t\t// 表格加载测试\r\n\t\t// console.log(hot1.getData());\r\n\t\tlet entrance: VeryEngine = new VeryEngine();\r\n\t\tentrance.init(hot1.getData(), projectName);\r\n\r\n\t\t// 全局渲染帧循环\r\n\t\tthis._scene.onBeforeRenderObservable.add(() => {\r\n\t\t\t// 添加帧函数\r\n\t\t\tTime._sum();\r\n\t\t})\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 启动渲染循环；\r\n\t */\r\n\tanimate(): Game {\r\n\t\tthis._engine.runRenderLoop(() => {\r\n\t\t\tif (this._canvas.width !== this._canvas.clientWidth) {\r\n\t\t\t\tthis._engine.resize();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._scene) {\r\n\t\t\t\tthis._scene.render();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._showFps) {\r\n\t\t\t\tthis.updateFpsPos();\r\n\t\t\t}\r\n\r\n\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 属性编辑器UI界面控制；\r\n\t */\r\n\ttoggleDebug(): Game {\r\n\t\tif (this._engine) {\r\n\t\t\t// Always showing the debug layer, because you can close it by itself\r\n\t\t\tvar scene = this._engine.scenes[0];\r\n\t\t\tif (scene.debugLayer.isVisible()) {\r\n\t\t\t\tscene.debugLayer.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// 此处修改了babylon.d.ts文件\r\n\t\t\t\tscene.debugLayer.show({ embedMode: true });\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 更新fps显示及显示位置\r\n\t */\r\n\tupdateFpsPos(): void {\r\n\t\tif (this._fps) {\r\n\t\t\tthis._fps.style.right = document.body.clientWidth - (this._table.clientWidth + this._canvas.clientWidth) + \"px\";\r\n\r\n\t\t\tthis._fps.innerHTML = this._engine.getFps().toFixed() + \" fps\";\r\n\t\t}\r\n\t}\r\n}\r\n","\r\n\r\nimport Game from \"./game\";\r\n\r\nlet game!:Game;\r\n/**\r\n * 初始化入口；\r\n */\r\nfunction initGame(): void {\r\n  let canvas = <HTMLCanvasElement>document.getElementById(\"renderCanvas\");\r\n  let fpsLabel = document.getElementById(\"fpsLabel\");\r\n  if(canvas !== null && fpsLabel !== null) {\r\n    game = new Game(canvas, fpsLabel);\r\n    game.createScene().animate();  // 链式调用\r\n  }\r\n}\r\n\r\nfunction runBtn(): void {\r\n  if(game) {\r\n    game.createScene().animate();\r\n  }\r\n}\r\n\r\nfunction toggleDebug(): void {\r\n  if(game) {\r\n    game.toggleDebug();\r\n  }\r\n}\r\n\r\n// 关联按钮\r\ndocument.getElementById(\"runButton\")!.addEventListener(\"click\", runBtn);\r\n\r\n// 关联按钮\r\ndocument.getElementById(\"debugButton\")!.addEventListener(\"click\", toggleDebug);\r\n\r\n// 启动引擎\r\ninitGame();\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ActionType, SequenceActionState } from \"../enum\";\r\n\r\nexport abstract class VE_ActionBehaviour {\r\n\r\n  public abstract get ID(): string;\r\n\r\n  public get enabled(): boolean {\r\n    return this._enabled;\r\n  }\r\n  public set enabled(val: boolean) {\r\n    this._enabled = val;\r\n  }\r\n  private _enabled: boolean = true;\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  };\r\n  private _projectName: string = '';\r\n\r\n  // protected GameObject ObjectInstance = null;\r\n  // protected veryObject: VeryObject = null;\r\n\r\n  public get objectID(): string {\r\n    return this._objectID;\r\n  };\r\n  private _objectID: string = '';\r\n\r\n  public get actionID(): string {\r\n    return this._actionID;\r\n  }\r\n  private _actionID: string = '';\r\n\r\n  public get Type(): ActionType {\r\n    return ActionType.Normal;\r\n  }\r\n\r\n  private _erveryFrame: boolean = false;\r\n  public get everyFrame(): boolean {\r\n    return this._erveryFrame;\r\n  }\r\n\r\n\r\n  public isSequence: boolean = false;\r\n\r\n  public get SequenceState(): SequenceActionState {\r\n    return this._sequenceState;\r\n  }\r\n  public set SequenceState(val: SequenceActionState) {\r\n    this._sequenceState = val;\r\n  }\r\n  private _sequenceState: SequenceActionState = SequenceActionState.Initial;\r\n\r\n  // private VE_SequenceActions _sequenceAction = null;\r\n\r\n\r\n  public setEveryFrame(is_every_frame: boolean): void {\r\n    this._erveryFrame = is_every_frame;\r\n  }\r\n\r\n  public setActionID(object_id: string, action_id: string): void {\r\n    this._objectID = object_id;\r\n    this._actionID = action_id;\r\n  }\r\n\r\n  // SetVeryObject(): void {}\r\n\r\n  public paraParser(para_array: string[]): boolean {\r\n    if (para_array) { }\r\n    return true;\r\n  }\r\n\r\n  public action(action_val: boolean, every_frame: boolean): void {\r\n    this._enabled = action_val;\r\n    this._erveryFrame = every_frame;\r\n    if (this._enabled) {\r\n      this.active()\r\n      if (!this._erveryFrame) {\r\n        this.onUpdate();\r\n      }\r\n    }\r\n  }\r\n\r\n  public abstract active(): void;\r\n\r\n\r\n  public update(): void {\r\n    if(this._enabled && this._erveryFrame) {\r\n      this.onUpdate();\r\n    }\r\n  }\r\n\r\n  public onUpdate(): void {\r\n\r\n  }\r\n\r\n  public pause(): void {\r\n    this._sequenceState = SequenceActionState.Pause;\r\n  }\r\n\r\n  public resume(): void {\r\n    this._sequenceState = SequenceActionState.Running;\r\n  }\r\n\r\n  public stop(): void {\r\n    this._sequenceState = SequenceActionState.Initial;\r\n  }\r\n\r\n  public finish(): void {\r\n    this._sequenceState = SequenceActionState.Initial;\r\n\r\n    this.enabled = false;\r\n  }\r\n\r\n  // 如果创建过程中有add callback，需要destroy时删除\r\n  public abstract destroy(): void;\r\n\r\n\r\n}","import { VE_ActionBehaviour } from \"./actionBehaviour\";\r\nimport { ShowError } from \"../html\";\r\n\r\nexport class VE_Actions {\r\n\r\n  private static _actionDics: { [key: string]: VE_ActionBehaviour} = {};\r\n\r\n  public static addAction(action: VE_ActionBehaviour): void {\r\n    let ids: string[] = action.ID.split('|');\r\n    for(let i: number = 0; i < ids.length; i++) {\r\n      let id: string = ids[i].trim().toLowerCase();\r\n      if(this._actionDics[id]) {\r\n        ShowError.showError(`响应初始化错误，响应ID重复，当前响应ID：${id}，请为当前响应重新分配响应ID！`);\r\n      } else {\r\n        this._actionDics[id] = action;\r\n      }\r\n    }\r\n  }\r\n\r\n  public static hasAction(action_id: string): boolean {\r\n    action_id = action_id.toLowerCase();\r\n    if(this._actionDics[action_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static createAction(action_id: string): VE_ActionBehaviour {\r\n    action_id = action_id.toLowerCase();\r\n    return Object.create(this._actionDics[action_id]);\r\n  }\r\n  \r\n  public static remove(action_id: string): void {\r\n    action_id = action_id.toLowerCase();\r\n    delete this._actionDics[action_id];\r\n  }\r\n\r\n\r\n}","import { VE_State } from \"../state\";\r\nimport { AssignType } from \"../enum\";\r\n\r\nexport class VE_Assignment {\r\n\r\n  public get state(): VE_State {\r\n    return this._state;\r\n  }\r\n  private _state: VE_State;\r\n\r\n  private _totalStr: string = '';\r\n\r\n  public get leftType(): AssignType {\r\n    return this._leftType;\r\n  }\r\n  private _leftType: AssignType = AssignType.Variable;\r\n\r\n  public get rightType(): AssignType {\r\n    return this._rightType;\r\n  }\r\n  private _rightType: AssignType = AssignType.Variable;\r\n\r\n  \r\n  constructor(state: VE_State, total_string: string) {\r\n    this._state = state;\r\n    this._totalStr = total_string;\r\n  }\r\n\r\n  \r\n}","export * from './actionBehaviour';\r\nexport * from './assignment';\r\nexport * from './actions';","import { VE_FsmData } from \"./fsmData\";\r\n\r\nexport class VE_DataSource {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  public get objectID(): string {\r\n    return this._objectID;\r\n  }\r\n  private _objectID: string = '';\r\n\r\n  public get templateID(): string {\r\n    return this._templateID;\r\n  }\r\n  private _templateID: string = '';\r\n\r\n  public get isTemplate(): boolean {\r\n    return this._isTemplate;\r\n  }\r\n  private _isTemplate: boolean = false;\r\n\r\n  public get id(): string {\r\n    if (this._isTemplate) {\r\n      return this._templateID;\r\n    } else {\r\n      return this._objectID;\r\n    }\r\n  }\r\n\r\n  private _fsmIDs: string[] = [];\r\n  private _fsmDic: { [key: string]: VE_FsmData } = {};\r\n\r\n  private _triggerIDs: string[] = [];\r\n  private _triggerDic: { [key: string]: string[] } = {};\r\n\r\n  private _actionIDs: string[] = [];\r\n  private _actionDic: { [key: string]: string[] } = {};\r\n  private _actionInitValue: { [key: string]: string[] } = {};\r\n\r\n  public get triggerCount(): number {\r\n    return this._triggerIDs.length;\r\n  }\r\n\r\n  public get actionCount(): number {\r\n    return this._actionIDs.length;\r\n  }\r\n\r\n  public get fsmCount(): number {\r\n    return this._fsmIDs.length;\r\n  }\r\n\r\n\r\n  constructor(project_name: string, name_id: string, is_template: boolean) {\r\n    this._projectName = project_name;\r\n    this._isTemplate = is_template;\r\n    if(is_template) {\r\n      this._templateID = name_id;\r\n    } else {\r\n      this._objectID = name_id;\r\n    }\r\n  }\r\n\r\n  public hasFsm(fsm_id: string): boolean {\r\n    if(this._fsmDic[fsm_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public createFsm(fsm_id: string): void {\r\n    this._fsmIDs.push(fsm_id);\r\n    this._fsmDic[fsm_id] = new VE_FsmData(fsm_id, this);\r\n  }\r\n\r\n  public getFsm(fsm_id: string): VE_FsmData {\r\n    return this._fsmDic[fsm_id];\r\n  }\r\n\r\n  public hasFsmIndex(index: number): boolean {\r\n    if(index >= 0 && index < this._fsmIDs.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getFsmID(index: number): string {\r\n    return this._fsmIDs[index];\r\n  }\r\n\r\n  public hasTrigger(trigger_id: string): boolean {\r\n    if(this._triggerDic[trigger_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addTrigger(trigger_id: string, trigger_data: string[]): void {\r\n    this._triggerIDs.push(trigger_id);\r\n    this._triggerDic[trigger_id] = trigger_data;\r\n  }\r\n\r\n  public getTrigger(trigger_id: string): string[] {\r\n    return this._triggerDic[trigger_id];\r\n  }\r\n\r\n  public hasTriggerIndex(index: number): boolean {\r\n    if(index >=0 && index < this._triggerIDs.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getTriggerID(index: number): string {\r\n    return this._triggerIDs[index];\r\n  }\r\n\r\n  public hasAction(action_id: string): boolean {\r\n    if(this._actionDic[action_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addAction(action_id: string, action_data: string[], action_init_val: string[]): void {\r\n    this._actionIDs.push(action_id);\r\n    this._actionDic[action_id] = action_data;\r\n    this._actionInitValue[action_id] = action_init_val;\r\n  }\r\n\r\n  public getAction(action_id: string): string[] {\r\n    return this._actionDic[action_id];\r\n  }\r\n\r\n  public getActionInitVal(action_id: string): string[] {\r\n    return this._actionInitValue[action_id];\r\n  }\r\n\r\n  public hasActionIndex(index: number): boolean {\r\n    if(index >= 0 && index < this._actionIDs.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getActionID(index: number): string {\r\n    return this._actionIDs[index];\r\n  }\r\n\r\n  public clear(): void {\r\n    this._fsmIDs = [];\r\n    this._fsmDic = {};\r\n    this._triggerIDs = [];\r\n    this._triggerDic = {};\r\n    this._actionIDs = [];\r\n    this._actionDic = {};\r\n    this._actionInitValue = {};\r\n  }\r\n\r\n\r\n\r\n}","import { VE_DataSource, VE_StateData } from \"./index\";\r\n\r\nexport class VE_FsmData {\r\n  public get dataSource(): VE_DataSource {\r\n    return this._dataSource;\r\n  }\r\n  private _dataSource: VE_DataSource;\r\n\r\n  public get fsmID(): string {\r\n    return this._fsmID;\r\n  }\r\n  private _fsmID: string;\r\n\r\n  public get initialValStr(): string {\r\n    return this._initialValStr;\r\n  }\r\n  private _initialValStr: string = 'defalut';\r\n\r\n  private _states: VE_StateData[] = [];\r\n\r\n  public get count(): number {\r\n    return this._states.length;\r\n  }\r\n\r\n  constructor(fsm_id: string, data_source: VE_DataSource) {\r\n    this._dataSource = data_source;\r\n    this._fsmID = fsm_id;\r\n  }\r\n\r\n  initFsm(initial_var: string): void {\r\n    this._initialValStr = initial_var;\r\n  }\r\n\r\n  addState(state_data: VE_StateData): void {\r\n    this._states.push(state_data);\r\n  }\r\n\r\n  getState(index: number): VE_StateData {\r\n    return this._states[index];\r\n  }\r\n}","export * from './variableData';\r\nexport * from './fsmData';\r\nexport * from './stateActionData';\r\nexport * from './stateTriggerData';\r\nexport * from './stateData';\r\nexport * from './dataSource';\r\n\r\n","import { StateActionType } from \"../enum\";\r\n\r\nexport class VE_StateActionData {\r\n\r\n  actionID: string;\r\n  enabled: string;\r\n  everyFrame: string;\r\n  isSequence: string;\r\n  type: StateActionType;\r\n  totalString: string = '';\r\n  varID: string = '';\r\n  varValue: string = '';\r\n\r\n  constructor(action_id: string, enabled: string = 'false', every_frame: string = 'false', sequence: string = 'false', type: StateActionType = StateActionType.Action) {\r\n    this.actionID = action_id;\r\n    this.enabled = enabled;\r\n    this.everyFrame = every_frame;\r\n    this.isSequence = sequence;\r\n    this.type = type;\r\n  }\r\n\r\n  setNormalAction(action_id: string, enabled: string = 'false', every_frame: string = 'false', sequence: string = 'false'): void {\r\n    this.actionID = action_id;\r\n    this.enabled = enabled;\r\n    this.everyFrame = every_frame;\r\n    this.isSequence = sequence;\r\n    this.type = StateActionType.Action;\r\n  }\r\n\r\n  setAssignmentAction(total_string: string, var_id: string, var_value: string): void {\r\n    this.totalString = total_string;\r\n    this.varID = var_id;\r\n    this.varValue = var_value;\r\n    this.type = StateActionType.Assignment;\r\n  }\r\n\r\n}","import { VE_FsmData } from \"./index\";\r\nimport { StateConst } from \"../state\";\r\nimport { VE_StateTriggerData } from \"./stateTriggerData\";\r\nimport { VE_StateActionData } from \"./stateActionData\";\r\n\r\nexport class VE_StateData {\r\n\r\n  public get fsmData(): VE_FsmData {\r\n    return this._fsmData;\r\n  }\r\n  private _fsmData: VE_FsmData;\r\n\r\n  public get ValStr(): string {\r\n    return this._valStr;\r\n  }\r\n  private _valStr: string;\r\n\r\n  public get isInitialValue(): boolean {\r\n    return this._isInitialValue;\r\n  }\r\n  private _isInitialValue: boolean;\r\n\r\n  public get stateIndex(): number {\r\n    return this._stateIndex;\r\n  }\r\n  private _stateIndex: number = StateConst.STATE_INDEX;\r\n\r\n  public logicalExp: string = '';\r\n\r\n  private _triggers: VE_StateTriggerData[] = [];\r\n  private _actions: VE_StateActionData[] = [];\r\n  private _associatedStates: string[] = [];\r\n\r\n  public get isSequence(): boolean {\r\n    return this._isSequence;\r\n  }\r\n  private _isSequence: boolean = false;\r\n\r\n  public get triggerCount(): number {\r\n    return this._triggers.length;\r\n  }\r\n\r\n  public get actionCount(): number {\r\n    return this._actions.length;\r\n  }\r\n\r\n  public get associatedStateCount(): number {\r\n    return this._associatedStates.length;\r\n  }\r\n\r\n  constructor(fsm_data: VE_FsmData, val_str: string, is_initial_value: boolean, state_index: number = StateConst.STATE_INDEX) {\r\n    this._fsmData = fsm_data;\r\n    this._valStr = val_str;\r\n    this._isInitialValue = is_initial_value;\r\n    this._stateIndex = state_index;\r\n  }\r\n\r\n  hasTrigger(index: number): boolean {\r\n    if(index >= 0 && index < this._triggers.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addTrigger(trigger_data: VE_StateTriggerData): void {\r\n    this._triggers.push(trigger_data);\r\n  }\r\n\r\n  getTrigger(index: number): VE_StateTriggerData {\r\n    return this._triggers[index];\r\n  }\r\n\r\n  hasAction(index: number): boolean {\r\n    if(index >= 0 && index < this._actions.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addAction(action_data: VE_StateActionData): void {\r\n    this._actions.push(action_data);\r\n  }\r\n\r\n  getAction(index: number): VE_StateActionData {\r\n    return this._actions[index];\r\n  }\r\n\r\n  hasAssociatedState(index: number): boolean {\r\n    if(index >= 0 && index < this._associatedStates.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addAssociatedState(associated_state_data: string): void {\r\n    this._associatedStates.push(associated_state_data);\r\n  }\r\n\r\n  getAssociatedState(index: number): string {\r\n    return this._associatedStates[index];\r\n  }\r\n\r\n  setSequence(): void {\r\n    this._isSequence = true;\r\n  }\r\n\r\n}","export class VE_StateTriggerData {\r\n\r\n  triggerID: string;\r\n  logicalSwitch: string;\r\n  logicalExp: string;\r\n\r\n  public static get Empty(): VE_StateTriggerData {\r\n    return new VE_StateTriggerData('');\r\n  }\r\n\r\n  constructor(trigger_id: string) {\r\n    this.triggerID = trigger_id;\r\n    this.logicalSwitch = '';\r\n    this.logicalExp = '';\r\n   }\r\n}","export class VE_Variable {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  private _variableIDs: string[] = [];\r\n  private _varDics: {[key: string]: string[]} = {};\r\n\r\n  public get count(): number {\r\n    return this._variableIDs.length;\r\n  }\r\n\r\n  constructor(project_name: string) {\r\n    this._projectName = project_name;\r\n  }\r\n\r\n  hasVariable(var_id: string): boolean {\r\n    if(this._varDics[var_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addVariable(var_id: string, var_paras: string[]): void {\r\n    this._varDics[var_id] = var_paras;\r\n    this._variableIDs.push(var_id);\r\n  }\r\n\r\n  getVariableID(index: number): string {\r\n    if(index >= 0 && index < this._variableIDs.length) {\r\n      return this._variableIDs[index];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getVariableParas(var_id: string): string[] {\r\n    return this._varDics[var_id];\r\n  }\r\n\r\n  clear(): void {\r\n    this._variableIDs = [];\r\n    this._varDics = {};\r\n  }\r\n}","\r\n\r\n\r\nexport enum ActionType {\r\n  Normal, Animation\r\n}\r\n\r\nexport enum SequenceActionState {\r\n  Initial, Prepared, Running, Pause\r\n}\r\n\r\nexport enum StateActionType {\r\n  Action, Assignment\r\n}\r\n\r\nexport enum AssignType {\r\n  Variable = 0,\r\n  Template,\r\n  TemplateVariable,\r\n  Const,\r\n}\r\n\r\nexport enum AssociatedFsmType {\r\n  Object = 0,\r\n  Template\r\n}\r\n\r\nexport enum VariableScope {\r\n  Local = 0,\r\n  Fsm,\r\n  Global,\r\n  Scene\r\n}","export * from './enumTypes';","import { IPosition } from \"./positions\";\r\n\r\nexport class ExpChar implements IPosition {\r\n\r\n  private _value: string = '';\r\n  private _line: number = 0;\r\n  private _pos: number = 0;\r\n\r\n\r\n  constructor(value: string, line: number, pos: number) {\r\n    this._value = value;\r\n    this._line = line;\r\n    this._pos = pos;\r\n  }\r\n\r\n  public getValue(): string {\r\n    return this._value;\r\n  }\r\n\r\n  public getLine(): number {\r\n    return this._line;\r\n  }  \r\n  \r\n  public getPos(): number {\r\n    \r\n    return this._pos;\r\n  }\r\n\r\n  public isDigit(): boolean {\r\n    return (/\\d/).test(this._value);\r\n  }\r\n\r\n  public isLetter(): boolean {\r\n    return (/[a-zA-Z]/).test(this._value);\r\n  }\r\n\r\n  public isWhiteSpace(): boolean {\r\n    return this._value === ' ';\r\n  }\r\n\r\n  public isNewLine(): boolean {\r\n    return this._value === '\\n';\r\n  }\r\n\r\n  public isEndOfInput(): boolean {\r\n    return this._value === '\\0';\r\n  }\r\n\r\n  public is(...val: string[]): boolean {\r\n    for(let i: number = 0; i < val.length; i++) {\r\n      if(val[i] === this._value && val[i] !== '\\0') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this._value;\r\n  }\r\n\r\n}\r\n\r\n","import { Scope } from \"./scope\";\r\nimport { IExpression } from \"./expressions\";\r\nimport { ParseError, NameLocation } from \"./positions\";\r\nimport { VE_ExpressionParsing } from \"./expressionParsing\";\r\nimport { VariableScope } from \"../enum\";\r\nimport { Variable } from \"./variable\";\r\nimport { ShowError } from \"../html\";\r\n\r\nexport class ExpManager {\r\n\r\n  private static _scope: Scope;\r\n  private static _expVariable: { [key: string]: IExpression } = {};\r\n\r\n  public static errors: ParseError[] = [];\r\n\r\n  private static _projectName = '';\r\n  private static _objectID = '';\r\n\r\n  public static init() {\r\n    this._scope = Scope.Create();\r\n  }\r\n\r\n  public static isCreated(name_id: string): boolean {\r\n    if (this._scope.isCreated(name_id)) {\r\n      return true;\r\n    }\r\n    if (this._expVariable[name_id]) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public static isCreatedVariable(name_id: string): boolean {\r\n    if (this._scope.isCreated(name_id)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static isCreatedExpression(name_id: string): boolean {\r\n    if (this._expVariable[name_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static createVariable(name_id: string, type: string, value: any): boolean {\r\n    this.errors = [];\r\n    if (this.isCreated(name_id)) {\r\n      this.errors.push(ParseError.Error(new NameLocation(name_id), `变量：${name_id}，类型：${type}，该变量已创建，请勿重复创建！`));\r\n      return false;\r\n    }\r\n    this._scope.setVariable(name_id, type, value);\r\n    return true;\r\n  }\r\n\r\n  public static createExpression(name_id: string, exp_str: string): boolean {\r\n    this.errors = [];\r\n    if (this.isCreated(name_id)) {\r\n      this.errors.push(ParseError.Error(new NameLocation(name_id), `表达式名：${name_id}，表达式：${exp_str}，该表达式已定义，请勿重复定义！`));\r\n      return false;\r\n    }\r\n    let exp: IExpression = VE_ExpressionParsing.parsing(name_id, exp_str, this._scope, this._projectName, '', '', VariableScope.Scene);\r\n    if (VE_ExpressionParsing.errors.length > 0) {\r\n      for (let i: number = 0; i < VE_ExpressionParsing.errors.length; i++) {\r\n        this.errors.push(VE_ExpressionParsing.errors[i]);\r\n      }\r\n      return false;\r\n    }\r\n    this._expVariable[name_id] = exp;\r\n    return true;\r\n  }\r\n\r\n  public static getValue(name_id: string): any {\r\n    if (this.isCreated(name_id)) {\r\n      if (this.isCreatedVariable(name_id)) {\r\n        return this._scope.find(name_id)!.getValue();\r\n      } else {\r\n        return this._expVariable[name_id].evaluate();\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public static getExpression(name_id: string): IExpression | null {\r\n    if (this._expVariable[name_id]) {\r\n      return this._expVariable[name_id];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public static getVariable(name_id: string): Variable | null {\r\n    if (this.isCreatedVariable(name_id)) {\r\n      return this._scope.find(name_id);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  public static printError(): void {\r\n    if (this.errors.length > 0) {\r\n      for (let i: number = 0; i < this.errors.length; i++) {\r\n        console.log(this.errors[i].toString());\r\n        ShowError.showError(this.errors[i].toString());\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nExpManager.init();\r\n\r\ntry {\r\n  ExpManager.createVariable('first', 'number', 1);\r\n  ExpManager.createVariable('second', 'number', 2);\r\n  ExpManager.createVariable('third', 'bool', true);\r\n  console.log(ExpManager.getValue('third'));\r\n\r\n  // ExpManager.createExpression('add', '(1 + first + second * (first + second + 3)) / 2');\r\n  // ExpManager.createExpression('add', 'cos(PI/2) + sin(PI/2)');\r\n  // console.log(ExpManager.getExpression('add')!.toString());\r\n  // console.log('值： ' + ExpManager.getExpression('add')!.evaluate());\r\n\r\n  // ExpManager.createExpression('exp1', 'second + 2 * second + abs(-10)');\r\n  ExpManager.createExpression('exp1', '（first * second + second） > 10');\r\n  console.log('值2： ' + ExpManager.getExpression('exp1')!.evaluate());\r\n\r\n  // ExpManager.createExpression('multiply', 'x * y');\r\n  // ExpManager.createExpression('substract', 'x - y');\r\n\r\n  // console.log(ExpManager.getExpression('add')!.evaluate());\r\n\r\n  // console.log(ExpManager.getExpression('multiply')!.evaluate());\r\n  // console.log(ExpManager.getExpression('substract')!.evaluate());\r\n\r\n}\r\ncatch {\r\n\r\n}\r\n\r\n\r\n\r\nExpManager.printError();\r\n\r\n\r\n","export enum ExpressionType {\r\n  ID, SPECIAL_ID, KEYWORD, STRING, NUMBER, BOOL, OPERATOR, INTEGER, FLOAT, DOUBLE, EOI\r\n}","import { Scope } from \"./scope\";\r\nimport { Tokenizer } from \"./tokenizer\";\r\nimport { ParseError, IPosition } from \"./positions\";\r\nimport { IExpression, BinaryOperator, BinaryExpression, ConstantExpression } from \"./expressions\";\r\nimport { ExpressionType } from \"./expressionEnum\";\r\nimport { FunctionExpression } from \"./functionExpression\";\r\nimport { Token } from \"./token\";\r\nimport { IFunction, CustomFunctions } from \"./functions\";\r\nimport { Variable } from \"./variable\";\r\nimport { VariableExpression } from \"./variableExpression\";\r\nimport { VariableScope } from \"../enum\";\r\n\r\n\r\n\r\nexport class VE_ExpressionParsing {\r\n\r\n  private static _bracketPair: { [key: string]: string } = {};\r\n\r\n  private static _scope: Scope;\r\n  private static _tokenizer: Tokenizer;\r\n\r\n  public static errors: ParseError[] = [];\r\n\r\n  private static _projectName: string = '';\r\n  private static _objectID: string = '';\r\n  private static _fsmID = '';\r\n\r\n  private static _varScope: VariableScope = VariableScope.Local;\r\n\r\n\r\n  public static init(): void {\r\n    this._bracketPair['('] = ')';\r\n    this._bracketPair['['] = ']';\r\n    this._bracketPair['{'] = '}';\r\n    this._bracketPair['（'] = '）';\r\n    this._bracketPair['【'] = '】';\r\n  }\r\n\r\n  public static parsing(name_id: string, input_exp: string, scope: Scope, project_name: string, object_id: string, fsm_id: string, var_scope: VariableScope): IExpression {\r\n    this._scope = scope;\r\n    this._projectName = project_name;\r\n    this._objectID = object_id;\r\n    this._fsmID = fsm_id;\r\n    this._varScope = var_scope;\r\n    this._tokenizer = new Tokenizer(input_exp);\r\n    // while(!this._tokenizer.current().isEnd()) {\r\n    //   console.log(this._tokenizer.consume());\r\n    // }\r\n    this.errors = [];\r\n    return this.parse();\r\n  }\r\n\r\n  private static parse(): IExpression {\r\n    let resultExp: IExpression = this.buildExpression();\r\n    if (!this._tokenizer.current().isEnd()) {\r\n      this._tokenizer.addError(this._tokenizer.current(), `未定义字符：${this._tokenizer.current().getSource()}！`);\r\n      this._tokenizer.consume();\r\n    }\r\n    this.errors = this._tokenizer.getProblemCollector();\r\n    return resultExp;\r\n  }\r\n\r\n\r\n  private static buildExpression(): IExpression {\r\n    let left: IExpression = this.relationalExp();\r\n    if (this._tokenizer.current().isOperator('&&')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.buildExpression();\r\n      return this.reOrder(left, right, BinaryOperator.Add);\r\n    }\r\n    if (this._tokenizer.current().isOperator('||')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.buildExpression();\r\n      return this.reOrder(left, right, BinaryOperator.Or);\r\n    }\r\n    return left;\r\n  }\r\n\r\n\r\n  private static relationalExp(): IExpression {\r\n    let left: IExpression = this.algebraExp();\r\n    if (this._tokenizer.current().isOperator('<')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.LT);\r\n    }\r\n    if (this._tokenizer.current().isOperator('<=')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.LT_EQ);\r\n    }\r\n    if (this._tokenizer.current().isOperator('==')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.EQ);\r\n    }\r\n    if (this._tokenizer.current().isOperator('>=')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.GT_EQ);\r\n    }\r\n    if (this._tokenizer.current().isOperator('>')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.GT);\r\n    }\r\n    if (this._tokenizer.current().isOperator('!=')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.NEQ);\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private static algebraExp(): IExpression {\r\n    let left: IExpression = this.productExp();\r\n    if (this._tokenizer.current().isOperator('+')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.algebraExp();\r\n      return this.reOrder(left, right, BinaryOperator.Add);\r\n    }\r\n    if (this._tokenizer.current().isOperator('-')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.algebraExp();\r\n      return this.reOrder(left, right, BinaryOperator.Subtract);\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private static productExp(): IExpression {\r\n    let left: IExpression = this.exponentExp();\r\n    if (this._tokenizer.current().isOperator('*')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.productExp();\r\n      return this.reOrder(left, right, BinaryOperator.Multiply);\r\n    }\r\n    if (this._tokenizer.current().isOperator('/')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.productExp();\r\n      return this.reOrder(left, right, BinaryOperator.Divide);\r\n    }\r\n    if (this._tokenizer.current().isOperator('%')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.productExp();\r\n      return this.reOrder(left, right, BinaryOperator.Modulo);\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private static exponentExp(): IExpression {\r\n    let left: IExpression = this.atomExp();\r\n    if (this._tokenizer.current().isOperator('!') || this._tokenizer.current().isOperator('！')) {\r\n      left = new BinaryExpression(left, left, BinaryOperator.Not);\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private static atomExp(): IExpression {\r\n    // 处理起始为“-”\r\n    if (this._tokenizer.current().isOperator('-')) {\r\n      this._tokenizer.consume();\r\n      let result: BinaryExpression = new BinaryExpression(new ConstantExpression(0, 'number'), this.atomExp(), BinaryOperator.Subtract);\r\n      result.setSeal();\r\n      return result;\r\n    }\r\n    // 取非运算\r\n    if (this._tokenizer.current().isOperator('!') && (this._tokenizer.next().isIdentifier() || this._tokenizer.next().isKeyword() || this._tokenizer.next().isStartBracket())) {\r\n      this._tokenizer.consume();\r\n      let newValue: IExpression = this.atomExp();\r\n      if (newValue.expType === 'bool') {\r\n        let notExp: BinaryExpression = new BinaryExpression(newValue, newValue, BinaryOperator.Not);\r\n        return notExp;\r\n      } else {\r\n        this._tokenizer.addError(this._tokenizer.current(), '取非运算(!)后应跟着bool值类型！');\r\n        return ConstantExpression.Empty();\r\n      }\r\n    }\r\n    // 忽略最前面的“+”\r\n    if (this._tokenizer.current().isOperator('+') && this._tokenizer.next().isStartBracket()) {\r\n      this._tokenizer.consume();\r\n    }\r\n    // 忽略最前面的“+”\r\n    if (this._tokenizer.current().isOperator('+') && this._tokenizer.next().isConstant()) {\r\n      this._tokenizer.consume();\r\n    }\r\n    // 忽略最前面的“+”\r\n    if (this._tokenizer.current().isOperator('+') && this._tokenizer.next().isIdentifier()) {\r\n      this._tokenizer.consume();\r\n    }\r\n    // TODO：VeryVar解析，此处解析“*变量名”类型\r\n\r\n    // 括号开始\r\n    if (this._tokenizer.current().isStartBracket()) {\r\n      let endBracket: string = this._bracketPair[this._tokenizer.consume().getTrigger()];\r\n      let result: IExpression = this.buildExpression();\r\n      if (result.className === 'BinaryExpression') {\r\n        (<BinaryExpression>result).setSeal();\r\n      }\r\n      this.expectTrigger(ExpressionType.OPERATOR, endBracket); // 括号结束处理\r\n      return result;\r\n    }\r\n    // 一些常量\r\n    if (this._tokenizer.current().isConstant()) {\r\n      let value: any;\r\n      let typeStr: string = 'string';\r\n      if (this._tokenizer.current().isBool()) {\r\n        value = this._tokenizer.current().getContents().toLowerCase() === 'true' ? true : false;\r\n        typeStr = 'bool';\r\n      } else if (this._tokenizer.current().isNumber()) {\r\n        value = parseFloat(this._tokenizer.current().getContents());\r\n        typeStr = 'number';\r\n        // console.log('常量：' + value);\r\n      } else {\r\n        value = this._tokenizer.current().getContents();\r\n        typeStr = 'string';\r\n      }\r\n      this._tokenizer.consume();\r\n      let constantExp: IExpression = new ConstantExpression(value, typeStr);\r\n      return constantExp;\r\n    }\r\n    // 变量或函数处理\r\n    if (this._tokenizer.current().isIdentifier()) {\r\n      if (this._tokenizer.next().isStartBracket()) { // 自定义函数\r\n        // 应该用递归的方式把函数算出来，当一个值处理，在这里做一全套的\r\n        let endStart: string = this._bracketPair[this._tokenizer.next().getTrigger()];\r\n        return this.functionCall(endStart);\r\n      } else { // 变量\r\n        // VryVar变量\r\n        let varValue: Variable | null;\r\n        let loc: IPosition = this._tokenizer.current();\r\n        let variableID: string = this._tokenizer.consume().getContents();\r\n        if (variableID.endsWith('.') && this._tokenizer.current().isOperator('*') && this._tokenizer.next().isIdentifier()) { // 对象.*变量\r\n          // TODO：解析VeryVar变量，此处解析“对象.*变量名”类型\r\n          console.log('TODO：解析VeryVar变量');\r\n          return ConstantExpression.Empty();\r\n        } else {\r\n          // 一般变量\r\n          varValue = this._scope.find(variableID);\r\n          // console.log(variableID + '  ---  ' + varValue);\r\n          if (varValue === null) {\r\n            this._tokenizer.addError(loc, `变量名：${variableID}，该变量在变量作用域中未定义，也未定义该表达式，无法识别！另外，赋值响应右侧如果是公式，不允许引用模板变量！`);\r\n            return ConstantExpression.Empty();\r\n          } else {\r\n            return new VariableExpression(varValue);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 关键字处理\r\n    if (this._tokenizer.current().isKeyword()) {\r\n      // this关键字处理，专用于处理状态当前状态变量\r\n      // TODO: 与平台结合\r\n      return ConstantExpression.Empty();\r\n    }\r\n\r\n    // 暂时没有\r\n    if (this._tokenizer.current().isSpecialIdentifier()) {\r\n      this._tokenizer.addError(this._tokenizer.current(), `特殊ID：${this._tokenizer.current().getSource()}，暂时未定义，请勿使用！`);\r\n      this._tokenizer.consume();\r\n      return ConstantExpression.Empty();\r\n    }\r\n\r\n    // 未知情况\r\n    this._tokenizer.addError(this._tokenizer.current(), `检测到无效字符：${this._tokenizer.current().getSource()}，请检查！`);\r\n    this._tokenizer.consume();\r\n\r\n    return ConstantExpression.Empty();\r\n  }\r\n\r\n  private static reOrder(left: IExpression, right: IExpression, op: BinaryOperator): IExpression {\r\n    if (right.className === 'BinaryExpression') {\r\n      let rightOp: BinaryExpression = <BinaryExpression>right;\r\n      if (!rightOp.isSealed() && rightOp.getPriority() === rightOp.getPriorityOp(op)) {\r\n        this.replaceLeft(rightOp, left, op);\r\n        return right;\r\n      }\r\n    }\r\n    return new BinaryExpression(left, right, op);\r\n  }\r\n\r\n  private static replaceLeft(target: BinaryExpression, newLeft: IExpression, op: BinaryOperator): void {\r\n    if (target.getLeftExp().className === 'BinaryExpression') {\r\n      let leftOp: BinaryExpression = <BinaryExpression>target.getLeftExp();\r\n      if (!leftOp.isSealed() && leftOp.getPriority() === leftOp.getPriorityOp(op)) {\r\n        this.replaceLeft(leftOp, newLeft, op);\r\n        return;\r\n      }\r\n    }\r\n    target.setLeftExp(new BinaryExpression(newLeft, target.getLeftExp(), op));\r\n  }\r\n\r\n  private static functionCall(end_bracket: string): IExpression {\r\n    let call: FunctionExpression = new FunctionExpression();\r\n    let funcToken: Token = this._tokenizer.consume();\r\n    if (!CustomFunctions.hasFunction(funcToken.getContents())) {\r\n      this._tokenizer.addError(funcToken, `未定义函数：${funcToken.getContents()}！`);\r\n      return ConstantExpression.Empty();\r\n    }\r\n    let fun: IFunction = CustomFunctions.createFunction(funcToken.getContents());\r\n    call.setFunction(fun);\r\n    this._tokenizer.consume(); // 消除（\r\n    while (!this._tokenizer.current().isOperator(end_bracket) && !this._tokenizer.current().isEnd()) {\r\n      if (call.paraCount() !== 0) {\r\n        this.expectTrigger(ExpressionType.OPERATOR, ',');\r\n      }\r\n      call.addPara(this.buildExpression());\r\n    }\r\n    this.expectTrigger(ExpressionType.OPERATOR, end_bracket);\r\n    call.evaluate();\r\n    if (call.paraCount() > fun.parameterNumber() && fun.parameterNumber() >= 0) {\r\n      this._tokenizer.addError(funcToken, `函数参数不一致，当前函数：${funcToken.getContents()}，规定参数个数Max：${fun.parameterNumber()}，当前参数个数：${call.paraCount()}，请检查！`);\r\n      return ConstantExpression.Empty();\r\n    }\r\n    return call;\r\n  }\r\n\r\n  private static expectTrigger(type: ExpressionType, trigger: string): void {\r\n    if (this._tokenizer.current().matches(type, trigger)) {\r\n      this._tokenizer.consume();\r\n    } else {\r\n      this._tokenizer.addError(this._tokenizer.current(), `期望获得：${trigger}，当前值为：${this._tokenizer.current().getTrigger()}，请检查！`);\r\n    }\r\n  }\r\n\r\n  public static getProjectCollector(): ParseError[] {\r\n    return this._tokenizer.getProblemCollector();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nVE_ExpressionParsing.init();","/////<reference path=\"dictionary.ts\" />\r\nimport { Dictionary } from \"../utility/dictionary\";\r\n\r\nexport interface IExpression {\r\n  expType: string;\r\n  className: string;\r\n  evaluate(): any;\r\n  clone(): IExpression;\r\n}\r\n\r\nexport class TrueExpression implements IExpression {\r\n  public get expType(): string {\r\n    return 'bool';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'TrueExpression';\r\n  }\r\n\r\n  public get value(): boolean {\r\n    return true;\r\n  }\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public evaluate(): any {\r\n    return true;\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let exp: TrueExpression = new TrueExpression();\r\n    return exp;\r\n  }\r\n\r\n  public toString(): string {\r\n    return 'true';\r\n  }\r\n}\r\n\r\nexport class ConstantExpression implements IExpression {\r\n\r\n  public get expType(): string {\r\n    return this._expType;\r\n  }\r\n  private _expType: string = 'string';\r\n\r\n  public get className(): string {\r\n    return 'ConstantExpression';\r\n  }\r\n\r\n  private _value: any;\r\n\r\n  constructor(value: any, type: string) {\r\n    this._value = value;\r\n    this._expType = type;\r\n  }\r\n\r\n  public evaluate(): any {\r\n    return this._value;\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let expClone: ConstantExpression = new ConstantExpression(this._value, this._expType);\r\n    return expClone;\r\n  }\r\n\r\n  public static Empty(): ConstantExpression {\r\n    return new ConstantExpression(null, 'string');\r\n  }\r\n\r\n  public isEmpty(): boolean {\r\n    if (this._expType === 'string' && this._value === null) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public toString(): string {\r\n    if (this._value !== null) {\r\n      return this._value.toString();\r\n    } else {\r\n      return 'null';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport enum BinaryOperator {\r\n  Add = '+', Subtract = '-', Multiply = '*', Divide = '/', Modulo = '%', Power = '^', LT = '<', LT_EQ = '<=', EQ = '=', GT_EQ = '>=', GT = '>', NEQ = '!=', And = '&&', Or = '||', Not = '!'\r\n}\r\n\r\nexport class BinaryExpression implements IExpression {\r\n\r\n  public get expType(): string {\r\n    return this._expType;\r\n  }\r\n  private _expType = '';\r\n\r\n  public get className(): string {\r\n    return 'BinaryExpression';\r\n  }\r\n\r\n  private _op: BinaryOperator = BinaryOperator.EQ;\r\n\r\n  private _left: IExpression;\r\n  private _right: IExpression;\r\n  private _isSealed: boolean = false;\r\n\r\n  private static _opDic: { [key: string]: BinaryOperator } = {};\r\n\r\n  private static _priority: Dictionary<BinaryOperator, number> = new Dictionary<BinaryOperator, number>();\r\n\r\n  // private static _priorityKey: BinaryOperator[] = [BinaryOperator.Not, BinaryOperator.Power, BinaryOperator.Multiply, BinaryOperator.Divide, BinaryOperator.Modulo, BinaryOperator.Add, BinaryOperator.Subtract, BinaryOperator.LT, BinaryOperator.LT_EQ, BinaryOperator.EQ, BinaryOperator.GT_EQ, BinaryOperator.GT, BinaryOperator.NEQ, BinaryOperator.And, BinaryOperator.Or];\r\n\r\n  // private static _priorityValue: number[] = [2, 3, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7];\r\n\r\n  public static init(): void {\r\n    this._opDic[\"+\"] = BinaryOperator.Add;\r\n    this._opDic[\"-\"] = BinaryOperator.Subtract;\r\n    this._opDic[\"*\"] = BinaryOperator.Multiply;\r\n    this._opDic[\"/\"] = BinaryOperator.Divide;\r\n    this._opDic[\"%\"] = BinaryOperator.Modulo;\r\n    this._opDic[\"**\"] = BinaryOperator.Power;\r\n    this._opDic[\"^\"] = BinaryOperator.Power;\r\n    this._opDic[\"<\"] = BinaryOperator.LT;\r\n    this._opDic[\"<=\"] = BinaryOperator.LT_EQ;\r\n    this._opDic[\"==\"] = BinaryOperator.EQ;\r\n    this._opDic[\">=\"] = BinaryOperator.GT_EQ;\r\n    this._opDic[\">\"] = BinaryOperator.GT;\r\n    this._opDic[\"!=\"] = BinaryOperator.NEQ;\r\n    this._opDic[\"&&\"] = BinaryOperator.And;\r\n    this._opDic[\"||\"] = BinaryOperator.Or;\r\n    this._opDic[\"!\"] = BinaryOperator.Not;\r\n    this._opDic[\"！\"] = BinaryOperator.Not;\r\n\r\n    this._priority.Add(BinaryOperator.Not, 2);\r\n    this._priority.Add(BinaryOperator.Power, 3);\r\n    this._priority.Add(BinaryOperator.Multiply, 4); this._priority.Add(BinaryOperator.Divide, 4); this._priority.Add(BinaryOperator.Modulo, 4);\r\n    this._priority.Add(BinaryOperator.Add, 5); this._priority.Add(BinaryOperator.Subtract, 5);\r\n    this._priority.Add(BinaryOperator.LT, 6); this._priority.Add(BinaryOperator.LT_EQ, 6); this._priority.Add(BinaryOperator.EQ, 6); this._priority.Add(BinaryOperator.GT_EQ, 6); this._priority.Add(BinaryOperator.GT, 6); this._priority.Add(BinaryOperator.NEQ, 6);\r\n    this._priority.Add(BinaryOperator.And, 7); this._priority.Add(BinaryOperator.Or, 7);\r\n  }\r\n\r\n  constructor(left_exp: IExpression, right_exp: IExpression, op: BinaryOperator) {\r\n    this._left = left_exp;\r\n    this._right = right_exp;\r\n    this._op = op;\r\n    // console.log(this._left);\r\n    // console.log(this._right);\r\n    this._expType = this.resultAutoType(left_exp, right_exp, op);\r\n    if (this._expType === 'null') {\r\n      console.log(\"公式两边类型不匹配，左侧类型：\" + left_exp.expType + \"，右侧类型：\" + right_exp.expType + \"，计算类型：\" + op.toString());\r\n    }\r\n  }\r\n\r\n  private resultAutoType(left: IExpression, right: IExpression, op: BinaryOperator): string {\r\n    if (op === BinaryOperator.Add) {\r\n      if (left.expType === 'string' || right.expType === 'string') {\r\n        return 'string';\r\n      }\r\n      else if (left.expType === 'bool' || right.expType === 'bool') {\r\n        return 'null';\r\n      }\r\n      else if (left.expType === 'number' || right.expType === 'number') {\r\n        return 'number';\r\n      }\r\n      else if (left.expType === 'vector3' || right.expType === 'vector3') {\r\n        return 'vector3';\r\n      }\r\n      else if (left.expType === 'vector2' || right.expType === 'vector2') {\r\n        return 'vector2';\r\n      }\r\n      else {\r\n        return 'null';\r\n      }\r\n    } else if (op === BinaryOperator.Divide || op === BinaryOperator.Multiply || op === BinaryOperator.Modulo || op === BinaryOperator.Power || op === BinaryOperator.Subtract) {\r\n      if (left.expType === 'string' || right.expType === 'string' || left.expType === 'bool' || left.expType === 'bool') {\r\n        return 'null';\r\n      }\r\n      else if (left.expType === 'vector3' && right.expType === 'vector3' && op === BinaryOperator.Subtract) {\r\n        return 'vector3';\r\n      }\r\n      else if (left.expType === 'vector2' && right.expType === 'vector2' && op === BinaryOperator.Subtract) {\r\n        return 'vector2';\r\n      }\r\n      else if ((left.expType === 'number' && right.expType === 'vector3' && op === BinaryOperator.Multiply) || (left.expType === 'vector3' && right.expType === 'number' && op == BinaryOperator.Multiply)) {\r\n        return 'vector3';\r\n      }\r\n      else if ((left.expType === 'number' && right.expType === 'vector2' && op === BinaryOperator.Multiply) || (left.expType === 'vector2' && right.expType === 'number' && op == BinaryOperator.Multiply)) {\r\n        return 'vector2';\r\n      }\r\n      else if (left.expType === 'vector3' && right.expType === 'number' && op === BinaryOperator.Divide) {\r\n        return 'vector3';\r\n      }\r\n      else if (left.expType === 'vector2' && right.expType === 'number' && op === BinaryOperator.Divide) {\r\n        return 'vector2';\r\n      }\r\n      else if (left.expType === 'number' || right.expType === 'number') {\r\n        return 'number';\r\n      }\r\n      else {\r\n        return 'null';\r\n      }\r\n    } else if (op === BinaryOperator.LT || op === BinaryOperator.LT_EQ || op === BinaryOperator.GT_EQ || op === BinaryOperator.GT) {\r\n      if (left.expType === 'string' || right.expType === 'string' || left.expType === 'bool' || right.expType === 'bool') {\r\n        return 'null';\r\n      } else {\r\n        return 'bool';\r\n      }\r\n    } else if (op === BinaryOperator.NEQ || op === BinaryOperator.EQ) {\r\n      if (right.expType !== left.expType) {\r\n        return 'null';\r\n      } else {\r\n        return 'bool';\r\n      }\r\n    } else if (op === BinaryOperator.Not) {\r\n      if (right.expType !== 'bool') {\r\n        return 'null';\r\n      } else {\r\n        return 'bool';\r\n      }\r\n    } else {\r\n      return 'string';\r\n    }\r\n  }\r\n\r\n  public setLeftExp(left_exp: IExpression): void {\r\n    this._left = left_exp;\r\n  }\r\n\r\n  public setRightExp(right_exp: IExpression): void {\r\n    this._right = right_exp;\r\n  }\r\n\r\n  public getOp(): BinaryOperator {\r\n    return this._op;\r\n  }\r\n\r\n  public getLeftExp(): IExpression {\r\n    return this._left;\r\n  }\r\n\r\n  public getRightExp(): IExpression {\r\n    return this._right;\r\n  }\r\n\r\n  public isSealed(): boolean {\r\n    return this._isSealed;\r\n  }\r\n\r\n  public setSeal(): void {\r\n    this._isSealed = true;\r\n  }\r\n\r\n  public toString(): string {\r\n    return \"(\" + this._left.toString() + \" \" + this._op.toString() + \" \" + this._right.toString() + \")\";\r\n    // return this._left.toString() + this._op.toString() + this._right.toString();\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let expClone: BinaryExpression = new BinaryExpression(this._left.clone(), this._right.clone(), this._op);\r\n    return expClone;\r\n  }\r\n\r\n  public evaluate(): any {\r\n    if (this._expType === 'null') {\r\n      return null;\r\n    }\r\n    if (this._left.className === 'FunctionExpression') {\r\n      this._left.evaluate();\r\n    }\r\n    if (this._right.className === 'FunctionExpression') {\r\n      this._right.evaluate();\r\n    }\r\n    this._expType = this.resultAutoType(this._left, this._right, this._op);\r\n    let leftValue: any = this._left.evaluate();\r\n    let rightValue: any = this._right.evaluate();\r\n    if (leftValue === null || rightValue === null) {\r\n      return null;\r\n    }\r\n    if (this._op === BinaryOperator.Add) {\r\n      if (this._expType === 'string') {\r\n        return leftValue.toString() + rightValue.toString();\r\n      } else if (this._expType === 'number') {\r\n        return leftValue + rightValue;\r\n      } else if (this._expType === 'vector3') {\r\n        return (<BABYLON.Vector3>leftValue).add((<BABYLON.Vector3>rightValue));\r\n      } else if (this._expType === 'vector2') {\r\n        return (<BABYLON.Vector2>leftValue).add((<BABYLON.Vector2>rightValue));\r\n      } else {\r\n        return null;\r\n      }\r\n    } else if (this._op === BinaryOperator.Subtract) {\r\n      if (this._expType === 'number') {\r\n        return leftValue - rightValue;\r\n      } else if (this._expType === 'vector3') {\r\n        return (<BABYLON.Vector3>leftValue).subtract((<BABYLON.Vector3>rightValue));\r\n      } else if (this._expType === 'vector2') {\r\n        return (<BABYLON.Vector2>leftValue).subtract((<BABYLON.Vector2>rightValue));\r\n      } else {\r\n        return null;\r\n      }\r\n    } else if (this._op === BinaryOperator.Multiply) {\r\n      if (this._expType === 'number') {\r\n        return leftValue * rightValue;\r\n      } else if (this._expType === 'vector3') {\r\n        if (typeof (leftValue) === 'number') {\r\n          return (<BABYLON.Vector3>rightValue).multiplyByFloats(leftValue, leftValue, leftValue);\r\n        } else if (typeof (rightValue) === 'number') {\r\n          return (<BABYLON.Vector3>leftValue).multiplyByFloats(rightValue, rightValue, rightValue);\r\n        } else {\r\n          return null;\r\n        }\r\n      } else if (this._expType === 'vector2') {\r\n        if (typeof (leftValue) === 'number') {\r\n          return (<BABYLON.Vector2>rightValue).multiplyByFloats(leftValue, leftValue);\r\n        } else if (typeof (rightValue) === 'number') {\r\n          return (<BABYLON.Vector2>leftValue).multiplyByFloats(rightValue, rightValue);\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    } else if (this._op === BinaryOperator.Divide) {\r\n      if (this._expType === 'number') {\r\n        return leftValue / rightValue;\r\n      } else if (this._expType === 'vector3') {\r\n        if (typeof (rightValue) === 'number') {\r\n          return new BABYLON.Vector3((<BABYLON.Vector3>leftValue).x / rightValue, (<BABYLON.Vector3>leftValue).y / rightValue, (<BABYLON.Vector3>leftValue).z / rightValue);\r\n        } else {\r\n          return null;\r\n        }\r\n      } else if (this._expType === 'vector2') {\r\n        if (typeof (rightValue) === 'number') {\r\n          return new BABYLON.Vector2((<BABYLON.Vector2>leftValue).x / rightValue, (<BABYLON.Vector2>leftValue).y / rightValue);\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    } else if (this._op === BinaryOperator.Modulo) {\r\n      if (typeof (leftValue) === 'number' && typeof (rightValue) === 'number') {\r\n        return leftValue % rightValue;\r\n      } else {\r\n        return null;\r\n      }\r\n    } else if (this._op === BinaryOperator.Power) {\r\n      if (typeof (leftValue) === 'number' && typeof (rightValue) === 'number') {\r\n        return Math.pow(leftValue, rightValue);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else if (this._op === BinaryOperator.And) {\r\n      let l: boolean = this.getBoolean(leftValue);\r\n      let r: boolean = this.getBoolean(rightValue);\r\n      return l && r;\r\n    } else if (this._op === BinaryOperator.Or) {\r\n      let l: boolean = this.getBoolean(leftValue);\r\n      let r: boolean = this.getBoolean(rightValue);\r\n      return l || r;\r\n    } else if (this._op === BinaryOperator.LT) {\r\n      return leftValue < rightValue;\r\n    } else if (this._op === BinaryOperator.LT_EQ) {\r\n      return leftValue <= rightValue;\r\n    } else if (this._op === BinaryOperator.GT_EQ) {\r\n      return leftValue >= rightValue;\r\n    } else if (this._op === BinaryOperator.GT) {\r\n      return leftValue > rightValue;\r\n    } else if (this._op === BinaryOperator.EQ) {\r\n      return leftValue === rightValue;\r\n    } else if (this._op === BinaryOperator.NEQ) {\r\n      return leftValue !== rightValue;\r\n    } else if (this._op === BinaryOperator.Not) {\r\n      return !this.getBoolean(rightValue);\r\n    } else {\r\n      return !this.getBoolean(leftValue);\r\n    }\r\n  }\r\n\r\n  private getBoolean(value: any): boolean {\r\n    if (typeof (value) === 'number') {\r\n      if (value === 0) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else if (typeof (value) === 'string') {\r\n      if (value === '') {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else if (typeof (value) === 'boolean') {\r\n      return value;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getPriority(): number {\r\n    // let p: number = BinaryExpression._priorityKey.indexOf(this._op);\r\n    // if(p > -1) {\r\n    //   return BinaryExpression._priorityValue[p];\r\n    // } else {\r\n    //   return 100;\r\n    // }\r\n    let p: number | null = BinaryExpression._priority.GetValue(this._op);\r\n    if(p === null) {\r\n      return 100;\r\n    } else {\r\n      return p;\r\n    }\r\n  }\r\n\r\n  public getPriorityOp(op: BinaryOperator): number {\r\n    // let p: number = BinaryExpression._priorityKey.indexOf(op);\r\n    // if(p > -1) {\r\n    //   return BinaryExpression._priorityValue[p];\r\n    // } else {\r\n    //   return 100;\r\n    // }\r\n    let p: number | null = BinaryExpression._priority.GetValue(op);\r\n    if(p === null) {\r\n      return 100;\r\n    } else {\r\n      return p;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nBinaryExpression.init();","import { ParseError } from \"./positions\";\r\n\r\nexport abstract class ForwardQuery<T> {\r\n\r\n  protected itemBuffer: Array<T> = [];\r\n\r\n  protected endReached: boolean = false;\r\n\r\n  protected problemCollector: Array<ParseError> = [];\r\n\r\n  protected endOfInputIndicator: T | undefined = undefined;\r\n\r\n  public next(): T {\r\n    return this.nextOffset(1);\r\n  }\r\n\r\n  public nextOffset(offset: number): T {\r\n    while (this.itemBuffer.length <= offset && !this.endReached) {\r\n      let item: T | undefined = this.fetch();\r\n      if (item !== undefined) {\r\n        this.itemBuffer.push(item);\r\n      } else {\r\n        this.endReached = true;\r\n      }\r\n    }\r\n    if (offset >= this.itemBuffer.length) {\r\n      if (this.endOfInputIndicator === undefined) {\r\n        this.endOfInputIndicator = this.endOfInput();\r\n      }\r\n      return this.endOfInputIndicator;\r\n    } else {\r\n      return this.itemBuffer[offset];\r\n    }\r\n  }\r\n\r\n  public current(): T {\r\n    return this.nextOffset(0);\r\n  }\r\n\r\n  protected abstract endOfInput(): T;\r\n\r\n  protected abstract fetch(): T | undefined;\r\n\r\n  public consume(): T {\r\n    let result: T = this.current();\r\n    this.consumeNext(1);\r\n    return result;\r\n  }\r\n\r\n  public consumeNext(numberOfItems: number): void {\r\n    if (numberOfItems < 0) {\r\n      return;\r\n    }\r\n    while (numberOfItems-- > 0) {\r\n      if (this.itemBuffer.length !== 0) {\r\n        this.itemBuffer.shift();\r\n      } else {\r\n        if (this.endReached) {\r\n          return;\r\n        } else {\r\n          let item: T | undefined = this.fetch();\r\n          if (item === undefined) {\r\n            this.endReached = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public getProblemCollector(): Array<ParseError> {\r\n    return this.problemCollector;\r\n  }\r\n\r\n  public setProblemCollector(problemCollector: Array<ParseError>): void {\r\n    this.problemCollector = problemCollector;\r\n  }\r\n\r\n\r\n}","import { IExpression } from \"./expressions\";\r\nimport { IFunction } from \"./functions\";\r\n\r\nexport class FunctionExpression implements IExpression {\r\n\r\n  public get expType(): string {\r\n    return this._function.expType;\r\n  }\r\n\r\n  public get className(): string {\r\n    return this._function.className;\r\n  }\r\n\r\n  private _function!: IFunction;\r\n  private _paras: IExpression[] = [];\r\n\r\n  public setFunction(func: IFunction): void {\r\n    this._function = func;\r\n  }\r\n\r\n  public addPara(exp: IExpression): void {\r\n    this._paras.push(exp);\r\n  }\r\n\r\n  public paraCount(): number {\r\n    return this._paras.length;\r\n  }\r\n\r\n  public evaluate(): any {\r\n    let r: any = null;\r\n    try {\r\n      r = this._function.evaluate(this._paras);\r\n    } catch (e) {\r\n      console.log('自定义函数编译错误，错误信息：' + e);\r\n      return null;\r\n    }\r\n    return r;\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let expClone: FunctionExpression = new FunctionExpression();\r\n    expClone._function = this._function;\r\n    for (let i: number = 0; i < this._paras.length; i++) {\r\n      expClone._paras.push(this._paras[i].clone());\r\n    }\r\n    return expClone;\r\n  }\r\n\r\n  public toString(): string {\r\n    let printStr: string = this._function.className + '(';\r\n    for(let i: number = 0; i < this._paras.length; i++) {\r\n      if(i > 0) {\r\n        printStr += ',' + this._paras[i].toString();\r\n      } else {\r\n        printStr += this._paras[i].toString();\r\n      }\r\n    }\r\n    return printStr + ')';\r\n  }\r\n\r\n}","import { IExpression } from \"./expressions\";\r\nimport { ShowError } from \"../html\";\r\n\r\nexport interface IFunction {\r\n  expType: string;\r\n  className: string;\r\n  parameterNumber(): number;\r\n  evaluate(args: Array<IExpression>): any;\r\n}\r\n\r\nexport class Pow implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'pow';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 2;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.pow(args[0].evaluate(), args[1].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Pow函数参数错误，参数1类型：${args[0].expType}，参数1值：${args[0].evaluate()}，参数2类型：${args[1].expType}，参数2值：${args[1].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Ln implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'ln';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.log(args[0].evaluate());\r\n    if (value === NaN || value === Infinity) {\r\n      ShowError.showError(`表达式编译错误：Ln函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Lg implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'lg';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.log10(args[0].evaluate());\r\n    if (value === NaN || value === Infinity) {\r\n      ShowError.showError(`表达式编译错误：Lg函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Sqrt implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'sqrt';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.sqrt(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Sqrt函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Abs implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'abs';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.abs(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Abs函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Random implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'random';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 2;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let start: number = args[0].evaluate();\r\n    let distance: number = args[1].evaluate() - args[0].evaluate();\r\n    let value: number = Math.random() * distance + start;\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Random函数参数错误，参数1类型：${args[0].expType}，参数1值：${args[0].evaluate()}，参数2类型：${args[1].expType}，参数2值：${args[1].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Round implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'round';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.round(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Round函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Sin implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'sin';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.sin(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Sin函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ASin implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'asin';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.asin(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：ASin函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Cos implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'cos';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.cos(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Cos函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ACos implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'acos';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.acos(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：ACos函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Tan implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'tan';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.tan(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Tan函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ATan implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'atan';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.atan(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：ATan函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class CustomFunctions {\r\n  private static _functions: {[key:string]: IFunction} = {};\r\n\r\n  public static hasFunction(func_name: string): boolean {\r\n    func_name = func_name.toLowerCase();\r\n    if(this._functions[func_name]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static addFunction(func: IFunction): void {\r\n    let funcName: string = func.className.toLowerCase();\r\n    if(this._functions[funcName]) {\r\n      ShowError.showError(`自定义函数初始化错误，函数ID重复，当前函数ID：${funcName}，请为当前自定义函数重新分配ID！`);\r\n    } else {\r\n      this._functions[funcName] = func;\r\n    }\r\n  }\r\n\r\n  public static createFunction(func_name: string): IFunction {\r\n    func_name = func_name.toLowerCase();\r\n    return Object.create(this._functions[func_name]);\r\n  }\r\n\r\n  public static remove(func_name: string): void {\r\n    func_name = func_name.toLowerCase();\r\n    delete this._functions[func_name];\r\n  }\r\n}\r\n\r\n\r\nCustomFunctions.addFunction(new Pow());\r\nCustomFunctions.addFunction(new Ln());\r\nCustomFunctions.addFunction(new Lg());\r\nCustomFunctions.addFunction(new Sqrt());\r\nCustomFunctions.addFunction(new Abs());\r\nCustomFunctions.addFunction(new Random());\r\nCustomFunctions.addFunction(new Round());\r\nCustomFunctions.addFunction(new Sin());\r\nCustomFunctions.addFunction(new ASin());\r\nCustomFunctions.addFunction(new Cos());\r\nCustomFunctions.addFunction(new ACos());\r\nCustomFunctions.addFunction(new Tan());\r\nCustomFunctions.addFunction(new ATan());\r\n\r\n","export * from './expressionEnum';\r\nexport * from './expressions';\r\nexport * from './functions';\r\nexport * from './positions';\r\nexport * from './expChar';\r\nexport * from './token';\r\nexport * from './forwardQuery';\r\nexport * from './tokenizer';\r\nexport * from './tokenReader';\r\nexport * from './variable';\r\nexport * from './variableExpression';\r\nexport * from './scope';\r\nexport * from './functionExpression';\r\nexport * from './expressionParsing';\r\nexport * from './expManager';","export interface IPosition {\r\n  getLine(): number;\r\n  getPos(): number;\r\n}\r\n\r\n\r\nexport class NameLocation implements IPosition {\r\n\r\n  private _value: string = '';\r\n  private _line: number = 0;\r\n  private _pos: number = 0;\r\n\r\n\r\n  constructor(value: string) {\r\n    this._value = value;\r\n    this._line = 1;\r\n    this._pos = 1;\r\n  }\r\n\r\n\r\n  public getValue(): string {\r\n    return this._value;\r\n  }\r\n\r\n  public getLine(): number {\r\n    return this._line;\r\n  }  \r\n  \r\n  \r\n  public getPos(): number {\r\n    return this._pos;\r\n  }\r\n}\r\n\r\nexport enum Severity{\r\n  Warning,\r\n  Error\r\n}\r\n\r\nexport class ParseError{\r\n\r\n  private _pos: IPosition;\r\n  private _message: string;\r\n  private _severity: Severity;\r\n\r\n  constructor(pos: IPosition, msg: string, severity: Severity) {\r\n    this._pos = pos;\r\n    this._message = msg;\r\n    this._severity = severity;\r\n  }\r\n\r\n  public static Warning(pos: IPosition, msg: string): ParseError {\r\n    let message: string = msg;\r\n    if(pos.getLine() > 0) {\r\n      message = `警告>>>行号：${pos.getLine()}，字符序号：${pos.getPos()}，警告信息：${msg}`;\r\n    }\r\n    return new ParseError(pos, message, Severity.Warning);\r\n  }\r\n\r\n  public static Error(pos: IPosition, msg: string): ParseError {\r\n    let message: string = msg;\r\n    if(pos.getLine() > 0) {\r\n      message = `错误>>>行号：${pos.getLine()}，字符序号：${pos.getPos()}，警告信息：${msg}`;\r\n    }\r\n    return new ParseError(pos, message, Severity.Error);\r\n  }\r\n\r\n  public getPosition(): IPosition {\r\n    return this._pos;\r\n  }\r\n\r\n  public getMessage(): string {\r\n    return this._message;\r\n  }\r\n\r\n  public getSeverity(): Severity {\r\n    return this._severity;\r\n  }\r\n\r\n  public toString(): string {\r\n    return `类型：${this._severity.toString()}，信息：${this._message}`;\r\n  }\r\n\r\n}","import { Variable } from \"./variable\";\r\n\r\nexport class Scope {\r\n\r\n  private _parent: Scope | undefined = undefined;\r\n\r\n  private _context: { [key: string]: Variable } = {};\r\n\r\n  private static _root: Scope;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public static Create(): Scope {\r\n    let result: Scope = new Scope();\r\n    result._parent = Scope.GetRootScope();\r\n    return result;\r\n  }\r\n\r\n  public static GetRootScope(): Scope {\r\n    if (Scope._root === undefined) {\r\n      Scope._root = new Scope();\r\n      Scope._root.setVariable(\"PI\", 'number', Math.PI).makeConstant(Math.PI);\r\n      Scope._root.setVariable(\"EULER\", 'number', Math.E).makeConstant(Math.E);\r\n    }\r\n    return Scope._root;\r\n  }\r\n\r\n  public static CreateWithParent(parent: Scope): Scope {\r\n    let result: Scope = Scope.Create();\r\n    result._parent = parent;\r\n    return result;\r\n  }\r\n\r\n  public find(name: string): Variable | null {\r\n    if (this._context[name]) {\r\n      return this._context[name];\r\n    }\r\n    if (this._parent !== undefined) {\r\n      return this._parent.find(name);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public setVariable(name: string, type: string, value: any): Variable {\r\n    let result: Variable | null = this.find(name);\r\n    if (result !== null) {\r\n      result.setType(type);\r\n      result.setValue(value);\r\n      return result;\r\n    }\r\n    return this.createVariable(name, type, value);\r\n  }\r\n\r\n  public createVariable(name: string, type: string, value: any): Variable {\r\n    if (this._context[name]) {\r\n      this._context[name].setType(type);\r\n      this._context[name].setValue(value);\r\n      return this._context[name];\r\n    }\r\n    let result: Variable = new Variable(name, type, value);\r\n    this._context[name] = result;\r\n    return result;\r\n  }\r\n\r\n\r\n  public setValue(name: string, value: any): void {\r\n    if (this._context[name]) {\r\n      this._context[name].setValue(value);\r\n    }\r\n  }\r\n\r\n  public isCreated(name: string): boolean {\r\n    if (this._context[name]) {\r\n      return true;\r\n    }\r\n    if (this._parent !== undefined) {\r\n      if (this._parent.find(name) !== null) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public clear(): void {\r\n    this._context = {};\r\n  }\r\n\r\n}","import { IPosition } from \"./positions\";\r\nimport { ExpressionType } from \"./expressionEnum\";\r\nimport { ExpChar } from \"./expChar\";\r\n\r\nexport class Token implements IPosition {\r\n\r\n  public type: ExpressionType = ExpressionType.STRING;\r\n\r\n  private _source: string = '';\r\n  private _contents: string = '';\r\n  private _trigger: string = '';\r\n\r\n  private _line: number = 0;\r\n  private _pos: number = 0;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public static Create(type: ExpressionType, pos: IPosition): Token {\r\n    let result: Token = new Token();\r\n    result.type = type;\r\n    result._line = pos.getLine();\r\n    result._pos = pos.getPos();\r\n    return result;\r\n  }\r\n\r\n  public static CreateAndFill(type: ExpressionType, ch: ExpChar): Token {\r\n    let result: Token = new Token();\r\n    result.type = type;\r\n    result._line = ch.getLine();\r\n    result._pos = ch.getPos();\r\n    result._contents = ch.getValue();\r\n    result._trigger = ch.getValue();\r\n    result._source = ch.toString();\r\n    return result;\r\n  }\r\n\r\n  public addToTrigger(ch: ExpChar): Token {\r\n    this._trigger += ch.getValue();\r\n    this._source += ch.getValue();\r\n    return this;\r\n  }\r\n\r\n  public addToSource(ch: ExpChar): Token {\r\n    this._source += ch.getValue();\r\n    return this;\r\n  }\r\n\r\n  public addToContentChar(ch: ExpChar): Token {\r\n    this.addToContent(ch.getValue());\r\n    return this;\r\n  }\r\n\r\n  public addToContent(ch: string): Token {\r\n    this._contents += ch;\r\n    this._source += ch;\r\n    return this;\r\n  }\r\n\r\n  public getTrigger(): string {\r\n    return this._trigger;\r\n  }\r\n\r\n  public getTokenType(): ExpressionType {\r\n    return this.type;\r\n  }\r\n\r\n  public getContents(): string {\r\n    return this._contents;\r\n  }\r\n\r\n  public getSource(): string {\r\n    return this._source;\r\n  }\r\n\r\n  public getLine(): number {\r\n    return this._line;\r\n  }\r\n\r\n  public getPos(): number {\r\n    return this._pos;\r\n  }\r\n\r\n  public setTokenType(new_type: ExpressionType): void {\r\n    this.type = new_type;\r\n  }\r\n\r\n  public setTrigger(trigger: string): void {\r\n    this._trigger = trigger;\r\n  }\r\n\r\n  public setContent(content: string): void {\r\n    this._contents = content;\r\n  }\r\n\r\n  public setSource(source: string): void {\r\n    this._source = source;\r\n  }\r\n\r\n  public isEnd(): boolean {\r\n    return this.type === ExpressionType.EOI;\r\n  }\r\n\r\n  public is(type: ExpressionType): boolean {\r\n    return this.type === type;\r\n  }\r\n\r\n  public matches(type: ExpressionType, trigger: string): boolean {\r\n    if (!this.is(type)) {\r\n      return false;\r\n    }\r\n    if (trigger === '') {\r\n      return false;\r\n    }\r\n    return this.getTrigger() === trigger;\r\n  }\r\n\r\n  public isOperator(symbols: string): boolean {\r\n    if (symbols.length === 0) {\r\n      return this.is(ExpressionType.OPERATOR);\r\n    }\r\n    for (let i: number = 0; i < symbols.length; i++) {\r\n      if (this.matches(ExpressionType.OPERATOR, symbols[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isStartBracket(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === '(' || this._trigger === '（') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isEndBracket(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === ')' || this._trigger === '）') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isStartSquareBracket(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === '[' || this._trigger === '【') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isEndSquareBracket(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === ']' || this._trigger === '】') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isStartBrace(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === '{') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isEndBrace(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === '}') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isKeyword(...keywords: string[]): boolean {\r\n    if (keywords.length === 0) {\r\n      return this.is(ExpressionType.KEYWORD);\r\n    }\r\n    for (let i: number = 0; i < keywords.length; i++) {\r\n      if (this.matches(ExpressionType.KEYWORD, keywords[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isIdentifier(...values: string[]): boolean {\r\n    if (values.length === 0) {\r\n      return this.is(ExpressionType.ID);\r\n    }\r\n    for (let i: number = 0; i < values.length; i++) {\r\n      if (this.matches(ExpressionType.ID, values[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isSpecialIdentifier(...triggers: string[]): boolean {\r\n    if (triggers.length === 0) {\r\n      return this.is(ExpressionType.SPECIAL_ID);\r\n    }\r\n    for (let i: number = 0; i < triggers.length; i++) {\r\n      if (this.matches(ExpressionType.SPECIAL_ID, triggers[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isSpecialIdentifierWithContent(trigger: string, ...contents: string[]): boolean {\r\n    if (!this.matches(ExpressionType.SPECIAL_ID, trigger)) {\r\n      return false;\r\n    }\r\n    if (contents.length === 0) {\r\n      return true;\r\n    }\r\n    for (let i: number = 0; i < contents.length; i++) {\r\n      if (this.getContents() === contents[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isNumber(): boolean {\r\n    return this.is(ExpressionType.NUMBER);\r\n  }\r\n\r\n  public isBool(): boolean {\r\n    return this.is(ExpressionType.BOOL);\r\n  }\r\n\r\n  public isString(): boolean {\r\n    return this.is(ExpressionType.STRING);\r\n  }\r\n\r\n  public isConstant(): boolean {\r\n    return this.isNumber() || this.isBool() || this.isString();\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.getTokenType().toString() + ': ' + this.getContents() + ' (' + this._line + ': ' + this._pos + '), Trigger: ' + this.getTrigger();\r\n  }\r\n\r\n\r\n\r\n\r\n}","import { ForwardQuery } from \"./forwardQuery\";\r\nimport { ExpChar } from \"./expChar\";\r\n\r\nexport class TokenReader extends ForwardQuery<ExpChar> {\r\n\r\n  private _inputExp: string = '';\r\n  private _line: number = 1;\r\n  private _pos: number = 0;\r\n  private _count: number = 0;\r\n  private _operator: number = 0;\r\n\r\n  constructor(input_exp: string) {\r\n    super();\r\n    if (input_exp === '') {\r\n\r\n    }\r\n    this._inputExp = input_exp;\r\n    this._count = input_exp.length;\r\n    this._operator = 0;\r\n  }\r\n\r\n  protected endOfInput(): ExpChar {\r\n    return new ExpChar('\\0', this._line, this._pos);\r\n  }\r\n\r\n\r\n  protected fetch(): ExpChar | undefined {\r\n    if (this._operator <= this._count - 1) {\r\n      let readChar: string = this._inputExp[this._operator];\r\n      this._operator++;\r\n      if (readChar === '\\n') {\r\n        this._line++;\r\n        this._pos = 0;\r\n      }\r\n      this._pos++;\r\n      return new ExpChar(readChar, this._line, this._pos);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public toString(): string {\r\n    if (this.itemBuffer.length === 0) {\r\n      return this._line + ':' + this._pos + ': Buffer empty';\r\n    }\r\n    if (this.itemBuffer.length < 2) {\r\n      return this._line + ':' + this._pos + ': ' + this.current().toString();\r\n    }\r\n    return this._line + ':' + this._pos + ': ' + this.current().toString() + ', ' + this.next().toString();\r\n  }\r\n\r\n}","import { ForwardQuery } from \"./forwardQuery\";\r\nimport { Token } from \"./token\";\r\nimport { TokenReader } from \"./tokenReader\";\r\nimport { ExpressionType } from \"./expressionEnum\";\r\nimport { ParseError, IPosition } from \"./positions\";\r\nimport { ExpChar } from \"./expChar\";\r\n\r\nexport class Tokenizer extends ForwardQuery<Token> {\r\n\r\n  private _inputExp: TokenReader;\r\n\r\n  private _decimalSeparator: string = '.';\r\n  private _lineComment: string = '//';\r\n  private _blockCommentStart: string = '/*';\r\n  private _blockCommentEnd: string = '*/';\r\n  private _brackets: string[] = ['(', ')', '（', '）', '[', ']', '{', '}', '【', '】'];\r\n  private _treatSinglePipeAsBracket: boolean = true;\r\n  private _specialIdStarters: string[] = [];\r\n  private _specialIdTerminators: string[] = [];\r\n  private _keywords: { [key: string]: string } = {};\r\n  private _keywordsCaseSensitive: boolean = false;\r\n  private _stringDelimiters: { [key: string]: string } = {};\r\n  private _boolConstant: string[] = [];\r\n\r\n  constructor(input_exp: string) {\r\n    super();\r\n    this._inputExp = new TokenReader(input_exp);\r\n    this._stringDelimiters = {};\r\n    this._stringDelimiters['\\\"'] = '\\\\';\r\n    this._stringDelimiters['\\''] = '\\0';\r\n    this._boolConstant = [];\r\n    this._boolConstant.push('false');\r\n    this._boolConstant.push('true');\r\n    this._keywords = {};\r\n    this._keywords['this'] = 'this';\r\n    this._keywords['null'] = 'null';\r\n    this._keywords['none'] = 'none';\r\n    this._keywords['undefined'] = 'undefined';\r\n  }\r\n\r\n  public endOfInput(): Token {\r\n    return Token.CreateAndFill(ExpressionType.EOI, this._inputExp.current());\r\n  }\r\n\r\n  public fetch(): Token | undefined {\r\n    // 获取并且消除空格\r\n    while (this._inputExp.current().isWhiteSpace()) {\r\n      this._inputExp.consume();\r\n    }\r\n\r\n    // 为行尾则返回空\r\n    if (this._inputExp.current().isEndOfInput()) {\r\n      return undefined;\r\n    }\r\n\r\n    // 行注释处理\r\n    if (this.isAtStartOfLineComment(true)) {\r\n      this.skipToEndOfLine();\r\n      return this.fetch();\r\n    }\r\n\r\n    // 注释块处理\r\n    if (this.isAtStartOfBlockComment(true)) {\r\n      this.skipBlockComment();\r\n      return this.fetch();\r\n    }\r\n\r\n    // 是否以数字起始，获取常量\r\n    if (this.isAtStartOfNumber()) {\r\n      return this.fetchNumber();\r\n    }\r\n\r\n    // 是否为字母开头，获取变量和函数\r\n    if (this.isAtStartOfIdentifier()) {\r\n      return this.fetchId();\r\n    }\r\n\r\n    // 字符串常量识别\r\n    if (this._stringDelimiters[this._inputExp.current().getValue()]) {\r\n      return this.fetchString();\r\n    }\r\n\r\n    //括号处理\r\n    if (this.isAtBracket(false)) {\r\n      return Token.CreateAndFill(ExpressionType.OPERATOR, this._inputExp.consume());\r\n    }\r\n\r\n    // 检测是否在特殊字符的开头，一些特殊的ID起始标志位，像“$Test”中的“$”\r\n    if (this.isAtStartOfSpecialId()) {\r\n      return this.fetchSpecialId();\r\n    }\r\n\r\n    // 运算符处理\r\n    if (this.isOperator(this._inputExp.current())) {\r\n      return this.fetchOperator();\r\n    }\r\n\r\n    //当前输入有问题，一般不应该运行到这一步\r\n    this.problemCollector.push(ParseError.Error(this._inputExp.current(), \"无效的输入字符: \" + this._inputExp.current().getValue()));\r\n\r\n    this._inputExp.consume();\r\n    return this.fetch();\r\n  }\r\n\r\n  private fetchNumber(): Token {\r\n    let result: Token = Token.Create(ExpressionType.NUMBER, this._inputExp.current());\r\n    result.addToContentChar(this._inputExp.consume());\r\n    let hasDecimal: boolean = false;\r\n    while (this._inputExp.current().isDigit() || this._inputExp.current().is(this._decimalSeparator)) {\r\n      if (this._inputExp.current().is(this._decimalSeparator)) {\r\n        if (hasDecimal) {\r\n          this.problemCollector.push(ParseError.Error(this._inputExp.current(), \"公式中有多个小数点！\"));\r\n        }\r\n        hasDecimal = true;\r\n        result.addToContentChar(this._inputExp.consume());\r\n      } else {\r\n        result.addToContentChar(this._inputExp.consume());\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private fetchId(): Token {\r\n    let result: Token = Token.Create(ExpressionType.ID, this._inputExp.current());\r\n    result.addToContentChar(this._inputExp.consume());\r\n    while (this.isIdentifierChar(this._inputExp.current())) {\r\n      result.addToContentChar(this._inputExp.consume());\r\n    }\r\n    //UnityEngine.Debug.LogWarning(result.GetContents());\r\n    if (!this._inputExp.current().isEndOfInput() && this._specialIdTerminators.indexOf(this._inputExp.current().getValue()) > -1) {\r\n      let specialId: Token = Token.Create(ExpressionType.SPECIAL_ID, result);\r\n      specialId.setTrigger(this._inputExp.current().getValue());\r\n      specialId.setContent(result.getContents());\r\n      specialId.setSource(result.getContents());\r\n      specialId.addToSource(this._inputExp.current());\r\n      this._inputExp.consume();\r\n      return this.handleKeywords(specialId);\r\n    }\r\n    return this.handleKeywords(result);\r\n  }\r\n\r\n  private fetchString(): Token {\r\n    //读进来的分词标志\r\n    let separator: string = this._inputExp.current().getValue();\r\n    //字典中对应的分词标志\r\n    //char escapeChar = _stringDelimiters[_inputExp.current().GetValue()];\r\n    let result: Token = Token.Create(ExpressionType.STRING, this._inputExp.current());\r\n    result.addToTrigger(this._inputExp.consume());\r\n    while (!this._inputExp.current().isNewLine() && !this._inputExp.current().is(separator) && !this._inputExp.current().isEndOfInput()) {\r\n      result.addToContentChar(this._inputExp.consume());\r\n    }\r\n    if (this._inputExp.current().is(separator)) {\r\n      result.addToSource(this._inputExp.consume());\r\n    }\r\n    else {\r\n      this.problemCollector.push(ParseError.Error(this._inputExp.current(), \"常量字符串没有结束分隔符！\"));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private isAtStartOfLineComment(consume: boolean): boolean {\r\n    if (this._lineComment !== '') {\r\n      return this.canConsumeThisString(this._lineComment, consume);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private canConsumeThisString(check_string: string, consume: boolean): boolean {\r\n    for (let i: number = 0; i < check_string.length; i++) {\r\n      //利用next向后对比，看是否为行注释符“//”\r\n      if (!(this._inputExp.nextOffset(i).is(check_string[i]))) {\r\n        return false;\r\n      }\r\n    }\r\n    if (consume) {\r\n      this._inputExp.consumeNext(check_string.length);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private skipToEndOfLine(): void {\r\n    while (!this._inputExp.current().isEndOfInput() && !this._inputExp.current().isNewLine()) {\r\n      this._inputExp.consume();\r\n    }\r\n  }\r\n\r\n  private isAtStartOfBlockComment(consume: boolean): boolean {\r\n    return this.canConsumeThisString(this._blockCommentStart, consume);\r\n  }\r\n\r\n  private skipBlockComment(): void {\r\n    while (!this._inputExp.current().isEndOfInput()) {\r\n      if (this.isAtEndOfBlockComment()) {\r\n        return;\r\n      }\r\n      this._inputExp.consume();\r\n    }\r\n    this.problemCollector.push(ParseError.Error(this._inputExp.current(), '块注释没有结束符！'));\r\n  }\r\n\r\n  private isAtEndOfBlockComment(): boolean {\r\n    return this.canConsumeThisString(this._blockCommentEnd, true);\r\n  }\r\n\r\n  private isAtStartOfNumber(): boolean {\r\n    if (this._inputExp.current().isDigit()) {\r\n      return true;\r\n    } else if (this._inputExp.current().is('.') && this._inputExp.next().isDigit()) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private isAtStartOfIdentifier(): boolean {\r\n    return this._inputExp.current().isLetter() || this._inputExp.current().is('_') || this._inputExp.current().is('#');\r\n  }\r\n\r\n  private isIdentifierChar(current: ExpChar): boolean {\r\n    return current.isDigit() || current.isLetter() || current.is('_') || current.is('.') || current.is('#') || current.is(':') || current.is('：');\r\n  }\r\n\r\n  private isAtBracket(in_symbol: boolean): boolean {\r\n    let r: boolean = true;\r\n    for (let i: number = 0; i < this._brackets.length; i++) {\r\n      if (!this._inputExp.current().is(this._brackets[i])) {\r\n        r = false;\r\n      }\r\n    }\r\n    if (r) {\r\n      return true;\r\n    }\r\n    if (!in_symbol && this._treatSinglePipeAsBracket && this._inputExp.current().is('|') && this._inputExp.next().is('|')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isAtStartOfSpecialId(): boolean {\r\n    return this._specialIdStarters.indexOf(this._inputExp.current().getValue()) > -1;\r\n  }\r\n\r\n  private fetchSpecialId(): Token {\r\n    let result: Token = Token.Create(ExpressionType.SPECIAL_ID, this._inputExp.current());\r\n    result.addToTrigger(this._inputExp.consume());\r\n    while (this.isIdentifierChar(this._inputExp.current())) {\r\n      result.addToContentChar(this._inputExp.consume());\r\n    }\r\n    return this.handleKeywords(result);\r\n  }\r\n\r\n  private handleKeywords(id_token: Token): Token {\r\n    let keyword: string = \"\";\r\n    if (this._keywordsCaseSensitive) {\r\n      if (this._keywords[id_token.getContents()]) {\r\n        keyword = this._keywords[id_token.getContents()];\r\n      }\r\n    } else {\r\n      if (this._keywords[id_token.getContents().toLowerCase()]) {\r\n        keyword = this._keywords[id_token.getContents().toLowerCase()];\r\n      }\r\n    }\r\n    if (keyword != \"\") { //关键字处理\r\n      let keywordToken: Token = Token.Create(ExpressionType.KEYWORD, id_token);\r\n      keywordToken.setTrigger(keyword);\r\n      keywordToken.setContent(id_token.getContents());\r\n      keywordToken.setSource(id_token.getSource());\r\n      return keywordToken;\r\n    } else if (!id_token.is(ExpressionType.SPECIAL_ID)) { //bool类型处理\r\n      keyword = id_token.getContents().toLowerCase();\r\n      if (this._boolConstant.indexOf(keyword) > -1) {\r\n        id_token.setTokenType(ExpressionType.BOOL);\r\n      }\r\n    }\r\n    return id_token;\r\n  }\r\n\r\n  private isOperator(ch: ExpChar): boolean {\r\n    if (ch.isEndOfInput() || ch.isDigit() || ch.isLetter() || ch.isWhiteSpace()) {\r\n      return false;\r\n    }\r\n\r\n    // let c: string = ch.getValue();\r\n    // if (char.IsControl(c)) {\r\n    // \treturn false;\r\n    // }\r\n\r\n    if (this.isAtBracket(true) || this.isAtStartOfBlockComment(false) || this.isAtStartOfLineComment(false) || this.isAtStartOfNumber() || this.isAtStartOfIdentifier() || this._stringDelimiters[ch.getValue()]) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private fetchOperator(): Token {\r\n    let result: Token = Token.Create(ExpressionType.OPERATOR, this._inputExp.current());\r\n    result.addToTrigger(this._inputExp.consume());\r\n    if (result.isOperator(\"*\") && this._inputExp.current().is('*')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"&\") && this._inputExp.current().is('&')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"|\") && this._inputExp.current().is('|')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"<\") && this._inputExp.current().is('=')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\">\") && this._inputExp.current().is('=')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"!\") && this._inputExp.current().is('=')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"=\") && this._inputExp.current().is('=')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public addError(pos: IPosition, msg: string): void {\r\n    this.getProblemCollector().push(ParseError.Error(pos, msg));\r\n  }\r\n\r\n  public addWarning(pos: IPosition, msg: string): void {\r\n    this.getProblemCollector().push(ParseError.Warning(pos, msg));\r\n  }\r\n\r\n\r\n\r\n}","export class Variable {\r\n\r\n  public get expType(): string {\r\n    return this._expType;\r\n  }\r\n  private _expType: string = 'string';\r\n\r\n  private _value: any = null;\r\n\r\n  private _name: string = '';\r\n\r\n  private _constant: boolean = false;\r\n\r\n  constructor(name: string, type: string, value: any) {\r\n    this._name = name;\r\n    this._expType = type;\r\n    this._value = value;\r\n  }\r\n\r\n  public setType(type: string): void {\r\n    if(!this._constant) {\r\n      this._expType = type;\r\n    }\r\n  }\r\n\r\n  public setValue(value: any): void {\r\n    if(!this._constant) {\r\n      this._value = value;\r\n    }\r\n  }\r\n\r\n  public makeConstant(value: any): void {\r\n    this.setValue(value);\r\n    this._constant = true;\r\n  }\r\n\r\n  public getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public isConstant(): boolean {\r\n    return this._constant;\r\n  }\r\n\r\n  public toString(): string {\r\n    return `Type: ${this._expType} --- ${this._name}: ${this._value.toString()}`;\r\n  }\r\n\r\n}","import { IExpression } from \"./expressions\";\r\nimport { Variable } from \"./variable\";\r\n\r\nexport class VariableExpression implements IExpression {\r\n\r\n  public get expType(): string {\r\n    return this._value.expType;\r\n  }  \r\n\r\n  public get className(): string {\r\n    return 'VariableExpression';\r\n  }\r\n\r\n  private _value: Variable;\r\n  \r\n  constructor(value: Variable) {\r\n    this._value = value;\r\n  }\r\n  \r\n  public evaluate(): any {\r\n    return this._value.getValue();\r\n  }\r\n\r\n  public toString(): string {\r\n    return this._value.getName();\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let expClone: VariableExpression = new VariableExpression(this._value);\r\n    return expClone;\r\n  }\r\n  \r\n\r\n}","export class GameGlobal {\r\n\r\n  \r\n  \r\n\r\n}","export * from './gameGlobal';\r\nexport * from './time';","import { VeryEngine } from \"../veryEngine\";\r\n\r\nexport class Time {\r\n  \r\n  public static get frameCount(): number {\r\n    return this._frame;\r\n  }\r\n  private static _frame: number = 0;\r\n\r\n\r\n  public static get deltaTime(): number {\r\n    // return 1.0 / GameGlobal.Engine.getFps();\r\n    return VeryEngine.Engine.getDeltaTime() / 1000;\r\n  }\r\n\r\n  public static _sum(): void {\r\n    this._frame++;\r\n  }\r\n}","export * from './showError';","export class ShowError {\r\n\r\n  public static errorContentPrefix: string = '<div class=\"alert alert-error\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>';\r\n  public static errorContentNow: string;\r\n  public static errorZone: HTMLElement;\r\n\r\n  public static initZone(): void {\r\n    if (!this.errorZone) {\r\n      this.errorZone = document.getElementById(\"errorZone\")!;\r\n    }\r\n  }\r\n  /**\r\n   * 报错信息显示；\r\n   * TODO: log、error、warn信息分颜色显示，支持滚动栏，不然报错信息多了以后无法查看；\r\n   * @param error_msg 报错或警告信息；\r\n   */\r\n  private static showMsg(prefix: string, error_msg: string): void {\r\n    this.initZone();\r\n    if (!this.errorContentNow) {\r\n      this.errorContentNow = this.errorContentPrefix;\r\n    }\r\n    this.errorContentNow += prefix + error_msg + \"<br/>\";\r\n    this.errorZone.style.display = \"block\";\r\n    this.errorZone.innerHTML = this.errorContentNow + '</div>';\r\n    // Close button error\r\n    let closeBtn = this.errorZone.querySelector(\".close\")!;\r\n    let that = this;\r\n    closeBtn.addEventListener(\"click\", function () {\r\n      that.errorZone.style.display = \"none\";\r\n    });\r\n  }\r\n\r\n  public static show(error_msg: string): void {\r\n    this.showMsg('打印信息>>>', error_msg);\r\n  }\r\n\r\n  public static showError(error_msg: string): void {\r\n    this.showMsg('错误信息>>>', error_msg);\r\n  }\r\n\r\n  public static showWarn(error_msg: string): void {\r\n    this.showMsg('警告信息>>>', error_msg);\r\n  }\r\n\r\n  public static clear(): void {\r\n    ShowError.initZone();\r\n    ShowError.errorContentNow = ShowError.errorContentPrefix;\r\n    ShowError.errorZone.innerHTML = ShowError.errorContentNow + '</div>';\r\n    // Close button error\r\n    let closeBtn = ShowError.errorZone.querySelector(\".close\")!;\r\n    let that = ShowError;\r\n    closeBtn.addEventListener(\"click\", function () {\r\n      that.errorZone.style.display = \"none\";\r\n    });\r\n  }\r\n\r\n  public static close(): void {\r\n    ShowError.initZone();\r\n    if(ShowError.errorZone.style.display === \"none\") {\r\n      ShowError.errorZone.style.display = \"block\";\r\n    } else {\r\n      ShowError.errorZone.style.display = \"none\";\r\n    }\r\n  }\r\n}","export * from './utility/index';\r\n\r\nexport * from './action/index';\r\nexport * from './dataSource/index';\r\nexport * from './enum/index';\r\nexport * from './expression/index';\r\nexport * from './global/index';\r\nexport * from './html/index';\r\nexport * from './manager/index';\r\nexport * from './object/index';\r\nexport * from './state/index';\r\nexport * from './template/index';\r\nexport * from './trigger/index';\r\n\r\nexport * from './variables/index';\r\nexport * from '../verytable/index';\r\n\r\nexport * from './library/action/index';\r\nexport * from './library/trigger/index';\r\n","export * from './transform';","import { VE_ActionBehaviour } from '../../index';\r\n\r\nexport class Action_Translate extends VE_ActionBehaviour {\r\n\r\n  public get ID(): string {\r\n    return '直线运动|Translate';\r\n  }  \r\n\r\n  private _refType: BABYLON.Space = BABYLON.Space.LOCAL;\r\n\r\n  \r\n  public active(): void {\r\n    \r\n  }\r\n\r\n\r\n  public onUpdate(): void {\r\n    \r\n  }\r\n\r\n\r\n\r\n  public destroy(): void {\r\n    // \r\n  }\r\n\r\n\r\n}\r\n\r\n","export * from './input';","import { VE_TriggerBehaviour } from '../../index';\r\nimport { VE_Triggers } from '../../trigger';\r\n\r\nexport class Trigger_MouseDown extends VE_TriggerBehaviour {\r\n  \r\n\r\n  public get ID(): string {\r\n    return '鼠标按下|Mouse_Down';\r\n  }\r\n\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  public paraParser(para_array: string[]): boolean {\r\n\r\n    let a: BABYLON.Nullable<BABYLON.Observer<BABYLON.PointerInfo>> = this.scene.onPointerObservable.add(  (pointInfo) => {\r\n\r\n    })\r\n\r\n    this.scene.onPointerObservable.remove(a);\r\n\r\n    return true;\r\n  }\r\n\r\n  public onUpdate(): void {\r\n    \r\n  }\r\n\r\n\r\n  public destroy(): void {\r\n    \r\n  }\r\n  \r\n\r\n}\r\n\r\n\r\n\r\nVE_Triggers.addTrigger(new Trigger_MouseDown());","export * from './projects';\r\nexport * from './manager';\r\nexport * from './reset';","export class VE_Manager {\r\n  constructor() {\r\n\r\n  }\r\n}","export class VE_Projects {\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n}","export class VE_Reset {\r\n  constructor() {\r\n\r\n  }\r\n}","export * from './veryObject';\r\nexport * from './objects';","import { VeryObject } from \"./veryObject\";\r\nimport { ArrayUtility } from \"../utility\";\r\n\r\nexport class VE_Objects {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  private _objectIDs: string[] = [];\r\n  private _objectDics: { [key: string]: VeryObject } = {};\r\n\r\n  public get count(): number {\r\n    return this._objectIDs.length;\r\n  }\r\n\r\n  constructor(project_name: string) {\r\n    this._projectName = project_name;\r\n  }\r\n\r\n  isCreated(object_id: string): boolean {\r\n    if (this._objectDics[object_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  add(object_id: string, very_object: VeryObject): void {\r\n    if (!this.isCreated(object_id)) {\r\n      this._objectIDs.push(object_id);\r\n      this._objectDics[object_id] = very_object;\r\n    }\r\n  }\r\n\r\n  getObjectID(index: number): string {\r\n    if(index >= 0 && index < this._objectIDs.length) {\r\n      return this._objectIDs[index];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getVeryObject(object_id: string): VeryObject {\r\n    return this._objectDics[object_id];\r\n  }\r\n\r\n  unloadObject(object_id: string): void {\r\n    // this._objectIDs.re\r\n    ArrayUtility.remove(this._objectIDs, object_id);\r\n    delete this._objectDics.object_id;\r\n\r\n  }\r\n\r\n  clear(): void {\r\n    for(let i: number = 0; i < this._objectIDs.length; i++) {\r\n      let tempObject = this._objectDics[this._objectIDs[i]];\r\n      if(tempObject) {\r\n        tempObject.clear();\r\n      }\r\n    }\r\n    this._objectIDs = [];\r\n    this._objectDics = {};\r\n  }\r\n}","import { GameObject, IVeryVar } from \"../variables\";\r\nimport { IExpression } from \"../expression\";\r\nimport { VE_ActionBehaviour } from \"../action\";\r\nimport { VE_TriggerBehaviour } from \"../trigger\";\r\nimport { VE_Fsm, VE_State } from \"../state\";\r\nimport { VE_Template } from \"../template\";\r\n\r\nexport class VeryObject {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  public get objectID(): string {\r\n    return this._objectID;\r\n  }\r\n  private _objectID: string = '';\r\n\r\n  gameObject: GameObject = new GameObject();\r\n\r\n  private _variables: { [key: string]: IVeryVar } = {};\r\n  private _expressions: { [key: string]: IExpression } = {};\r\n  private _actions: { [key: string]: VE_ActionBehaviour } = {};\r\n  private _triggers: { [key: string]: VE_TriggerBehaviour } = {};\r\n  private _fsms: { [key: string]: VE_Fsm } = {};\r\n  private _templates: { [key: string]: VE_Template } = {};\r\n\r\n\r\n\r\n  constructor(project_name: string, object_id: string, game_object: GameObject) {\r\n    this._projectName = projectName;\r\n    this._objectID = object_id;\r\n    this.gameObject = game_object;\r\n  }\r\n\r\n  hasFsm(fsm_id: string): boolean {\r\n    if (this._fsms[fsm_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addFsm(fsm_id: string, fsm: VE_Fsm): void {\r\n    this._fsms[fsm_id] = fsm;\r\n  }\r\n\r\n  getFsm(fsm_id: string): VE_Fsm {\r\n    return this._fsms[fsm_id];\r\n  }\r\n\r\n  hasTrigger(trigger_id: string): boolean {\r\n    if (this._triggers[trigger_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addTrigger(trigger_id: string, trigger: VE_TriggerBehaviour): void {\r\n    this._triggers[trigger_id] = trigger;\r\n  }\r\n\r\n  getTrigger(trigger_id: string): VE_TriggerBehaviour {\r\n    return this._triggers[trigger_id];\r\n  }\r\n\r\n  hasAction(action_id: string): boolean {\r\n    if (this._actions[action_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addAction(action_id: string, action: VE_ActionBehaviour): void {\r\n    this._actions[action_id] = action;\r\n  }\r\n\r\n  getAction(action_id: string): VE_ActionBehaviour {\r\n    return this._actions[action_id];\r\n  }\r\n\r\n  hasVariable(var_id: string): boolean {\r\n    if (this._variables[var_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addVariable(var_id: string, variable: IVeryVar): void {\r\n    this._variables[var_id] = variable;\r\n  }\r\n\r\n  getVariable(var_id: string): IVeryVar {\r\n    return this._variables[var_id];\r\n  }\r\n\r\n  hasExpression(exp_id: string): boolean {\r\n    if (this._expressions[exp_id]) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addExpression(exp_id: string, expression: IExpression): void {\r\n    this._expressions[exp_id] = expression;\r\n  }\r\n\r\n  getExpression(exp_id: string): IExpression {\r\n    return this._expressions[exp_id];\r\n  }\r\n\r\n  hasTemplate(template_id: string): boolean {\r\n    if (this._templates[template_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addTemplate(template_id: string, template: VE_Template): void {\r\n    this._templates[template_id] = template;\r\n  }\r\n\r\n  getTemplate(template_id: string): VE_Template {\r\n    return this._templates[template_id];\r\n  }\r\n\r\n  hasAnyVar(var_id: string): boolean {\r\n    if (this._variables[var_id] || this._expressions[var_id] || this._templates[var_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // getState(fsm_id: string, index: number): VE_State {\r\n\r\n  // }\r\n\r\n    unload():void {}\r\n\r\n    // setUnloadCallback(callback): void {}\r\n\r\n\r\n\r\n\r\n  clear(): void {\r\n\r\n  }\r\n}","import { VE_State } from \"./state\";\r\nimport { AssociatedFsmType } from \"../enum\";\r\nimport { VE_Template } from \"../template\";\r\n\r\nexport class VE_AssociatedState {\r\n\r\n  private _types: AssociatedFsmType[] = [];\r\n  private _indexs: number[] = [];\r\n\r\n  private _numberIndex: { [key: number]: number } = {};\r\n  private _states: { [key: number]: VE_State } = {};\r\n  private _templates: { [key: number]: VE_Template } = {};\r\n  private _templateIDs: { [key: number]: string } = {};\r\n\r\n  public get FromState(): VE_State {\r\n    return this._fromState;\r\n  }\r\n  private _fromState: VE_State;\r\n\r\n  constructor(from_state: VE_State) {\r\n    this._fromState = from_state;\r\n  }\r\n  \r\n  public add(state: VE_State, index: number): void {\r\n    this._types.push(AssociatedFsmType.Object);\r\n    let key: number = this._types.length;\r\n    this._indexs.push(key);\r\n    this._numberIndex[key] = index;\r\n    this._states[key] = state;\r\n  }\r\n\r\n  public addTemplate(template: VE_Template, fsm_id: string, index: number): void {\r\n    this._types.push(AssociatedFsmType.Object);\r\n    let key: number = this._types.length;\r\n    this._indexs.push(key);\r\n    this._numberIndex[key] = index;\r\n    this._templates[key] = template;\r\n    this._templateIDs[key] = fsm_id;\r\n  }\r\n\r\n  public connect(): void {\r\n\r\n  }\r\n\r\n\r\n}","import { Dictionary } from \"../utility/dictionary\";\r\nimport { VE_State } from \"./state\";\r\nimport { Time } from \"../global\";\r\nimport { StateConst } from \"./stateConst\";\r\n\r\nexport class VE_Fsm {\r\n\r\n  public get ID(): string {\r\n    return this._id;\r\n  }\r\n  private _id: string = '';\r\n\r\n  public get ObjectID(): string {\r\n    return this._objectID;\r\n  }\r\n  private _objectID: string = '';\r\n\r\n  public get FsmID(): string {\r\n    return this._fsmID;\r\n  }\r\n  private _fsmID: string = '';\r\n\r\n  private _stateDics: Dictionary<string, VE_State> = new Dictionary<string, VE_State>();\r\n  private _states: VE_State[] = [];\r\n\r\n  private _frameCount: number = -1;\r\n  private _triggerIDs: string[] = [];\r\n\r\n  constructor() {\r\n    // this._stateDics.TryGetValue(1);\r\n  }\r\n\r\n  hasState(state_value: string): boolean {\r\n    return this._stateDics.ContainsKey(state_value);\r\n  }\r\n\r\n  addState(state_value: string, state: VE_State): void {\r\n    if (!this._stateDics.ContainsKey(state_value)) {\r\n      this._stateDics.Add(state_value, state);\r\n      this._states.push(state);\r\n    }\r\n  }\r\n\r\n  getState(state_value: string): VE_State | null {\r\n    return this._stateDics.GetValue(state_value);\r\n  }\r\n\r\n  removeState(state_value: string): boolean {\r\n    if (this.hasState(state_value)) {\r\n      this._stateDics.Remove(state_value);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  receiveEvent(trigger_id: string): boolean {\r\n    if (Time.frameCount != this._frameCount) {\r\n      this._frameCount = Time.frameCount;\r\n      this._triggerIDs = [];\r\n      this._triggerIDs.push(trigger_id);\r\n      return true;\r\n    } else {\r\n      if (trigger_id.startsWith(StateConst.ASSOCIATED_STATE_PREFIX)) {\r\n        // console.log(`ID: ${trigger_id} Return True`);\r\n        return true;\r\n      } else {\r\n        if (this._triggerIDs.indexOf(trigger_id) !== -1) {\r\n          return false;\r\n        } else {\r\n          this._triggerIDs.push(trigger_id);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}","export * from './state';\r\nexport * from './fsm';\r\nexport * from './stateAction';\r\nexport * from './associatedState';\r\nexport * from './stateConst';","import { VE_Fsm } from \"./fsm\";\r\nimport { VE_StateAction } from \"./stateAction\";\r\nimport { VE_AssociatedState } from \"./associatedState\";\r\n\r\nexport class VE_State {\r\n  public get Fsm(): VE_Fsm {\r\n    return this._fsm;\r\n  }\r\n  private _fsm: VE_Fsm;\r\n\r\n  public get Value(): string {\r\n    return this._value;\r\n  }\r\n  private _value: string = \"空状态\";\r\n\r\n  private _stateActions: VE_StateAction[] = [];\r\n  private _assocaitedStates: VE_AssociatedState[] = [];\r\n\r\n  public get IsSequence(): boolean {\r\n    return this._isSequence;\r\n  }\r\n  private _isSequence: boolean = false;\r\n\r\n  constructor(fsm: VE_Fsm, state_value: string = \"空状态\") {\r\n    this._fsm = fsm;\r\n    this._value = state_value;\r\n  }\r\n\r\n  setValue(state_value: string): void {\r\n    this._value = state_value;\r\n  }\r\n\r\n  addAction(state_action: VE_StateAction): void {\r\n    this._stateActions.push(state_action);\r\n    BABYLON.Mesh.bind;\r\n  }\r\n\r\n  public action(trigger_id: string): void {\r\n    if(this._fsm.receiveEvent(trigger_id)) {\r\n      \r\n    }\r\n  }\r\n}\r\n","\r\nimport { VE_ActionBehaviour } from \"../action/actionBehaviour\";\r\nimport { StateActionType } from \"../enum\";\r\n\r\nexport class VE_StateAction {\r\n  \r\n  public get Type(): StateActionType {\r\n    return this._type;\r\n  }\r\n  private _type: StateActionType = StateActionType.Action;\r\n\r\n  public get Action(): VE_ActionBehaviour {\r\n    return this._action;\r\n  }\r\n  private _action: VE_ActionBehaviour;\r\n\r\n  constructor(action: VE_ActionBehaviour, enabled: boolean, every_frame: boolean = false, is_sequence: boolean = false) {\r\n    this._action = action;\r\n  }\r\n\r\n\r\n\r\n\r\n}","export class StateConst {\r\n\r\n  public static readonly STATE_SEPARATOR: string = '.';\r\n  public static readonly ASSOCIATED_STATE_PREFIX: string = 'Associated_State:';\r\n  public static readonly VARIABLE_SYMBOL: string = '*';\r\n  public static readonly STATE_INDEX: number = -1;\r\n  \r\n}","export * from './template';\r\nexport * from './templates';","export class VE_Template {\r\n  constructor() {\r\n\r\n  }\r\n}","export class VE_Templates {\r\n  \r\n}","export * from './triggerBehaviour';\r\nexport * from './triggers';","import { VE_State } from \"../state/state\";\r\nimport { StateConst } from \"../state/stateConst\";\r\nimport { IExpression } from \"../expression\";\r\n\r\nexport abstract class VE_TriggerBehaviour {\r\n\r\n  abstract get ID(): string;\r\n\r\n  protected scene!: BABYLON.Scene;\r\n\r\n  public get enabled(): boolean {\r\n    return this._enabled;\r\n  }\r\n  public set enabled(val: boolean) {\r\n    this._enabled = val;\r\n  }\r\n  private _enabled: boolean = true;\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  public get isEnabled(): boolean {\r\n    if (this._logicalSwitch) {\r\n      for (let i: number = 0; i < this._logicalSwitch.length; i++) {\r\n        if (!this._logicalSwitch[i].evaluate()) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // Logical\r\n  private _logicalSwitch: IExpression[] = [];\r\n  private _logicalExp: IExpression[] = [];\r\n  // State\r\n  private _triggerTargets: VE_State[] = [];\r\n\r\n  // protected GameObject ObjectInstance = null;\r\n  // protected VeryEngineObject VeryObject = null;\r\n\r\n  public get objectID(): string {\r\n    return this._objectID;\r\n  }\r\n  private _objectID: string = 'object-axxx';\r\n\r\n  public get triggerID(): string {\r\n    return this._triggerID;\r\n  }\r\n  private _triggerID: string = '';\r\n\r\n  private _id: string = '';\r\n\r\n  public call(): void {\r\n    console.log(this._objectID);\r\n  }\r\n\r\n\r\n  public set(scene: BABYLON.Scene): void {\r\n    this.scene = scene;\r\n  }\r\n\r\n  public setTriggerID(trigger_id: string, object_id: string): void {\r\n    this._triggerID = trigger_id;\r\n    this._objectID = object_id;\r\n    this._id = object_id + StateConst.STATE_SEPARATOR + trigger_id;\r\n  }\r\n\r\n  public addLogicalSwitch(exp: IExpression): void {\r\n    this._logicalSwitch.push(exp);\r\n  }\r\n\r\n  public addTriggerTarget(exp: IExpression, state: VE_State): void {\r\n    this._logicalExp.push(exp);\r\n    this._triggerTargets.push(state);\r\n  }\r\n\r\n  public sendEvent(): void {\r\n    if(this.isEnabled) {\r\n      this.eventProcess();\r\n    }\r\n  }\r\n\r\n  // 关联具体响应\r\n  private eventProcess(): void {\r\n    if (this._triggerTargets) {\r\n      for (let i: number = 0; i < this._triggerTargets.length; i++) {\r\n        if (this._logicalExp[i].evaluate()) {\r\n          this._triggerTargets[i].action(this._id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public paraParser(para_array: string[]): boolean {\r\n    return true;\r\n  }\r\n\r\n  public update(): void {\r\n    if(this.isEnabled) {\r\n      this.onUpdate();\r\n    }\r\n  }\r\n\r\n  public onUpdate(): void {\r\n\r\n  }\r\n\r\n  public abstract destroy(): void;\r\n\r\n\r\n}","import { VE_TriggerBehaviour } from \"./triggerBehaviour\";\r\nimport { ShowError } from \"../html\";\r\n\r\nexport class VE_Triggers {\r\n\r\n  private static _triggerDics: { [key: string]: VE_TriggerBehaviour} = {};\r\n\r\n  public static addTrigger(trigger: VE_TriggerBehaviour): void {\r\n    let ids: string[] = trigger.ID.split('|');\r\n    for(let i: number = 0; i < ids.length; i++) {\r\n      let id: string = ids[i].trim().toLowerCase();\r\n      if(this._triggerDics[id]) {\r\n        ShowError.showError(`触发初始化错误，触发ID重复，当前触发ID：${id}，请为当前触发重新分配触发ID！`);\r\n      } else {\r\n        this._triggerDics[id] = trigger;\r\n      }\r\n    }\r\n  }\r\n\r\n  public static hasTrigger(trigger_id: string): boolean {\r\n    trigger_id = trigger_id.toLowerCase();\r\n    if(this._triggerDics[trigger_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static createTrigger(trigger_id: string): VE_TriggerBehaviour {\r\n    trigger_id = trigger_id.toLowerCase();\r\n    // console.log(this._triggerDics[trigger_id]);\r\n    return Object.create(this._triggerDics[trigger_id]);\r\n  }\r\n  \r\n  public static remove(trigger_id: string): void {\r\n    trigger_id = trigger_id.toLowerCase();\r\n    delete this._triggerDics[trigger_id];\r\n  }\r\n\r\n}","export class ArrayUtility {\r\n  public static remove<T>(arr: Array<T>, ele: T): void {\r\n    let index = arr.indexOf(ele);\r\n    if (index > -1) {\r\n      arr.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  public static clear<T>(arr: Array<T>): void {\r\n    arr = [];\r\n  }\r\n\r\n}\r\n\r\n","/**字典数据结构类 */\r\nexport class Dictionary<KT, VT> {\r\n  private _keys: KT[] = [];\r\n  private _values: VT[] = [];\r\n  public get count(): number {\r\n    return this.Count();\r\n  }\r\n\r\n  public constructor() {\r\n  }\r\n\r\n  /**给字典增加一条数据,返回字典的长度 */\r\n  public Add(key: any, value: any): number {\r\n    this._keys.push(key);\r\n    return this._values.push(value);\r\n  }\r\n\r\n  public Remove(key: any) {\r\n    var index = this._keys.indexOf(key, 0);\r\n    this._keys.splice(index, 1);\r\n    this._values.splice(index, 1);\r\n  }\r\n\r\n  private Count(): number {\r\n    return this._keys.length;\r\n  }\r\n\r\n  /**直接使用SetValue()修改已经存在的字典数据项 */\r\n  public SetValue(key: any, value: any): boolean {\r\n    var index = this._keys.indexOf(key, 0);\r\n    if (index != -1) {\r\n      this._keys[index] = key;\r\n      this._values[index] = value;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\t/**\r\n\t *返回字典数据；\r\n\t */\r\n  public GetValue(key: KT): VT | null {\r\n    var index = this._keys.indexOf(key, 0);\r\n    if (index != -1) {\r\n      return this._values[index];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public ContainsKey(key: any): boolean {\r\n    let ks = this._keys;\r\n    for (let i = 0; i < ks.length; ++i) {\r\n      if (ks[i] == key) {\r\n        return true;;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public GetKeys(): KT[] {\r\n    return this._keys;\r\n  }\r\n\r\n  public GetValues(): VT[] {\r\n    return this._values;\r\n  }\r\n}","export class ErrorInfo {\r\n\r\n  isRight: boolean = true;\r\n  message: string = '';\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  clear(): void {\r\n    this.isRight = true;\r\n    this.message = '';\r\n  }\r\n\r\n}","export * from './arrayUtility';\r\nexport * from './dictionary';\r\nexport * from './errorInfo';","\r\n// import { VeryEngine } from \"../veryEngine\";\r\n\r\nexport class GameObject {\r\n\r\n  public get gameObject(): GameObject {\r\n    return this;\r\n  }\r\n\r\n  // transform: sf\r\n  mesh: BABYLON.Nullable<BABYLON.Mesh> = null;\r\n\r\n  constructor() {\r\n    // VeryEngine.Scene.getMeshByName()\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport class Transform {\r\n\r\n  public get localPosition(): BABYLON.Vector3 {\r\n    return BABYLON.Vector3.Zero();\r\n  }\r\n  eulerAngles: BABYLON.Vector3 = BABYLON.Vector3.Zero();\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n}","export * from \"./IVeryVar\";\r\nexport * from \"./veryVarManager\";\r\nexport * from \"./veryVariables\";\r\nexport * from './babylonVariables';","import { ShowError } from \"../html/showError\";\r\nimport { IVeryVar } from \"./IVeryVar\";\r\n\r\nexport class VeryVarManager {\r\n\r\n  private static _veryVarTypes: { [key: string]: IVeryVar } = {};\r\n\r\n  public static hasVarType(var_type: string): boolean {\r\n    var_type = var_type.toLowerCase();\r\n    if (this._veryVarTypes[var_type]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static addVarType(var_type: string, var_prototype: IVeryVar): void {\r\n    var_type = var_type.toLowerCase().trim();\r\n    // 由于直接访问，所以在这里直接报错\r\n    if (this._veryVarTypes[var_type]) {\r\n      ShowError.showError('VeryVar变量初始化错误，变量类型重复，当前变量名：' + var_type + '，当前变量类型：' + var_prototype);\r\n    } else {\r\n      // console.log(var_proto.VarType);\r\n      this._veryVarTypes[var_type] = var_prototype;\r\n      // let a = Object.create(this.GetVarType(var_type));\r\n      // console.log(a.Value);\r\n      // a.Value = true;\r\n      // console.log(a.Value);\r\n      // a.Value = 1234;\r\n      // console.log(a.getValue());\r\n      // console.log(this.GetVarType(var_type).__proto__);\r\n    }\r\n  }\r\n\r\n  // TODO\r\n  public static createVar(var_type: string): IVeryVar {\r\n    var_type = var_type.toLowerCase();\r\n    return Object.create(this.getVarType(var_type));\r\n  }\r\n\r\n  public static getVarType(var_type: string): any {\r\n    var_type = var_type.toLowerCase();\r\n    if (this._veryVarTypes && this._veryVarTypes[var_type]) {\r\n      return this._veryVarTypes[var_type];\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  public static remove(var_type: string): void {\r\n    var_type = var_type.toLowerCase();\r\n    delete this._veryVarTypes[var_type];\r\n  }\r\n\r\n\r\n\r\n}","import { IVeryVar } from \"./IVeryVar\";\r\nimport { ErrorInfo } from \"../utility/errorInfo\";\r\nimport { VeryVarManager } from \"./veryVarManager\";\r\n\r\nexport class VeryBool implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'bool';\r\n  } \r\n\r\n  public get Value(): boolean {\r\n    return this._value;\r\n  }\r\n  public set Value(val: boolean) {\r\n    this._value = val;\r\n  }\r\n  private _value: boolean = false;\r\n\r\n  constructor() {\r\n    this._value = false;\r\n  }\r\n\r\n  setValue(val: any): void {\r\n    this._value = val;\r\n  }\r\n\r\n  getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  initValue(value_str: string, error_info: ErrorInfo): any {\r\n    if(value_str.toLowerCase() === 'false') {\r\n      return false;\r\n    } else if(value_str.toLowerCase() === 'true'){\r\n      return true;\r\n    } \r\n    else if(value_str === '' || value_str.toLowerCase() === 'null' || value_str.toLowerCase() === 'none') {\r\n      return false;\r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class VeryInt implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'int';\r\n  }\r\n\r\n  public get Value(): number {\r\n    return Math.round(this._value);\r\n  }\r\n  public set Value(val: number) {\r\n    this._value = Math.round(val);\r\n  }\r\n  private _value: number = 0;\r\n\r\n  constructor() {\r\n    this._value = 0;\r\n  }\r\n\r\n  getValue(): any {\r\n    return this.Value;\r\n  }\r\n\r\n  setValue(val: any): void {\r\n    this.Value = val;\r\n  }\r\n\r\n  initValue(value_str: string, error_info: ErrorInfo):any {\r\n    // 先转化为float，直接使用parseInt没有四舍五入的效果\r\n    let newFloat = parseFloat(value_str);\r\n    if(!isNaN(newFloat)) {\r\n      // 可对float进行四舍五入\r\n      return Math.round(newFloat);\r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class VeryFloat implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'float';\r\n  }\r\n\r\n  public get Value(): number {\r\n    return this._value;\r\n  }\r\n  public set Value(val: number) {\r\n    this._value = val;\r\n  }\r\n  private _value: number = 0;\r\n\r\n  constructor() {\r\n    this._value = 0;\r\n  }\r\n\r\n  setValue(val: number) {\r\n    this._value = val;\r\n  }\r\n\r\n  // 之后可能会有公式的情况\r\n  getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  initValue(value_str: string, error_info: ErrorInfo): any {\r\n    let newVal = parseFloat(value_str);\r\n    if(!isNaN(newVal)) {\r\n      return newVal;\r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n\r\nexport class VeryNumber implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get Value(): number {\r\n    return this._value;\r\n  }\r\n  public set Value(val: number) {\r\n    this._value = val;\r\n  }\r\n  private _value: number = 0;\r\n\r\n  constructor() {\r\n    this._value = 0;\r\n  }\r\n\r\n  setValue(val: number) {\r\n    this._value = val;\r\n  }\r\n\r\n  // 之后可能会有公式的情况\r\n  getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  initValue(value_str: string, error_info: ErrorInfo): any {\r\n    let newVal = parseFloat(value_str);\r\n    if(!isNaN(newVal)) {\r\n      return newVal;\r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n\r\nexport class VeryString implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'string';\r\n  }\r\n\r\n  public get Value(): string {\r\n    return this._value;\r\n  }\r\n  public set Value(val: string) {\r\n    this._value = val;\r\n  }\r\n  private _value: string = '';\r\n\r\n  constructor() {\r\n    this._value = '';\r\n  }\r\n\r\n  getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  setValue(val: any): void {\r\n    this._value = val;\r\n  }\r\n\r\n  initValue(value_str: string, error_info: ErrorInfo): any {\r\n    if (value_str.startsWith('\\'') || value_str.startsWith('\"') || value_str.startsWith('“') || value_str.startsWith('‘')) {\r\n      this._value = value_str.substr(1, value_str.length - 2);\r\n    } else {\r\n      this._value = value_str;\r\n    } \r\n    error_info.isRight = true;\r\n  }\r\n}\r\n\r\nexport class VeryVector3 implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'vector3';\r\n  }\r\n\r\n  public get Value(): BABYLON.Vector3 {\r\n    //let a: BABYLON.Vector3 = new BABYLON.Vector3 (1,1,1);\r\n    return this._value;\r\n  }\r\n  public set Value(val:BABYLON.Vector3) {\r\n    this._value = val;\r\n  }\r\n  private _value: BABYLON.Vector3 = BABYLON.Vector3.Zero();\r\n\r\n\r\n  constructor() {\r\n    this._value = BABYLON.Vector3.Zero();\r\n  }\r\n\r\n  getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  setValue(val: any) {\r\n    this._value = val;\r\n  }\r\n\r\n  initValue(value_str: string, error_info: ErrorInfo): any {\r\n    if(value_str === 'none' || value_str === 'null') {\r\n      \r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n    }\r\n  }\r\n}\r\n\r\nVeryVarManager.addVarType('bool', new VeryBool());\r\nVeryVarManager.addVarType('开关', new VeryBool());\r\n\r\nVeryVarManager.addVarType('int', new VeryInt());\r\nVeryVarManager.addVarType('float', new VeryFloat());\r\n\r\nVeryVarManager.addVarType('number', new VeryNumber());\r\nVeryVarManager.addVarType('数字', new VeryNumber());\r\n\r\nVeryVarManager.addVarType('string', new VeryString());\r\nVeryVarManager.addVarType('字符串', new VeryString());\r\nVeryVarManager.addVarType('vector3', new VeryVector3());\r\nVeryVarManager.addVarType('响应', new VeryVector3());","import { VeryTable } from \"../verytable/index\";\r\nimport { ShowError } from \"./html/showError\";\r\n\r\n// 导出entrance\r\nexport * from \"./index\";\r\n\r\nexport class VeryEngine {\r\n\r\n  public static Canvas: HTMLCanvasElement;\r\n  public static Engine: BABYLON.Engine;\r\n  public static Scene: BABYLON.Scene;\r\n\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n\r\n  init(data: Array<Array<string>>, project_name: string): void {\r\n    // TODO: 之后可能会变成多个Table，暂时未1个\r\n    let tableData: VeryTable = new VeryTable(data);\r\n    console.log(tableData.pos(7, 5));\r\n\r\n\r\n\r\n\r\n    // this.showErrorTest(tableData);\r\n  }\r\n\r\n\r\n  showErrorTest(tableData: VeryTable): void {\r\n    // /*\r\n    ShowError.show('大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n    ShowError.showError('大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n    ShowError.showWarn('大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n    ShowError.show('大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n    ShowError.show('大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n\r\n    document.getElementById(\"settingsButton\")!.addEventListener(\"click\", ShowError.close);\r\n    // */\r\n  }\r\n\r\n}","\r\nexport * from \"./veryTableRow\";\r\nexport * from \"./veryTable\";\r\nexport * from \"./veryTableSet\";\r\n","import { VeryTableRow } from \"./veryTableRow\";\r\n\r\nexport class VeryTable {\r\n  private _id: string = \"\";\r\n  public get ID(): string {\r\n    return this._id;\r\n  }\r\n  public set ID(id: string) {\r\n    this._id = id;\r\n  }\r\n\r\n  private _columnIDs: string[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\n  private _rows: VeryTableRow[] = [];\r\n\r\n  public get RowCount(): number {\r\n    if (!this._rows) {\r\n      return 0;\r\n    } else {\r\n      return this._rows.length;\r\n    }\r\n  }\r\n\r\n  constructor(data: string[][], id = \"默认Sheet\") {\r\n    this._id = id;\r\n    this._rows = [];\r\n    if (data) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        let newRow = new VeryTableRow(data[i]);\r\n        this._rows.push(newRow);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据行序号和列序号获取表格数据\r\n   * @param row_index 行序号\r\n   * @param column_index 列序号\r\n   */\r\n  public getData(row_index: number, column_index: number): string | undefined {\r\n    if (row_index >= 0 && row_index < this._rows.length) {\r\n      let row: VeryTableRow = this._rows[row_index];\r\n      return row.getData(column_index);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据行号返回行数据\r\n   * @param row_index 行序号\r\n   */\r\n  public getRow(row_index: number): VeryTableRow | undefined {\r\n    if (row_index >= 0 && row_index < this._rows.length) {\r\n      return this._rows[row_index];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取表格位置\r\n   * @param row_index 行序号\r\n   * @param column_index 列序号\r\n   */\r\n  public pos(row_index: number, column_index: number): string {\r\n    return \"表名：\" + this.ID + \"，位置：（\" + (row_index + 1) + \"，\" + this.getColumnID(column_index) + \"）\";\r\n  }\r\n\r\n  /**\r\n   * 根据列序号获取列ID，序号超过26以后，需要进行计算\r\n   * @param column_index 列序号\r\n   */\r\n  private getColumnID(column_index: number): string {\r\n    if (column_index >= 0 && column_index < 26) {\r\n      return this._columnIDs[column_index];\r\n    } else if (column_index < 0) {\r\n      return 'error';\r\n    } else {\r\n      let a: number = Math.floor(column_index / 26);\r\n      let b: number = column_index % 26;\r\n      if (a === 0) {\r\n        return this._columnIDs[a];\r\n      } else {\r\n        return this._columnIDs[a - 1] + this._columnIDs[b];\r\n      }\r\n    }\r\n  }\r\n\r\n  // public addRowStringArray(row_data: string[]): void {\r\n\r\n  // }\r\n\r\n  // public addRowStrings(...strs: string[]): void {\r\n\r\n  // }\r\n\r\n  public addRow(data: VeryTableRow): void {\r\n    // \r\n    this._rows.push(data);\r\n\r\n  }\r\n\r\n\r\n}","\r\nexport class VeryTableRow {\r\n  public get Count(): number {\r\n    if (!this._rowData) {\r\n      return 0;\r\n    } else {\r\n      return this._rowData.length;\r\n    }\r\n  }\r\n\r\n  private _rowData: string[] = [];\r\n\r\n  constructor(row_data: string[]) {\r\n    this._rowData = row_data;\r\n  }\r\n\r\n  /**\r\n   * 根据列序号获取表格数据\r\n   * @param column_index 列序号\r\n   */\r\n  public getData(column_index: number): string | undefined {\r\n    if (column_index >= 0 && column_index < this.Count) {\r\n      return this._rowData[column_index];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public add(data: string): void {\r\n    this._rowData.push(data);\r\n  }\r\n\r\n  public insert(index: number, data: string): void {\r\n    // 先将数组一分为二，在第2个\r\n    this._rowData.push(data);\r\n    let tempData = this._rowData.slice(index);\r\n    tempData.push(data);\r\n    this._rowData = tempData;\r\n  }\r\n\r\n  public remove(index: number): void {\r\n    this._rowData.splice(index, 1);\r\n  }\r\n\r\n  public removeEnd(): void {\r\n    this._rowData.pop();\r\n  }\r\n\r\n\r\n\r\n  // public\r\n\r\n  // public remove(index: number): any {\r\n\r\n  // }\r\n}","// import { VeryTableRow } from \"./veryTableRow\";\r\n/**\r\n * 1. 主要使用TypeScript进行开发，掌握其一般开发流程，从项目建立到发布最终的生产代码（打包、合并、编译等）；\r\n * 2. 实际使用过程：在浏览器代码中，点击运行代码\r\n */\r\nimport { VeryTable } from \"./veryTable\";\r\n\r\nexport class VeryTableSet {\r\n\r\n  private _tables: VeryTable[] = [];\r\n\r\n  public get Count(): number {\r\n    if (!this._tables) {\r\n      return 0;\r\n    } else {\r\n      return this._tables.length;\r\n    }\r\n  }\r\n\r\n  constructor(tables?: VeryTable[]) {\r\n    if (tables) {\r\n      this._tables = tables;\r\n    }\r\n  }\r\n\r\n  public getTable(index: number): VeryTable | undefined {\r\n    if (index >= 0 && index < this.Count) {\r\n      return this._tables[index];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public addTable(table: VeryTable): void {\r\n    this._tables.push(table);\r\n  }\r\n\r\n  public removeTable(index: number): void {\r\n    if (index >= 0 && index < this.Count) {\r\n      this._tables.splice(index, 1);\r\n    }\r\n  }\r\n\r\n\r\n}"]}