{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","src/game.ts","src/main.ts","src/veryengine/action/actionBehaviour.ts","src/veryengine/action/actions.ts","src/veryengine/action/assignment.ts","src/veryengine/action/index.ts","src/veryengine/dataSource/dataSource.ts","src/veryengine/dataSource/fsmData.ts","src/veryengine/dataSource/index.ts","src/veryengine/dataSource/stateActionData.ts","src/veryengine/dataSource/stateData.ts","src/veryengine/dataSource/stateTriggerData.ts","src/veryengine/dataSource/variableData.ts","src/veryengine/enum/enumTypes.ts","src/veryengine/enum/index.ts","src/veryengine/expression/expChar.ts","src/veryengine/expression/expManager.ts","src/veryengine/expression/expressionEnum.ts","src/veryengine/expression/expressionParsing.ts","src/veryengine/expression/expressions.ts","src/veryengine/expression/forwardQuery.ts","src/veryengine/expression/functionExpression.ts","src/veryengine/expression/functions.ts","src/veryengine/expression/index.ts","src/veryengine/expression/positions.ts","src/veryengine/expression/scope.ts","src/veryengine/expression/token.ts","src/veryengine/expression/tokenReader.ts","src/veryengine/expression/tokenizer.ts","src/veryengine/expression/variable.ts","src/veryengine/expression/variableExpression.ts","src/veryengine/expression/veryExpressions.ts","src/veryengine/global/errorManager.ts","src/veryengine/global/gameGlobal.ts","src/veryengine/global/index.ts","src/veryengine/global/time.ts","src/veryengine/html/index.ts","src/veryengine/html/showError.ts","src/veryengine/index.ts","src/veryengine/library/action/index.ts","src/veryengine/library/action/translate.ts","src/veryengine/library/trigger/index.ts","src/veryengine/library/trigger/input.ts","src/veryengine/loader/createInstance.ts","src/veryengine/loader/index.ts","src/veryengine/loader/loaderManager.ts","src/veryengine/manager/index.ts","src/veryengine/manager/manager.ts","src/veryengine/manager/projects.ts","src/veryengine/manager/reset.ts","src/veryengine/object/index.ts","src/veryengine/object/objects.ts","src/veryengine/object/veryengineObject.ts","src/veryengine/state/associatedState.ts","src/veryengine/state/fsm.ts","src/veryengine/state/index.ts","src/veryengine/state/state.ts","src/veryengine/state/stateAction.ts","src/veryengine/state/stateConst.ts","src/veryengine/template/index.ts","src/veryengine/template/template.ts","src/veryengine/template/templates.ts","src/veryengine/trigger/index.ts","src/veryengine/trigger/triggerBehaviour.ts","src/veryengine/trigger/triggers.ts","src/veryengine/utility/arrayUtility.ts","src/veryengine/utility/dictionary.ts","src/veryengine/utility/errorInfo.ts","src/veryengine/utility/index.ts","src/veryengine/utility/stringFormat.ts","src/veryengine/variables/babylonVariables.ts","src/veryengine/variables/index.ts","src/veryengine/variables/variables.ts","src/veryengine/variables/veryVarManager.ts","src/veryengine/variables/veryVariables.ts","src/veryengine/veryEngine.ts","src/verytable/index.ts","src/verytable/veryTable.ts","src/verytable/veryTableRow.ts","src/verytable/veryTableSet.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","veryEngine_1","Game","canvasElement","fps","this","_showFps","_canvas","VeryEngine","Canvas","_fps","_table","document","getElementById","prototype","createScene","_engine","dispose","BABYLON","Engine","engine","window","addEventListener","resize","_scene","Scene","camera","ArcRotateCamera","Vector3","setPosition","attachControl","lowerBetaLimit","upperBetaLimit","Math","PI","lowerRadiusLimit","displayLoadingUI","SceneLoader","Append","scene","hideLoadingUI","init","hot1","getData","projectName","onBeforeRenderObservable","add","Time","_sum","animate","_this","runRenderLoop","width","clientWidth","render","updateFpsPos","toggleDebug","scenes","debugLayer","isVisible","hide","show","embedMode","style","right","body","innerHTML","getFps","toFixed","game","canvas","fpsLabel","game_1","__importDefault","default","enum_1","VE_ActionBehaviour","_enabled","_projectName","_objectID","_actionID","_erveryFrame","isSequence","_sequenceState","SequenceActionState","Initial","Object","defineProperty","val","ActionType","Normal","setEveryFrame","is_every_frame","setActionID","object_id","action_id","paraParser","para_array","action","action_val","every_frame","active","onUpdate","update","pause","Pause","resume","Running","stop","finish","enabled","html_1","VE_Actions","addAction","ids","ID","split","id","trim","toLowerCase","_actionDics","ShowError","showError","hasAction","createAction","create","remove","VE_Assignment","state","total_string","_totalStr","_leftType","AssignType","Variable","_rightType","_state","__export","fsmData_1","VE_DataSource","project_name","name_id","is_template","_templateID","_isTemplate","_fsmIDs","_fsmDic","_triggerIDs","_triggerDic","_actionIDs","_actionDic","_actionInitValue","isCreatedFsm","fsm_id","createFsm","push","VE_FsmData","getFsmData","hasFsmIndex","index","getFsmID","isCreatedTrigger","trigger_id","addTrigger","trigger_data","getTrigger","hasTriggerIndex","getTriggerID","isCreatedAction","action_data","action_init_val","getAction","getActionInitVal","hasActionIndex","getActionID","clear","data_source","_fsmType","_initialValStr","_states","_dataSource","_fsmID","initFsm","fsm_type","initial_var","addState","state_data","getState","VE_StateActionData","sequence","type","StateActionType","Action","totalString","varID","varValue","actionID","everyFrame","setNormalAction","setAssignmentAction","var_id","var_value","Assignment","state_1","VE_StateData","fsm_data","val_str","is_initial_value","state_index","StateConst","STATE_INDEX","_stateIndex","logicalExp","_triggers","_actions","_associatedStates","_isSequence","_fsmData","_valStr","_isInitialValue","hasTrigger","hasAssociatedState","addAssociatedState","associated_state_data","getAssociatedState","setSequence","VE_StateTriggerData","triggerID","logicalSwitch","VE_VariableData","_variableIDs","_varDics","_varPosDic","isCreatedVariable","addVariable","var_paras","pos","getVariableID","getVariableParas","getPos","AssociatedFsmType","VariableScope","Severity","ExpChar","value","line","_value","_line","_pos","getValue","getLine","isDigit","test","isLetter","isWhiteSpace","isNewLine","isEndOfInput","is","_i","arguments","toString","scope_1","positions_1","expressionParsing_1","ExpManager","_scope","Scope","Create","isCreated","_expVariable","isCreatedExpression","createVariable","errors","ParseError","NameLocation","setVariable","createExpression","exp_str","exp","VE_ExpressionParsing","parsing","find","evaluate","getExpression","getVariable","printError","console","log","_a","ExpressionType","tokenizer_1","expressions_1","expressionEnum_1","functionExpression_1","functions_1","variableExpression_1","_bracketPair","input_exp","scope","var_scope","_varScope","_tokenizer","Tokenizer","parse","resultExp","buildExpression","current","isEnd","addError","getSource","consume","getProblemCollector","left","relationalExp","isOperator","reOrder","BinaryOperator","Add","Or","algebraExp","LT","LT_EQ","EQ","GT_EQ","GT","NEQ","productExp","Subtract","exponentExp","Multiply","Divide","Modulo","atomExp","BinaryExpression","Not","result","ConstantExpression","setSeal","next","isIdentifier","isKeyword","isStartBracket","newValue","expType","Empty","isConstant","endBracket","className","expectTrigger","OPERATOR","typeStr","isBool","getContents","isNumber","parseFloat","endStart","functionCall","loc","variableID","endsWith","VariableExpression","isSpecialIdentifier","op","rightOp","isSealed","getPriority","getPriorityOp","replaceLeft","target","newLeft","getLeftExp","leftOp","setLeftExp","end_bracket","FunctionExpression","funcToken","CustomFunctions","hasFunction","fun","createFunction","setFunction","paraCount","addPara","parameterNumber","trigger","matches","getProjectCollector","Local","dictionary_1","TrueExpression","clone","_expType","isEmpty","left_exp","right_exp","isRight","_op","_isSealed","_left","_right","resultAutoType","_opDic","Power","And","_priority","setRightExp","getOp","getRightExp","leftValue","rightValue","subtract","multiplyByFloats","pow","l","getBoolean","x","y","z","Vector2","GetValue","Dictionary","ForwardQuery","itemBuffer","endReached","problemCollector","endOfInputIndicator","undefined","nextOffset","offset","item","fetch","endOfInput","consumeNext","numberOfItems","shift","setProblemCollector","_paras","_function","func","expClone","printStr","Pow","args","NaN","Ln","Infinity","Lg","log10","Sqrt","sqrt","Abs","abs","Random","start","distance","random","Round","round","Sin","sin","ASin","asin","Cos","cos","ACos","acos","Tan","tan","ATan","atan","func_name","_functions","addFunction","funcName","SeverityExp","msg","severity","_message","_severity","Warning","message","getPosition","getMessage","getSeverity","variable_1","_parent","_context","GetRootScope","_root","makeConstant","E","CreateWithParent","parent","name","setType","setValue","Token","STRING","_source","_contents","_trigger","CreateAndFill","ch","addToTrigger","addToSource","addToContentChar","addToContent","getTokenType","setTokenType","new_type","setTrigger","setContent","content","setSource","source","EOI","symbols","isEndBracket","isStartSquareBracket","isEndSquareBracket","isStartBrace","isEndBrace","keywords","KEYWORD","values","triggers","SPECIAL_ID","isSpecialIdentifierWithContent","contents","NUMBER","BOOL","isString","forwardQuery_1","expChar_1","TokenReader","_super","_inputExp","_count","_operator","__extends","readChar","token_1","tokenReader_1","_decimalSeparator","_lineComment","_blockCommentStart","_blockCommentEnd","_brackets","_treatSinglePipeAsBracket","_specialIdStarters","_specialIdTerminators","_keywords","_keywordsCaseSensitive","_stringDelimiters","_boolConstant","isAtStartOfLineComment","skipToEndOfLine","isAtStartOfBlockComment","skipBlockComment","isAtStartOfNumber","fetchNumber","isAtStartOfIdentifier","fetchId","fetchString","isAtBracket","isAtStartOfSpecialId","fetchSpecialId","fetchOperator","hasDecimal","isIdentifierChar","indexOf","specialId","handleKeywords","separator","canConsumeThisString","check_string","isAtEndOfBlockComment","in_symbol","id_token","keyword","keywordToken","addWarning","_name","_constant","getName","VE_Expressions","VE_Error","table_name","_tableName","warning","error","getTableName","VE_ErrorManager","_errorList","getError","print","prefix","splice","printWarnning","GameGlobal","_frame","getDeltaTime","initZone","errorZone","showMsg","error_msg","errorContentNow","errorContentPrefix","display","closeBtn","querySelector","that","showWarn","close","Action_Translate","apply","_refType","Space","LOCAL","destroy","index_1","trigger_1","Trigger_MouseDown","onPointerObservable","pointInfo","VE_TriggerBehaviour","VE_Triggers","manager_1","variables_1","utility_1","global_1","CreateInstance","createProject","templates","VE_Manager","globalVars","objects","variables","varData","count","varPara","VeryVarManager","hasVarType","errorInfo","ErrorInfo","newVar","isCreatedTemplate","addTemplate","getTemplate","createInstance","template","object_name","error_info","destroy_on_create_new","AnalisysType","template_1","object_1","dataSource_1","createInstance_1","LoaderManager","_currentType","Global","_lastFsmID","_activeTemplate","_activeObject","_activeFsmData","_activeStateData","load","table","RowCount","startsWith","Template","templateID","replace","substring","VE_StringFormat","isIDLegal","VE_Template","objectID","objName","nameArray","activeGameObject","GameObject","tempObject","VeryEngineObject","paraData","varArray","paraSegment","paraArray","stateInfo","stateIndex","stateData","parseInt","para2Array","dataSource","stateArray","fsmID","triggerData","tempStr","newActionID","LogCount","actionData","actionPara","equalIndex","actionArray","projects_1","_projects","VE_Projects","projects","isCreatedObjects","addObjects","VE_Objects","isCreatedTemplates","addTemplates","VE_Templates","isCreatedVariables","addVariables","VE_Variables","globalVarData","isCreatedGlobals","getGlobalVars","getTemplates","getVariables","getObjects","clearProject","_objects","_variables","_templates","clearPorject","sleep","VE_Reset","_objectIDs","_objectDics","very_object","getObjectID","getVeryObject","unloadObject","ArrayUtility","game_object","gameObject","_expressions","_fsms","addFsm","fsm","getFsm","variable","exp_id","addExpression","expression","template_id","isCreatedVar","unload","keys","forEach","key","VE_AssociatedState","from_state","_types","_indexs","_numberIndex","_templateIDs","_fromState","connect","stateConst_1","VE_Fsm","_id","_stateDics","_frameCount","hasState","state_value","ContainsKey","removeState","Remove","receiveEvent","frameCount","ASSOCIATED_STATE_PREFIX","VE_State","_stateActions","_assocaitedStates","_fsm","state_action","Mesh","bind","VE_StateAction","is_sequence","_type","_action","STATE_SEPARATOR","VARIABLE_SYMBOL","_templateVarID","templateInstance","_instanceCount","instanceCount","setInstance","instance_obj","template_var_id","cloneTemplate","_templateDic","_instanceDic","isCreatedInstance","getInstance","destory_on_create_new","_logicalSwitch","_logicalExp","_triggerTargets","_triggerID","set","setTriggerID","addLogicalSwitch","addTriggerTarget","sendEvent","isEnabled","eventProcess","_triggerDics","createTrigger","arr","ele","_keys","_values","Count","SetValue","ks","GetKeys","GetValues","_escapeCharacters","_illegalChar","_formulaChar","strEscapeCharacterAction","para_str","tmpStr","getEscapeCharacter","strSubsectionAction","strBuilder","rStr","bracketFlag","hasQuote","para_char","getEscapeCharacter2","is_escape","strSubsection","needSpace","getParaArrayAll","coloneStr","slice","newPara","j","innerBracket","saveBracket","quotationMark","isEscape","needSaveBracket","str","hasBracket","isFormulaString","var_str","_transform","Transform","mesh","_transformNode","_mesh","localPosition","Zero","position","localEulerAngles","eulerAngles","forward","Forward","localScale","_veryVars","_tempalteVars","very_var","showError_1","var_type","_veryVarTypes","addVarType","var_prototype","createVar","getVarType","veryVarManager_1","VeryBool","initValue","value_str","varType","VeryInt","Value","newFloat","isNaN","VeryFloat","newVal","VeryNumber","VeryString","substr","VeryVector3","loaderManager_1","data","tableData","VeryTable","showErrorTest","veryTableRow_1","_columnIDs","_rows","newRow","VeryTableRow","row_index","column_index","getRow","getColumnID","floor","b","addRow","row_data","_rowData","insert","tempData","removeEnd","pop","VeryTableSet","tables","_tables","getTable","addTable","removeTable"],"mappings":"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","file":"veryengine.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/// <reference path=\"./dts/babylon.d.ts\"/>\r\n\r\nimport { VeryEngine, Time } from \"./veryengine/veryEngine\";\r\n\r\nexport default class Game {\r\n\tprivate _canvas: HTMLCanvasElement;\r\n\tprivate _fps: HTMLElement;\r\n\tprivate _table!: HTMLElement;\r\n\tprivate _showFps: boolean = true;\r\n\tprivate _engine!: BABYLON.Engine;\r\n\tprivate _scene!: BABYLON.Scene;\r\n\t// private _camera!: BABYLON.FreeCamera;\r\n\r\n\tconstructor(canvasElement: HTMLCanvasElement, fps: HTMLElement) {\r\n\t\tthis._canvas = canvasElement;\r\n\t\tVeryEngine.Canvas = this._canvas;\r\n\t\tthis._fps = fps;\r\n\t\t// this._engine = new BABYLON.Engine(this._canvas, true);\r\n\t\tthis._table = document.getElementById(\"VeryTable\")!;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建场景，并且启动\r\n\t */\r\n\tcreateScene(): Game {\r\n\t\t// 假设有运行中的engine，先停止，重新初始化\r\n\t\tif (this._engine) {\r\n\t\t\tthis._engine.dispose();\r\n\t\t}\r\n\t\tthis._engine = new BABYLON.Engine(this._canvas, true);\r\n\t\tVeryEngine.Engine = this._engine;\r\n\t\t// Resize\r\n\t\tlet engine = this._engine;\r\n\t\twindow.addEventListener(\"resize\", function () {\r\n\t\t\tengine.resize();\r\n\t\t});\r\n\r\n\t\tthis._scene = new BABYLON.Scene(this._engine);\r\n\t\tVeryEngine.Scene = this._scene;\r\n\r\n\t\t// 设定相机\r\n\t\tvar camera = new BABYLON.ArcRotateCamera(\"MainCamera\", 0, 0, 10, new BABYLON.Vector3(0, 0, 0), this._scene);\r\n    camera.setPosition(new BABYLON.Vector3(20, 200, 400));\r\n    camera.attachControl(this._canvas, true);\r\n    camera.lowerBetaLimit = 0.1;\r\n    camera.upperBetaLimit = (Math.PI / 2) * 0.99;\r\n    camera.lowerRadiusLimit = 150;\r\n\r\n\t\t// 加载过度动画开\r\n\t\tengine.displayLoadingUI();\r\n\r\n\t\t// 加载scene.babylon场景文件\r\n\t\tBABYLON.SceneLoader.Append(\"./scene/\", \"scene.babylon\", this._scene, function (scene) {\r\n\t\t\t\t// do something with the scene\r\n\t\t\t\t// 加载过度动画关\r\n\t\t\t\tengine.hideLoadingUI();\r\n\t\t});\r\n\r\n\r\n\t\t// const lightPos = new BABYLON.Vector3(0, 1, 0);\r\n\t\t// new BABYLON.HemisphericLight('hemlight', lightPos, this._scene);\r\n\r\n\t\t// const sphereOpts = { segments: 16, diameter: 1 };\r\n\t\t// let sphere = BABYLON.MeshBuilder.CreateSphere(\r\n\t\t// \t'mainsphere',\r\n\t\t// \tsphereOpts,\r\n\t\t// \tthis._scene\r\n\t\t// );\r\n\t\t// sphere.position.y = 1;\r\n\r\n\t\t// const groundOpts = { width: 6, height: 6, subdivisions: 2 };\r\n\t\t// BABYLON.MeshBuilder.CreateGround('mainground', groundOpts, this._scene);\r\n\r\n\t\t// 表格加载测试\r\n\t\t// console.log(hot1.getData());\r\n\t\tlet entrance: VeryEngine = new VeryEngine();\r\n\t\t// console.log(`空行数：${hot1.countEmptyRows()}`);\r\n\t\tentrance.init(hot1.getData(), projectName);\r\n\r\n\t\t// 全局渲染帧循环\r\n\t\tthis._scene.onBeforeRenderObservable.add(() => {\r\n\t\t\t// 添加帧函数\r\n\t\t\tTime._sum();\r\n\t\t})\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 启动渲染循环；\r\n\t */\r\n\tanimate(): Game {\r\n\t\tthis._engine.runRenderLoop(() => {\r\n\t\t\tif (this._canvas.width !== this._canvas.clientWidth) {\r\n\t\t\t\tthis._engine.resize();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._scene) {\r\n\t\t\t\tthis._scene.render();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._showFps) {\r\n\t\t\t\tthis.updateFpsPos();\r\n\t\t\t}\r\n\r\n\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 属性编辑器UI界面控制；\r\n\t */\r\n\ttoggleDebug(): Game {\r\n\t\tif (this._engine) {\r\n\t\t\t// Always showing the debug layer, because you can close it by itself\r\n\t\t\tvar scene = this._engine.scenes[0];\r\n\t\t\tif (scene.debugLayer.isVisible()) {\r\n\t\t\t\tscene.debugLayer.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// 此处修改了babylon.d.ts文件\r\n\t\t\t\tscene.debugLayer.show({ embedMode: true });\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * 更新fps显示及显示位置\r\n\t */\r\n\tupdateFpsPos(): void {\r\n\t\tif (this._fps) {\r\n\t\t\tthis._fps.style.right = document.body.clientWidth - (this._table.clientWidth + this._canvas.clientWidth) + \"px\";\r\n\r\n\t\t\tthis._fps.innerHTML = this._engine.getFps().toFixed() + \" fps\";\r\n\t\t}\r\n\t}\r\n}\r\n","\r\n\r\nimport Game from \"./game\";\r\n\r\nlet game!: Game;\r\nlet initFlag: boolean = false;\r\n\r\n/**\r\n * 初始化入口；\r\n */\r\nfunction initGame(): void {\r\n  let canvas = <HTMLCanvasElement>document.getElementById(\"renderCanvas\");\r\n  let fpsLabel = document.getElementById(\"fpsLabel\");\r\n  if (canvas !== null && fpsLabel !== null) {\r\n    game = new Game(canvas, fpsLabel);\r\n    game.createScene().animate();  // 链式调用\r\n  }\r\n}\r\n\r\nfunction runBtn(): void {\r\n  if (game) {\r\n    game.createScene().animate();\r\n  }\r\n}\r\n\r\nfunction toggleDebug(): void {\r\n  if (game) {\r\n    game.toggleDebug();\r\n  }\r\n}\r\n\r\n// 关联按钮\r\ndocument.getElementById(\"runButton\")!.addEventListener(\"click\", runBtn);\r\n\r\n// 关联按钮\r\ndocument.getElementById(\"debugButton\")!.addEventListener(\"click\", toggleDebug);\r\n\r\n// 启动引擎\r\n// 第一次启动时，先异步加载数据后再初始化，后期可以直接点击按钮进行加载；\r\ninitGame();\r\n// loadData2()\r\n//   .then(function (hot: HandTable) {\r\n//     console.log(hot.getData());\r\n//   }\r\n//   );\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ActionType, SequenceActionState } from \"../enum\";\r\n\r\nexport abstract class VE_ActionBehaviour {\r\n\r\n  public abstract get ID(): string;\r\n\r\n  public get enabled(): boolean {\r\n    return this._enabled;\r\n  }\r\n  public set enabled(val: boolean) {\r\n    this._enabled = val;\r\n  }\r\n  private _enabled: boolean = true;\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  };\r\n  private _projectName: string = '';\r\n\r\n  // protected GameObject ObjectInstance = null;\r\n  // protected veryObject: VeryObject = null;\r\n\r\n  public get objectID(): string {\r\n    return this._objectID;\r\n  };\r\n  private _objectID: string = '';\r\n\r\n  public get actionID(): string {\r\n    return this._actionID;\r\n  }\r\n  private _actionID: string = '';\r\n\r\n  public get Type(): ActionType {\r\n    return ActionType.Normal;\r\n  }\r\n\r\n  private _erveryFrame: boolean = false;\r\n  public get everyFrame(): boolean {\r\n    return this._erveryFrame;\r\n  }\r\n\r\n\r\n  public isSequence: boolean = false;\r\n\r\n  public get SequenceState(): SequenceActionState {\r\n    return this._sequenceState;\r\n  }\r\n  public set SequenceState(val: SequenceActionState) {\r\n    this._sequenceState = val;\r\n  }\r\n  private _sequenceState: SequenceActionState = SequenceActionState.Initial;\r\n\r\n  // private VE_SequenceActions _sequenceAction = null;\r\n\r\n\r\n  public setEveryFrame(is_every_frame: boolean): void {\r\n    this._erveryFrame = is_every_frame;\r\n  }\r\n\r\n  public setActionID(object_id: string, action_id: string): void {\r\n    this._objectID = object_id;\r\n    this._actionID = action_id;\r\n  }\r\n\r\n  // SetVeryObject(): void {}\r\n\r\n  public paraParser(para_array: string[]): boolean {\r\n    if (para_array) { }\r\n    return true;\r\n  }\r\n\r\n  public action(action_val: boolean, every_frame: boolean): void {\r\n    this._enabled = action_val;\r\n    this._erveryFrame = every_frame;\r\n    if (this._enabled) {\r\n      this.active()\r\n      if (!this._erveryFrame) {\r\n        this.onUpdate();\r\n      }\r\n    }\r\n  }\r\n\r\n  public abstract active(): void;\r\n\r\n\r\n  public update(): void {\r\n    if(this._enabled && this._erveryFrame) {\r\n      this.onUpdate();\r\n    }\r\n  }\r\n\r\n  public onUpdate(): void {\r\n\r\n  }\r\n\r\n  public pause(): void {\r\n    this._sequenceState = SequenceActionState.Pause;\r\n  }\r\n\r\n  public resume(): void {\r\n    this._sequenceState = SequenceActionState.Running;\r\n  }\r\n\r\n  public stop(): void {\r\n    this._sequenceState = SequenceActionState.Initial;\r\n  }\r\n\r\n  public finish(): void {\r\n    this._sequenceState = SequenceActionState.Initial;\r\n\r\n    this.enabled = false;\r\n  }\r\n\r\n  // 如果创建过程中有add callback，需要destroy时删除\r\n  public abstract destroy(): void;\r\n\r\n\r\n}","import { VE_ActionBehaviour } from \"./actionBehaviour\";\r\nimport { ShowError } from \"../html\";\r\n\r\nexport class VE_Actions {\r\n\r\n  private static _actionDics: { [key: string]: VE_ActionBehaviour} = {};\r\n\r\n  public static addAction(action: VE_ActionBehaviour): void {\r\n    let ids: string[] = action.ID.split('|');\r\n    for(let i: number = 0; i < ids.length; i++) {\r\n      let id: string = ids[i].trim().toLowerCase();\r\n      if(this._actionDics[id]) {\r\n        ShowError.showError(`响应初始化错误，响应ID重复，当前响应ID：${id}，请为当前响应重新分配响应ID！`);\r\n      } else {\r\n        this._actionDics[id] = action;\r\n      }\r\n    }\r\n  }\r\n\r\n  public static hasAction(action_id: string): boolean {\r\n    action_id = action_id.toLowerCase();\r\n    if(this._actionDics[action_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static createAction(action_id: string): VE_ActionBehaviour {\r\n    action_id = action_id.toLowerCase();\r\n    return Object.create(this._actionDics[action_id]);\r\n  }\r\n  \r\n  public static remove(action_id: string): void {\r\n    action_id = action_id.toLowerCase();\r\n    delete this._actionDics[action_id];\r\n  }\r\n\r\n\r\n}","import { VE_State } from \"../state\";\r\nimport { AssignType } from \"../enum\";\r\n\r\nexport class VE_Assignment {\r\n\r\n  public get state(): VE_State {\r\n    return this._state;\r\n  }\r\n  private _state: VE_State;\r\n\r\n  private _totalStr: string = '';\r\n\r\n  public get leftType(): AssignType {\r\n    return this._leftType;\r\n  }\r\n  private _leftType: AssignType = AssignType.Variable;\r\n\r\n  public get rightType(): AssignType {\r\n    return this._rightType;\r\n  }\r\n  private _rightType: AssignType = AssignType.Variable;\r\n\r\n  \r\n  constructor(state: VE_State, total_string: string) {\r\n    this._state = state;\r\n    this._totalStr = total_string;\r\n  }\r\n\r\n  \r\n}","export * from './actionBehaviour';\r\nexport * from './assignment';\r\nexport * from './actions';","import { VE_FsmData } from \"./fsmData\";\r\n\r\nexport class VE_DataSource {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  public get objectID(): string {\r\n    return this._objectID;\r\n  }\r\n  private _objectID: string = '';\r\n\r\n  public get templateID(): string {\r\n    return this._templateID;\r\n  }\r\n  private _templateID: string = '';\r\n\r\n  public get isTemplate(): boolean {\r\n    return this._isTemplate;\r\n  }\r\n  private _isTemplate: boolean = false;\r\n\r\n  public get id(): string {\r\n    if (this._isTemplate) {\r\n      return this._templateID;\r\n    } else {\r\n      return this._objectID;\r\n    }\r\n  }\r\n\r\n  private _fsmIDs: string[] = [];\r\n  private _fsmDic: { [key: string]: VE_FsmData } = {};\r\n\r\n  private _triggerIDs: string[] = [];\r\n  private _triggerDic: { [key: string]: string[] } = {};\r\n\r\n  private _actionIDs: string[] = [];\r\n  private _actionDic: { [key: string]: string[] } = {};\r\n  private _actionInitValue: { [key: string]: string[] } = {};\r\n\r\n  public get triggerCount(): number {\r\n    return this._triggerIDs.length;\r\n  }\r\n\r\n  public get actionCount(): number {\r\n    return this._actionIDs.length;\r\n  }\r\n\r\n  public get fsmCount(): number {\r\n    return this._fsmIDs.length;\r\n  }\r\n\r\n\r\n  constructor(project_name: string, name_id: string, is_template: boolean) {\r\n    this._projectName = project_name;\r\n    this._isTemplate = is_template;\r\n    if(is_template) {\r\n      this._templateID = name_id;\r\n    } else {\r\n      this._objectID = name_id;\r\n    }\r\n  }\r\n\r\n  public isCreatedFsm(fsm_id: string): boolean {\r\n    if(this._fsmDic[fsm_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public createFsm(fsm_id: string): void {\r\n    this._fsmIDs.push(fsm_id);\r\n    this._fsmDic[fsm_id] = new VE_FsmData(fsm_id, this);\r\n  }\r\n\r\n  public getFsmData(fsm_id: string): VE_FsmData {\r\n    return this._fsmDic[fsm_id];\r\n  }\r\n\r\n  public hasFsmIndex(index: number): boolean {\r\n    if(index >= 0 && index < this._fsmIDs.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getFsmID(index: number): string {\r\n    return this._fsmIDs[index];\r\n  }\r\n\r\n  public isCreatedTrigger(trigger_id: string): boolean {\r\n    if(this._triggerDic[trigger_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addTrigger(trigger_id: string, trigger_data: string[]): void {\r\n    this._triggerIDs.push(trigger_id);\r\n    this._triggerDic[trigger_id] = trigger_data;\r\n  }\r\n\r\n  public getTrigger(trigger_id: string): string[] {\r\n    return this._triggerDic[trigger_id];\r\n  }\r\n\r\n  public hasTriggerIndex(index: number): boolean {\r\n    if(index >=0 && index < this._triggerIDs.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getTriggerID(index: number): string {\r\n    return this._triggerIDs[index];\r\n  }\r\n\r\n  public isCreatedAction(action_id: string): boolean {\r\n    if(this._actionDic[action_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addAction(action_id: string, action_data: string[], action_init_val: string[]): void {\r\n    this._actionIDs.push(action_id);\r\n    this._actionDic[action_id] = action_data;\r\n    this._actionInitValue[action_id] = action_init_val;\r\n  }\r\n\r\n  public getAction(action_id: string): string[] {\r\n    return this._actionDic[action_id];\r\n  }\r\n\r\n  public getActionInitVal(action_id: string): string[] {\r\n    return this._actionInitValue[action_id];\r\n  }\r\n\r\n  public hasActionIndex(index: number): boolean {\r\n    if(index >= 0 && index < this._actionIDs.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getActionID(index: number): string {\r\n    return this._actionIDs[index];\r\n  }\r\n\r\n  public clear(): void {\r\n    this._fsmIDs = [];\r\n    this._fsmDic = {};\r\n    this._triggerIDs = [];\r\n    this._triggerDic = {};\r\n    this._actionIDs = [];\r\n    this._actionDic = {};\r\n    this._actionInitValue = {};\r\n  }\r\n\r\n\r\n\r\n}","import { VE_DataSource, VE_StateData } from \"./index\";\r\n\r\nexport class VE_FsmData {\r\n  public get dataSource(): VE_DataSource {\r\n    return this._dataSource;\r\n  }\r\n  private _dataSource: VE_DataSource;\r\n\r\n  public get fsmID(): string {\r\n    return this._fsmID;\r\n  }\r\n  private _fsmID: string;\r\n\r\n  public get fsmType(): string {\r\n    return this._fsmType;\r\n  }\r\n  private _fsmType: string = '';\r\n\r\n  public get initialValStr(): string {\r\n    return this._initialValStr;\r\n  }\r\n  private _initialValStr: string = 'defalut';\r\n\r\n  private _states: VE_StateData[] = [];\r\n\r\n  public get count(): number {\r\n    return this._states.length;\r\n  }\r\n\r\n  constructor(fsm_id: string, data_source: VE_DataSource) {\r\n    this._dataSource = data_source;\r\n    this._fsmID = fsm_id;\r\n  }\r\n\r\n  public initFsm(fsm_type: string, initial_var: string): void {\r\n    this._fsmType = fsm_type;\r\n    this._initialValStr = initial_var;\r\n  }\r\n\r\n  public addState(state_data: VE_StateData): void {\r\n    this._states.push(state_data);\r\n  }\r\n\r\n  public getState(index: number): VE_StateData {\r\n    return this._states[index];\r\n  }\r\n}","export * from './variableData';\r\nexport * from './fsmData';\r\nexport * from './stateActionData';\r\nexport * from './stateTriggerData';\r\nexport * from './stateData';\r\nexport * from './dataSource';\r\n\r\n","import { StateActionType } from \"../enum\";\r\n\r\nexport class VE_StateActionData {\r\n\r\n  public actionID: string;\r\n  public enabled: string;\r\n  public everyFrame: string;\r\n  public isSequence: string;\r\n  public type: StateActionType;\r\n  public totalString: string = '';\r\n  public varID: string = '';\r\n  public varValue: string = '';\r\n\r\n  constructor(action_id: string, enabled: string = 'false', every_frame: string = 'false', sequence: string = 'false', type: StateActionType = StateActionType.Action) {\r\n    this.actionID = action_id;\r\n    this.enabled = enabled;\r\n    this.everyFrame = every_frame;\r\n    this.isSequence = sequence;\r\n    this.type = type;\r\n  }\r\n\r\n  public setNormalAction(action_id: string, enabled: string = 'false', every_frame: string = 'false', sequence: string = 'false'): void {\r\n    this.actionID = action_id;\r\n    this.enabled = enabled;\r\n    this.everyFrame = every_frame;\r\n    this.isSequence = sequence;\r\n    this.type = StateActionType.Action;\r\n  }\r\n\r\n  public setAssignmentAction(total_string: string, var_id: string, var_value: string): void {\r\n    this.totalString = total_string;\r\n    this.varID = var_id;\r\n    this.varValue = var_value;\r\n    this.type = StateActionType.Assignment;\r\n  }\r\n\r\n}","import { VE_FsmData } from \"./index\";\r\nimport { StateConst } from \"../state\";\r\nimport { VE_StateTriggerData } from \"./stateTriggerData\";\r\nimport { VE_StateActionData } from \"./stateActionData\";\r\n\r\nexport class VE_StateData {\r\n\r\n  public get fsmData(): VE_FsmData {\r\n    return this._fsmData;\r\n  }\r\n  private _fsmData: VE_FsmData;\r\n\r\n  public get ValStr(): string {\r\n    return this._valStr;\r\n  }\r\n  private _valStr: string;\r\n\r\n  public get isInitialValue(): boolean {\r\n    return this._isInitialValue;\r\n  }\r\n  private _isInitialValue: boolean;\r\n\r\n  public get stateIndex(): number {\r\n    return this._stateIndex;\r\n  }\r\n  private _stateIndex: number = StateConst.STATE_INDEX;\r\n\r\n  public logicalExp: string = '';\r\n\r\n  private _triggers: VE_StateTriggerData[] = [];\r\n  private _actions: VE_StateActionData[] = [];\r\n  private _associatedStates: string[] = [];\r\n\r\n  public get isSequence(): boolean {\r\n    return this._isSequence;\r\n  }\r\n  private _isSequence: boolean = false;\r\n\r\n  public get triggerCount(): number {\r\n    return this._triggers.length;\r\n  }\r\n\r\n  public get actionCount(): number {\r\n    return this._actions.length;\r\n  }\r\n\r\n  public get associatedStateCount(): number {\r\n    return this._associatedStates.length;\r\n  }\r\n\r\n  constructor(fsm_data: VE_FsmData, val_str: string, is_initial_value: boolean, state_index: number = StateConst.STATE_INDEX) {\r\n    this._fsmData = fsm_data;\r\n    this._valStr = val_str;\r\n    this._isInitialValue = is_initial_value;\r\n    this._stateIndex = state_index;\r\n  }\r\n\r\n  public hasTrigger(index: number): boolean {\r\n    if(index >= 0 && index < this._triggers.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addTrigger(trigger_data: VE_StateTriggerData): void {\r\n    this._triggers.push(trigger_data);\r\n  }\r\n\r\n  public getTrigger(index: number): VE_StateTriggerData {\r\n    return this._triggers[index];\r\n  }\r\n\r\n  public hasAction(index: number): boolean {\r\n    if(index >= 0 && index < this._actions.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addAction(action_data: VE_StateActionData): void {\r\n    this._actions.push(action_data);\r\n  }\r\n\r\n  public getAction(index: number): VE_StateActionData {\r\n    return this._actions[index];\r\n  }\r\n\r\n  public hasAssociatedState(index: number): boolean {\r\n    if(index >= 0 && index < this._associatedStates.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addAssociatedState(associated_state_data: string): void {\r\n    this._associatedStates.push(associated_state_data);\r\n  }\r\n\r\n  public getAssociatedState(index: number): string {\r\n    return this._associatedStates[index];\r\n  }\r\n\r\n  public setSequence(): void {\r\n    this._isSequence = true;\r\n  }\r\n\r\n}","export class VE_StateTriggerData {\r\n\r\n  public triggerID: string;\r\n  public logicalSwitch: string;\r\n  public logicalExp: string;\r\n\r\n  public static get Empty(): VE_StateTriggerData {\r\n    return new VE_StateTriggerData('');\r\n  }\r\n\r\n  constructor(trigger_id: string) {\r\n    this.triggerID = trigger_id;\r\n    this.logicalSwitch = '';\r\n    this.logicalExp = '';\r\n   }\r\n}","export class VE_VariableData {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  private _variableIDs: string[] = [];\r\n  private _varDics: { [key: string]: string[] } = {};\r\n  private _varPosDic: { [key: string]: string } = {};\r\n\r\n  public get count(): number {\r\n    return this._variableIDs.length;\r\n  }\r\n\r\n  constructor(project_name: string) {\r\n    this._projectName = project_name;\r\n  }\r\n\r\n  public isCreatedVariable(var_id: string): boolean {\r\n    if (this._varDics[var_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addVariable(var_id: string, var_paras: string[], pos: string): void {\r\n    this._varDics[var_id] = var_paras;\r\n    this._variableIDs.push(var_id);\r\n    this._varPosDic[var_id] = pos;\r\n  }\r\n\r\n  public getVariableID(index: number): string {\r\n    if (index >= 0 && index < this._variableIDs.length) {\r\n      return this._variableIDs[index];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public getVariableParas(var_id: string): string[] {\r\n    return this._varDics[var_id];\r\n  }\r\n\r\n  public getPos(var_id: string): string {\r\n    return this._varPosDic[var_id];\r\n  }\r\n\r\n  public clear(): void {\r\n    this._variableIDs = [];\r\n    this._varDics = {};\r\n  }\r\n}","\r\n\r\n\r\nexport enum ActionType {\r\n  Normal, Animation\r\n}\r\n\r\nexport enum SequenceActionState {\r\n  Initial, Prepared, Running, Pause\r\n}\r\n\r\nexport enum StateActionType {\r\n  Action, Assignment\r\n}\r\n\r\nexport enum AssignType {\r\n  Variable = 0,\r\n  Template,\r\n  TemplateVariable,\r\n  Const,\r\n}\r\n\r\nexport enum AssociatedFsmType {\r\n  Object = 0,\r\n  Template\r\n}\r\n\r\nexport enum VariableScope {\r\n  Local = 0,\r\n  Fsm,\r\n  Global,\r\n  Scene\r\n}\r\n\r\nexport enum Severity {\r\n  Warning,\r\n  Error\r\n}","export * from './enumTypes';","import { IPosition } from \"./positions\";\r\n\r\nexport class ExpChar implements IPosition {\r\n\r\n  private _value: string = '';\r\n  private _line: number = 0;\r\n  private _pos: number = 0;\r\n\r\n\r\n  constructor(value: string, line: number, pos: number) {\r\n    this._value = value;\r\n    this._line = line;\r\n    this._pos = pos;\r\n  }\r\n\r\n  public getValue(): string {\r\n    return this._value;\r\n  }\r\n\r\n  public getLine(): number {\r\n    return this._line;\r\n  }  \r\n  \r\n  public getPos(): number {\r\n    \r\n    return this._pos;\r\n  }\r\n\r\n  public isDigit(): boolean {\r\n    return (/\\d/).test(this._value);\r\n  }\r\n\r\n  public isLetter(): boolean {\r\n    return (/[a-zA-Z]/).test(this._value);\r\n  }\r\n\r\n  public isWhiteSpace(): boolean {\r\n    return this._value === ' ';\r\n  }\r\n\r\n  public isNewLine(): boolean {\r\n    return this._value === '\\n';\r\n  }\r\n\r\n  public isEndOfInput(): boolean {\r\n    return this._value === '\\0';\r\n  }\r\n\r\n  public is(...val: string[]): boolean {\r\n    for(let i: number = 0; i < val.length; i++) {\r\n      if(val[i] === this._value && val[i] !== '\\0') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this._value;\r\n  }\r\n\r\n}\r\n\r\n","import { Scope } from \"./scope\";\r\nimport { IExpression } from \"./expressions\";\r\nimport { ParseError, NameLocation } from \"./positions\";\r\nimport { VE_ExpressionParsing } from \"./expressionParsing\";\r\nimport { VariableScope } from \"../enum\";\r\nimport { Variable } from \"./variable\";\r\nimport { ShowError } from \"../html\";\r\n\r\nexport class ExpManager {\r\n\r\n  private static _scope: Scope;\r\n  private static _expVariable: { [key: string]: IExpression } = {};\r\n\r\n  public static errors: ParseError[] = [];\r\n\r\n  private static _projectName = '';\r\n  private static _objectID = '';\r\n\r\n  public static init() {\r\n    this._scope = Scope.Create();\r\n  }\r\n\r\n  public static isCreated(name_id: string): boolean {\r\n    if (this._scope.isCreated(name_id)) {\r\n      return true;\r\n    }\r\n    if (this._expVariable[name_id]) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public static isCreatedVariable(name_id: string): boolean {\r\n    if (this._scope.isCreated(name_id)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static isCreatedExpression(name_id: string): boolean {\r\n    if (this._expVariable[name_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static createVariable(name_id: string, type: string, value: any): boolean {\r\n    this.errors = [];\r\n    if (this.isCreated(name_id)) {\r\n      this.errors.push(ParseError.Error(new NameLocation(name_id), `变量：${name_id}，类型：${type}，该变量已创建，请勿重复创建！`));\r\n      return false;\r\n    }\r\n    this._scope.setVariable(name_id, type, value);\r\n    return true;\r\n  }\r\n\r\n  public static createExpression(name_id: string, exp_str: string): boolean {\r\n    this.errors = [];\r\n    if (this.isCreated(name_id)) {\r\n      this.errors.push(ParseError.Error(new NameLocation(name_id), `表达式名：${name_id}，表达式：${exp_str}，该表达式已定义，请勿重复定义！`));\r\n      return false;\r\n    }\r\n    let exp: IExpression = VE_ExpressionParsing.parsing(name_id, exp_str, this._scope, this._projectName, '', '', VariableScope.Scene);\r\n    if (VE_ExpressionParsing.errors.length > 0) {\r\n      for (let i: number = 0; i < VE_ExpressionParsing.errors.length; i++) {\r\n        this.errors.push(VE_ExpressionParsing.errors[i]);\r\n      }\r\n      return false;\r\n    }\r\n    this._expVariable[name_id] = exp;\r\n    return true;\r\n  }\r\n\r\n  public static getValue(name_id: string): any {\r\n    if (this.isCreated(name_id)) {\r\n      if (this.isCreatedVariable(name_id)) {\r\n        return this._scope.find(name_id)!.getValue();\r\n      } else {\r\n        return this._expVariable[name_id].evaluate();\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public static getExpression(name_id: string): IExpression | null {\r\n    if (this._expVariable[name_id]) {\r\n      return this._expVariable[name_id];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public static getVariable(name_id: string): Variable | null {\r\n    if (this.isCreatedVariable(name_id)) {\r\n      return this._scope.find(name_id);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  public static printError(): void {\r\n    if (this.errors.length > 0) {\r\n      for (let i: number = 0; i < this.errors.length; i++) {\r\n        console.log(this.errors[i].toString());\r\n        ShowError.showError(this.errors[i].toString());\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nExpManager.init();\r\n\r\ntry {\r\n  ExpManager.createVariable('first', 'number', 1);\r\n  ExpManager.createVariable('second', 'number', 2);\r\n  ExpManager.createVariable('third', 'bool', true);\r\n  console.log(ExpManager.getValue('third'));\r\n\r\n  // ExpManager.createExpression('add', '(1 + first + second * (first + second + 3)) / 2');\r\n  // ExpManager.createExpression('add', 'cos(PI/2) + sin(PI/2)');\r\n  // console.log(ExpManager.getExpression('add')!.toString());\r\n  // console.log('值： ' + ExpManager.getExpression('add')!.evaluate());\r\n\r\n  // ExpManager.createExpression('exp1', 'second + 2 * second + abs(-10)');\r\n  ExpManager.createExpression('exp1', '（first * second + second） > 10');\r\n  console.log('值2： ' + ExpManager.getExpression('exp1')!.evaluate());\r\n\r\n  // ExpManager.createExpression('multiply', 'x * y');\r\n  // ExpManager.createExpression('substract', 'x - y');\r\n\r\n  // console.log(ExpManager.getExpression('add')!.evaluate());\r\n\r\n  // console.log(ExpManager.getExpression('multiply')!.evaluate());\r\n  // console.log(ExpManager.getExpression('substract')!.evaluate());\r\n\r\n}\r\ncatch {\r\n\r\n}\r\n\r\n\r\n\r\nExpManager.printError();\r\n\r\n\r\n","export enum ExpressionType {\r\n  ID, SPECIAL_ID, KEYWORD, STRING, NUMBER, BOOL, OPERATOR, INTEGER, FLOAT, DOUBLE, EOI\r\n}","import { Scope } from \"./scope\";\r\nimport { Tokenizer } from \"./tokenizer\";\r\nimport { ParseError, IPosition } from \"./positions\";\r\nimport { IExpression, BinaryOperator, BinaryExpression, ConstantExpression } from \"./expressions\";\r\nimport { ExpressionType } from \"./expressionEnum\";\r\nimport { FunctionExpression } from \"./functionExpression\";\r\nimport { Token } from \"./token\";\r\nimport { IFunction, CustomFunctions } from \"./functions\";\r\nimport { Variable } from \"./variable\";\r\nimport { VariableExpression } from \"./variableExpression\";\r\nimport { VariableScope } from \"../enum\";\r\n\r\n\r\n\r\nexport class VE_ExpressionParsing {\r\n\r\n  private static _bracketPair: { [key: string]: string } = {};\r\n\r\n  private static _scope: Scope;\r\n  private static _tokenizer: Tokenizer;\r\n\r\n  public static errors: ParseError[] = [];\r\n\r\n  private static _projectName: string = '';\r\n  private static _objectID: string = '';\r\n  private static _fsmID = '';\r\n\r\n  private static _varScope: VariableScope = VariableScope.Local;\r\n\r\n\r\n  public static init(): void {\r\n    this._bracketPair['('] = ')';\r\n    this._bracketPair['['] = ']';\r\n    this._bracketPair['{'] = '}';\r\n    this._bracketPair['（'] = '）';\r\n    this._bracketPair['【'] = '】';\r\n  }\r\n\r\n  public static parsing(name_id: string, input_exp: string, scope: Scope, project_name: string, object_id: string, fsm_id: string, var_scope: VariableScope): IExpression {\r\n    this._scope = scope;\r\n    this._projectName = project_name;\r\n    this._objectID = object_id;\r\n    this._fsmID = fsm_id;\r\n    this._varScope = var_scope;\r\n    this._tokenizer = new Tokenizer(input_exp);\r\n    // while(!this._tokenizer.current().isEnd()) {\r\n    //   console.log(this._tokenizer.consume());\r\n    // }\r\n    this.errors = [];\r\n    return this.parse();\r\n  }\r\n\r\n  private static parse(): IExpression {\r\n    let resultExp: IExpression = this.buildExpression();\r\n    if (!this._tokenizer.current().isEnd()) {\r\n      this._tokenizer.addError(this._tokenizer.current(), `未定义字符：${this._tokenizer.current().getSource()}！`);\r\n      this._tokenizer.consume();\r\n    }\r\n    this.errors = this._tokenizer.getProblemCollector();\r\n    return resultExp;\r\n  }\r\n\r\n\r\n  private static buildExpression(): IExpression {\r\n    let left: IExpression = this.relationalExp();\r\n    if (this._tokenizer.current().isOperator('&&')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.buildExpression();\r\n      return this.reOrder(left, right, BinaryOperator.Add);\r\n    }\r\n    if (this._tokenizer.current().isOperator('||')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.buildExpression();\r\n      return this.reOrder(left, right, BinaryOperator.Or);\r\n    }\r\n    return left;\r\n  }\r\n\r\n\r\n  private static relationalExp(): IExpression {\r\n    let left: IExpression = this.algebraExp();\r\n    if (this._tokenizer.current().isOperator('<')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.LT);\r\n    }\r\n    if (this._tokenizer.current().isOperator('<=')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.LT_EQ);\r\n    }\r\n    if (this._tokenizer.current().isOperator('==')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.EQ);\r\n    }\r\n    if (this._tokenizer.current().isOperator('>=')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.GT_EQ);\r\n    }\r\n    if (this._tokenizer.current().isOperator('>')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.GT);\r\n    }\r\n    if (this._tokenizer.current().isOperator('!=')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.relationalExp();\r\n      return this.reOrder(left, right, BinaryOperator.NEQ);\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private static algebraExp(): IExpression {\r\n    let left: IExpression = this.productExp();\r\n    if (this._tokenizer.current().isOperator('+')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.algebraExp();\r\n      return this.reOrder(left, right, BinaryOperator.Add);\r\n    }\r\n    if (this._tokenizer.current().isOperator('-')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.algebraExp();\r\n      return this.reOrder(left, right, BinaryOperator.Subtract);\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private static productExp(): IExpression {\r\n    let left: IExpression = this.exponentExp();\r\n    if (this._tokenizer.current().isOperator('*')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.productExp();\r\n      return this.reOrder(left, right, BinaryOperator.Multiply);\r\n    }\r\n    if (this._tokenizer.current().isOperator('/')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.productExp();\r\n      return this.reOrder(left, right, BinaryOperator.Divide);\r\n    }\r\n    if (this._tokenizer.current().isOperator('%')) {\r\n      this._tokenizer.consume();\r\n      let right: IExpression = this.productExp();\r\n      return this.reOrder(left, right, BinaryOperator.Modulo);\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private static exponentExp(): IExpression {\r\n    let left: IExpression = this.atomExp();\r\n    if (this._tokenizer.current().isOperator('!') || this._tokenizer.current().isOperator('！')) {\r\n      left = new BinaryExpression(left, left, BinaryOperator.Not);\r\n    }\r\n    return left;\r\n  }\r\n\r\n  private static atomExp(): IExpression {\r\n    // 处理起始为“-”\r\n    if (this._tokenizer.current().isOperator('-')) {\r\n      this._tokenizer.consume();\r\n      let result: BinaryExpression = new BinaryExpression(new ConstantExpression(0, 'number'), this.atomExp(), BinaryOperator.Subtract);\r\n      result.setSeal();\r\n      return result;\r\n    }\r\n    // 取非运算\r\n    if (this._tokenizer.current().isOperator('!') && (this._tokenizer.next().isIdentifier() || this._tokenizer.next().isKeyword() || this._tokenizer.next().isStartBracket())) {\r\n      this._tokenizer.consume();\r\n      let newValue: IExpression = this.atomExp();\r\n      if (newValue.expType === 'bool') {\r\n        let notExp: BinaryExpression = new BinaryExpression(newValue, newValue, BinaryOperator.Not);\r\n        return notExp;\r\n      } else {\r\n        this._tokenizer.addError(this._tokenizer.current(), '取非运算(!)后应跟着bool值类型！');\r\n        return ConstantExpression.Empty();\r\n      }\r\n    }\r\n    // 忽略最前面的“+”\r\n    if (this._tokenizer.current().isOperator('+') && this._tokenizer.next().isStartBracket()) {\r\n      this._tokenizer.consume();\r\n    }\r\n    // 忽略最前面的“+”\r\n    if (this._tokenizer.current().isOperator('+') && this._tokenizer.next().isConstant()) {\r\n      this._tokenizer.consume();\r\n    }\r\n    // 忽略最前面的“+”\r\n    if (this._tokenizer.current().isOperator('+') && this._tokenizer.next().isIdentifier()) {\r\n      this._tokenizer.consume();\r\n    }\r\n    // TODO：VeryVar解析，此处解析“*变量名”类型\r\n\r\n    // 括号开始\r\n    if (this._tokenizer.current().isStartBracket()) {\r\n      let endBracket: string = this._bracketPair[this._tokenizer.consume().getTrigger()];\r\n      let result: IExpression = this.buildExpression();\r\n      if (result.className === 'BinaryExpression') {\r\n        (<BinaryExpression>result).setSeal();\r\n      }\r\n      this.expectTrigger(ExpressionType.OPERATOR, endBracket); // 括号结束处理\r\n      return result;\r\n    }\r\n    // 一些常量\r\n    if (this._tokenizer.current().isConstant()) {\r\n      let value: any;\r\n      let typeStr: string = 'string';\r\n      if (this._tokenizer.current().isBool()) {\r\n        value = this._tokenizer.current().getContents().toLowerCase() === 'true' ? true : false;\r\n        typeStr = 'bool';\r\n      } else if (this._tokenizer.current().isNumber()) {\r\n        value = parseFloat(this._tokenizer.current().getContents());\r\n        typeStr = 'number';\r\n        // console.log('常量：' + value);\r\n      } else {\r\n        value = this._tokenizer.current().getContents();\r\n        typeStr = 'string';\r\n      }\r\n      this._tokenizer.consume();\r\n      let constantExp: IExpression = new ConstantExpression(value, typeStr);\r\n      return constantExp;\r\n    }\r\n    // 变量或函数处理\r\n    if (this._tokenizer.current().isIdentifier()) {\r\n      if (this._tokenizer.next().isStartBracket()) { // 自定义函数\r\n        // 应该用递归的方式把函数算出来，当一个值处理，在这里做一全套的\r\n        let endStart: string = this._bracketPair[this._tokenizer.next().getTrigger()];\r\n        return this.functionCall(endStart);\r\n      } else { // 变量\r\n        // VryVar变量\r\n        let varValue: Variable | null;\r\n        let loc: IPosition = this._tokenizer.current();\r\n        let variableID: string = this._tokenizer.consume().getContents();\r\n        if (variableID.endsWith('.') && this._tokenizer.current().isOperator('*') && this._tokenizer.next().isIdentifier()) { // 对象.*变量\r\n          // TODO：解析VeryVar变量，此处解析“对象.*变量名”类型\r\n          console.log('TODO：解析VeryVar变量');\r\n          return ConstantExpression.Empty();\r\n        } else {\r\n          // 一般变量\r\n          varValue = this._scope.find(variableID);\r\n          // console.log(variableID + '  ---  ' + varValue);\r\n          if (varValue === null) {\r\n            this._tokenizer.addError(loc, `变量名：${variableID}，该变量在变量作用域中未定义，也未定义该表达式，无法识别！另外，赋值响应右侧如果是公式，不允许引用模板变量！`);\r\n            return ConstantExpression.Empty();\r\n          } else {\r\n            return new VariableExpression(varValue);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 关键字处理\r\n    if (this._tokenizer.current().isKeyword()) {\r\n      // this关键字处理，专用于处理状态当前状态变量\r\n      // TODO: 与平台结合\r\n      return ConstantExpression.Empty();\r\n    }\r\n\r\n    // 暂时没有\r\n    if (this._tokenizer.current().isSpecialIdentifier()) {\r\n      this._tokenizer.addError(this._tokenizer.current(), `特殊ID：${this._tokenizer.current().getSource()}，暂时未定义，请勿使用！`);\r\n      this._tokenizer.consume();\r\n      return ConstantExpression.Empty();\r\n    }\r\n\r\n    // 未知情况\r\n    this._tokenizer.addError(this._tokenizer.current(), `检测到无效字符：${this._tokenizer.current().getSource()}，请检查！`);\r\n    this._tokenizer.consume();\r\n\r\n    return ConstantExpression.Empty();\r\n  }\r\n\r\n  private static reOrder(left: IExpression, right: IExpression, op: BinaryOperator): IExpression {\r\n    if (right.className === 'BinaryExpression') {\r\n      let rightOp: BinaryExpression = <BinaryExpression>right;\r\n      if (!rightOp.isSealed() && rightOp.getPriority() === rightOp.getPriorityOp(op)) {\r\n        this.replaceLeft(rightOp, left, op);\r\n        return right;\r\n      }\r\n    }\r\n    return new BinaryExpression(left, right, op);\r\n  }\r\n\r\n  private static replaceLeft(target: BinaryExpression, newLeft: IExpression, op: BinaryOperator): void {\r\n    if (target.getLeftExp().className === 'BinaryExpression') {\r\n      let leftOp: BinaryExpression = <BinaryExpression>target.getLeftExp();\r\n      if (!leftOp.isSealed() && leftOp.getPriority() === leftOp.getPriorityOp(op)) {\r\n        this.replaceLeft(leftOp, newLeft, op);\r\n        return;\r\n      }\r\n    }\r\n    target.setLeftExp(new BinaryExpression(newLeft, target.getLeftExp(), op));\r\n  }\r\n\r\n  private static functionCall(end_bracket: string): IExpression {\r\n    let call: FunctionExpression = new FunctionExpression();\r\n    let funcToken: Token = this._tokenizer.consume();\r\n    if (!CustomFunctions.hasFunction(funcToken.getContents())) {\r\n      this._tokenizer.addError(funcToken, `未定义函数：${funcToken.getContents()}！`);\r\n      return ConstantExpression.Empty();\r\n    }\r\n    let fun: IFunction = CustomFunctions.createFunction(funcToken.getContents());\r\n    call.setFunction(fun);\r\n    this._tokenizer.consume(); // 消除（\r\n    while (!this._tokenizer.current().isOperator(end_bracket) && !this._tokenizer.current().isEnd()) {\r\n      if (call.paraCount() !== 0) {\r\n        this.expectTrigger(ExpressionType.OPERATOR, ',');\r\n      }\r\n      call.addPara(this.buildExpression());\r\n    }\r\n    this.expectTrigger(ExpressionType.OPERATOR, end_bracket);\r\n    call.evaluate();\r\n    if (call.paraCount() > fun.parameterNumber() && fun.parameterNumber() >= 0) {\r\n      this._tokenizer.addError(funcToken, `函数参数不一致，当前函数：${funcToken.getContents()}，规定参数个数Max：${fun.parameterNumber()}，当前参数个数：${call.paraCount()}，请检查！`);\r\n      return ConstantExpression.Empty();\r\n    }\r\n    return call;\r\n  }\r\n\r\n  private static expectTrigger(type: ExpressionType, trigger: string): void {\r\n    if (this._tokenizer.current().matches(type, trigger)) {\r\n      this._tokenizer.consume();\r\n    } else {\r\n      this._tokenizer.addError(this._tokenizer.current(), `期望获得：${trigger}，当前值为：${this._tokenizer.current().getTrigger()}，请检查！`);\r\n    }\r\n  }\r\n\r\n  public static getProjectCollector(): ParseError[] {\r\n    return this._tokenizer.getProblemCollector();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nVE_ExpressionParsing.init();","/////<reference path=\"dictionary.ts\" />\r\nimport { Dictionary } from \"../utility/dictionary\";\r\n\r\nexport interface IExpression {\r\n  expType: string;\r\n  className: string;\r\n  evaluate(): any;\r\n  clone(): IExpression;\r\n}\r\n\r\nexport class TrueExpression implements IExpression {\r\n  public get expType(): string {\r\n    return 'bool';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'TrueExpression';\r\n  }\r\n\r\n  public get value(): boolean {\r\n    return true;\r\n  }\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public evaluate(): any {\r\n    return true;\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let exp: TrueExpression = new TrueExpression();\r\n    return exp;\r\n  }\r\n\r\n  public toString(): string {\r\n    return 'true';\r\n  }\r\n}\r\n\r\nexport class ConstantExpression implements IExpression {\r\n\r\n  public get expType(): string {\r\n    return this._expType;\r\n  }\r\n  private _expType: string = 'string';\r\n\r\n  public get className(): string {\r\n    return 'ConstantExpression';\r\n  }\r\n\r\n  private _value: any;\r\n\r\n  constructor(value: any, type: string) {\r\n    this._value = value;\r\n    this._expType = type;\r\n  }\r\n\r\n  public evaluate(): any {\r\n    return this._value;\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let expClone: ConstantExpression = new ConstantExpression(this._value, this._expType);\r\n    return expClone;\r\n  }\r\n\r\n  public static Empty(): ConstantExpression {\r\n    return new ConstantExpression(null, 'string');\r\n  }\r\n\r\n  public isEmpty(): boolean {\r\n    if (this._expType === 'string' && this._value === null) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public toString(): string {\r\n    if (this._value !== null) {\r\n      return this._value.toString();\r\n    } else {\r\n      return 'null';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport enum BinaryOperator {\r\n  Add = '+', Subtract = '-', Multiply = '*', Divide = '/', Modulo = '%', Power = '^', LT = '<', LT_EQ = '<=', EQ = '=', GT_EQ = '>=', GT = '>', NEQ = '!=', And = '&&', Or = '||', Not = '!'\r\n}\r\n\r\nexport class BinaryExpression implements IExpression {\r\n\r\n  public get expType(): string {\r\n    return this._expType;\r\n  }\r\n  private _expType = '';\r\n\r\n  public get className(): string {\r\n    return 'BinaryExpression';\r\n  }\r\n\r\n  public isRight: boolean = true;\r\n\r\n  private _op: BinaryOperator = BinaryOperator.EQ;\r\n\r\n  private _left: IExpression;\r\n  private _right: IExpression;\r\n  private _isSealed: boolean = false;\r\n\r\n  private static _opDic: { [key: string]: BinaryOperator } = {};\r\n\r\n  private static _priority: Dictionary<BinaryOperator, number> = new Dictionary<BinaryOperator, number>();\r\n\r\n  // private static _priorityKey: BinaryOperator[] = [BinaryOperator.Not, BinaryOperator.Power, BinaryOperator.Multiply, BinaryOperator.Divide, BinaryOperator.Modulo, BinaryOperator.Add, BinaryOperator.Subtract, BinaryOperator.LT, BinaryOperator.LT_EQ, BinaryOperator.EQ, BinaryOperator.GT_EQ, BinaryOperator.GT, BinaryOperator.NEQ, BinaryOperator.And, BinaryOperator.Or];\r\n\r\n  // private static _priorityValue: number[] = [2, 3, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7];\r\n\r\n  public static init(): void {\r\n    this._opDic[\"+\"] = BinaryOperator.Add;\r\n    this._opDic[\"-\"] = BinaryOperator.Subtract;\r\n    this._opDic[\"*\"] = BinaryOperator.Multiply;\r\n    this._opDic[\"/\"] = BinaryOperator.Divide;\r\n    this._opDic[\"%\"] = BinaryOperator.Modulo;\r\n    this._opDic[\"**\"] = BinaryOperator.Power;\r\n    this._opDic[\"^\"] = BinaryOperator.Power;\r\n    this._opDic[\"<\"] = BinaryOperator.LT;\r\n    this._opDic[\"<=\"] = BinaryOperator.LT_EQ;\r\n    this._opDic[\"==\"] = BinaryOperator.EQ;\r\n    this._opDic[\">=\"] = BinaryOperator.GT_EQ;\r\n    this._opDic[\">\"] = BinaryOperator.GT;\r\n    this._opDic[\"!=\"] = BinaryOperator.NEQ;\r\n    this._opDic[\"&&\"] = BinaryOperator.And;\r\n    this._opDic[\"||\"] = BinaryOperator.Or;\r\n    this._opDic[\"!\"] = BinaryOperator.Not;\r\n    this._opDic[\"！\"] = BinaryOperator.Not;\r\n\r\n    this._priority.Add(BinaryOperator.Not, 2);\r\n    this._priority.Add(BinaryOperator.Power, 3);\r\n    this._priority.Add(BinaryOperator.Multiply, 4); this._priority.Add(BinaryOperator.Divide, 4); this._priority.Add(BinaryOperator.Modulo, 4);\r\n    this._priority.Add(BinaryOperator.Add, 5); this._priority.Add(BinaryOperator.Subtract, 5);\r\n    this._priority.Add(BinaryOperator.LT, 6); this._priority.Add(BinaryOperator.LT_EQ, 6); this._priority.Add(BinaryOperator.EQ, 6); this._priority.Add(BinaryOperator.GT_EQ, 6); this._priority.Add(BinaryOperator.GT, 6); this._priority.Add(BinaryOperator.NEQ, 6);\r\n    this._priority.Add(BinaryOperator.And, 7); this._priority.Add(BinaryOperator.Or, 7);\r\n  }\r\n\r\n  constructor(left_exp: IExpression, right_exp: IExpression, op: BinaryOperator) {\r\n    this._left = left_exp;\r\n    this._right = right_exp;\r\n    this._op = op;\r\n    // console.log(this._left);\r\n    // console.log(this._right);\r\n    this._expType = this.resultAutoType(left_exp, right_exp, op);\r\n    if (this._expType === 'null') {\r\n      // TODO\r\n      this.isRight = false;\r\n      console.log(\"公式两边类型不匹配，左侧类型：\" + left_exp.expType + \"，右侧类型：\" + right_exp.expType + \"，计算类型：\" + op.toString());\r\n    }\r\n  }\r\n\r\n  private resultAutoType(left: IExpression, right: IExpression, op: BinaryOperator): string {\r\n    if (op === BinaryOperator.Add) {\r\n      if (left.expType === 'string' || right.expType === 'string') {\r\n        return 'string';\r\n      }\r\n      else if (left.expType === 'bool' || right.expType === 'bool') {\r\n        return 'null';\r\n      }\r\n      else if (left.expType === 'number' || right.expType === 'number') {\r\n        return 'number';\r\n      }\r\n      else if (left.expType === 'vector3' || right.expType === 'vector3') {\r\n        return 'vector3';\r\n      }\r\n      else if (left.expType === 'vector2' || right.expType === 'vector2') {\r\n        return 'vector2';\r\n      }\r\n      else {\r\n        return 'null';\r\n      }\r\n    } else if (op === BinaryOperator.Divide || op === BinaryOperator.Multiply || op === BinaryOperator.Modulo || op === BinaryOperator.Power || op === BinaryOperator.Subtract) {\r\n      if (left.expType === 'string' || right.expType === 'string' || left.expType === 'bool' || left.expType === 'bool') {\r\n        return 'null';\r\n      }\r\n      else if (left.expType === 'vector3' && right.expType === 'vector3' && op === BinaryOperator.Subtract) {\r\n        return 'vector3';\r\n      }\r\n      else if (left.expType === 'vector2' && right.expType === 'vector2' && op === BinaryOperator.Subtract) {\r\n        return 'vector2';\r\n      }\r\n      else if ((left.expType === 'number' && right.expType === 'vector3' && op === BinaryOperator.Multiply) || (left.expType === 'vector3' && right.expType === 'number' && op == BinaryOperator.Multiply)) {\r\n        return 'vector3';\r\n      }\r\n      else if ((left.expType === 'number' && right.expType === 'vector2' && op === BinaryOperator.Multiply) || (left.expType === 'vector2' && right.expType === 'number' && op == BinaryOperator.Multiply)) {\r\n        return 'vector2';\r\n      }\r\n      else if (left.expType === 'vector3' && right.expType === 'number' && op === BinaryOperator.Divide) {\r\n        return 'vector3';\r\n      }\r\n      else if (left.expType === 'vector2' && right.expType === 'number' && op === BinaryOperator.Divide) {\r\n        return 'vector2';\r\n      }\r\n      else if (left.expType === 'number' || right.expType === 'number') {\r\n        return 'number';\r\n      }\r\n      else {\r\n        return 'null';\r\n      }\r\n    } else if (op === BinaryOperator.LT || op === BinaryOperator.LT_EQ || op === BinaryOperator.GT_EQ || op === BinaryOperator.GT) {\r\n      if (left.expType === 'string' || right.expType === 'string' || left.expType === 'bool' || right.expType === 'bool') {\r\n        return 'null';\r\n      } else {\r\n        return 'bool';\r\n      }\r\n    } else if (op === BinaryOperator.NEQ || op === BinaryOperator.EQ) {\r\n      if (right.expType !== left.expType) {\r\n        return 'null';\r\n      } else {\r\n        return 'bool';\r\n      }\r\n    } else if (op === BinaryOperator.Not) {\r\n      if (right.expType !== 'bool') {\r\n        return 'null';\r\n      } else {\r\n        return 'bool';\r\n      }\r\n    } else {\r\n      return 'string';\r\n    }\r\n  }\r\n\r\n  public setLeftExp(left_exp: IExpression): void {\r\n    this._left = left_exp;\r\n  }\r\n\r\n  public setRightExp(right_exp: IExpression): void {\r\n    this._right = right_exp;\r\n  }\r\n\r\n  public getOp(): BinaryOperator {\r\n    return this._op;\r\n  }\r\n\r\n  public getLeftExp(): IExpression {\r\n    return this._left;\r\n  }\r\n\r\n  public getRightExp(): IExpression {\r\n    return this._right;\r\n  }\r\n\r\n  public isSealed(): boolean {\r\n    return this._isSealed;\r\n  }\r\n\r\n  public setSeal(): void {\r\n    this._isSealed = true;\r\n  }\r\n\r\n  public toString(): string {\r\n    return \"(\" + this._left.toString() + \" \" + this._op.toString() + \" \" + this._right.toString() + \")\";\r\n    // return this._left.toString() + this._op.toString() + this._right.toString();\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let expClone: BinaryExpression = new BinaryExpression(this._left.clone(), this._right.clone(), this._op);\r\n    return expClone;\r\n  }\r\n\r\n  public evaluate(): any {\r\n    if (this._expType === 'null') {\r\n      return null;\r\n    }\r\n    if (this._left.className === 'FunctionExpression') {\r\n      this._left.evaluate();\r\n    }\r\n    if (this._right.className === 'FunctionExpression') {\r\n      this._right.evaluate();\r\n    }\r\n    this._expType = this.resultAutoType(this._left, this._right, this._op);\r\n    let leftValue: any = this._left.evaluate();\r\n    let rightValue: any = this._right.evaluate();\r\n    if (leftValue === null || rightValue === null) {\r\n      return null;\r\n    }\r\n    if (this._op === BinaryOperator.Add) {\r\n      if (this._expType === 'string') {\r\n        return leftValue.toString() + rightValue.toString();\r\n      } else if (this._expType === 'number') {\r\n        return leftValue + rightValue;\r\n      } else if (this._expType === 'vector3') {\r\n        return (<BABYLON.Vector3>leftValue).add((<BABYLON.Vector3>rightValue));\r\n      } else if (this._expType === 'vector2') {\r\n        return (<BABYLON.Vector2>leftValue).add((<BABYLON.Vector2>rightValue));\r\n      } else {\r\n        return null;\r\n      }\r\n    } else if (this._op === BinaryOperator.Subtract) {\r\n      if (this._expType === 'number') {\r\n        return leftValue - rightValue;\r\n      } else if (this._expType === 'vector3') {\r\n        return (<BABYLON.Vector3>leftValue).subtract((<BABYLON.Vector3>rightValue));\r\n      } else if (this._expType === 'vector2') {\r\n        return (<BABYLON.Vector2>leftValue).subtract((<BABYLON.Vector2>rightValue));\r\n      } else {\r\n        return null;\r\n      }\r\n    } else if (this._op === BinaryOperator.Multiply) {\r\n      if (this._expType === 'number') {\r\n        return leftValue * rightValue;\r\n      } else if (this._expType === 'vector3') {\r\n        if (typeof (leftValue) === 'number') {\r\n          return (<BABYLON.Vector3>rightValue).multiplyByFloats(leftValue, leftValue, leftValue);\r\n        } else if (typeof (rightValue) === 'number') {\r\n          return (<BABYLON.Vector3>leftValue).multiplyByFloats(rightValue, rightValue, rightValue);\r\n        } else {\r\n          return null;\r\n        }\r\n      } else if (this._expType === 'vector2') {\r\n        if (typeof (leftValue) === 'number') {\r\n          return (<BABYLON.Vector2>rightValue).multiplyByFloats(leftValue, leftValue);\r\n        } else if (typeof (rightValue) === 'number') {\r\n          return (<BABYLON.Vector2>leftValue).multiplyByFloats(rightValue, rightValue);\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    } else if (this._op === BinaryOperator.Divide) {\r\n      if (this._expType === 'number') {\r\n        return leftValue / rightValue;\r\n      } else if (this._expType === 'vector3') {\r\n        if (typeof (rightValue) === 'number') {\r\n          return new BABYLON.Vector3((<BABYLON.Vector3>leftValue).x / rightValue, (<BABYLON.Vector3>leftValue).y / rightValue, (<BABYLON.Vector3>leftValue).z / rightValue);\r\n        } else {\r\n          return null;\r\n        }\r\n      } else if (this._expType === 'vector2') {\r\n        if (typeof (rightValue) === 'number') {\r\n          return new BABYLON.Vector2((<BABYLON.Vector2>leftValue).x / rightValue, (<BABYLON.Vector2>leftValue).y / rightValue);\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    } else if (this._op === BinaryOperator.Modulo) {\r\n      if (typeof (leftValue) === 'number' && typeof (rightValue) === 'number') {\r\n        return leftValue % rightValue;\r\n      } else {\r\n        return null;\r\n      }\r\n    } else if (this._op === BinaryOperator.Power) {\r\n      if (typeof (leftValue) === 'number' && typeof (rightValue) === 'number') {\r\n        return Math.pow(leftValue, rightValue);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else if (this._op === BinaryOperator.And) {\r\n      let l: boolean = this.getBoolean(leftValue);\r\n      let r: boolean = this.getBoolean(rightValue);\r\n      return l && r;\r\n    } else if (this._op === BinaryOperator.Or) {\r\n      let l: boolean = this.getBoolean(leftValue);\r\n      let r: boolean = this.getBoolean(rightValue);\r\n      return l || r;\r\n    } else if (this._op === BinaryOperator.LT) {\r\n      return leftValue < rightValue;\r\n    } else if (this._op === BinaryOperator.LT_EQ) {\r\n      return leftValue <= rightValue;\r\n    } else if (this._op === BinaryOperator.GT_EQ) {\r\n      return leftValue >= rightValue;\r\n    } else if (this._op === BinaryOperator.GT) {\r\n      return leftValue > rightValue;\r\n    } else if (this._op === BinaryOperator.EQ) {\r\n      return leftValue === rightValue;\r\n    } else if (this._op === BinaryOperator.NEQ) {\r\n      return leftValue !== rightValue;\r\n    } else if (this._op === BinaryOperator.Not) {\r\n      return !this.getBoolean(rightValue);\r\n    } else {\r\n      return !this.getBoolean(leftValue);\r\n    }\r\n  }\r\n\r\n  private getBoolean(value: any): boolean {\r\n    if (typeof (value) === 'number') {\r\n      if (value === 0) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else if (typeof (value) === 'string') {\r\n      if (value === '') {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else if (typeof (value) === 'boolean') {\r\n      return value;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getPriority(): number {\r\n    // let p: number = BinaryExpression._priorityKey.indexOf(this._op);\r\n    // if(p > -1) {\r\n    //   return BinaryExpression._priorityValue[p];\r\n    // } else {\r\n    //   return 100;\r\n    // }\r\n    let p: number | null = BinaryExpression._priority.GetValue(this._op);\r\n    if(p === null) {\r\n      return 100;\r\n    } else {\r\n      return p;\r\n    }\r\n  }\r\n\r\n  public getPriorityOp(op: BinaryOperator): number {\r\n    // let p: number = BinaryExpression._priorityKey.indexOf(op);\r\n    // if(p > -1) {\r\n    //   return BinaryExpression._priorityValue[p];\r\n    // } else {\r\n    //   return 100;\r\n    // }\r\n    let p: number | null = BinaryExpression._priority.GetValue(op);\r\n    if(p === null) {\r\n      return 100;\r\n    } else {\r\n      return p;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nBinaryExpression.init();","import { ParseError } from \"./positions\";\r\n\r\nexport abstract class ForwardQuery<T> {\r\n\r\n  protected itemBuffer: Array<T> = [];\r\n\r\n  protected endReached: boolean = false;\r\n\r\n  protected problemCollector: Array<ParseError> = [];\r\n\r\n  protected endOfInputIndicator: T | undefined = undefined;\r\n\r\n  public next(): T {\r\n    return this.nextOffset(1);\r\n  }\r\n\r\n  public nextOffset(offset: number): T {\r\n    while (this.itemBuffer.length <= offset && !this.endReached) {\r\n      let item: T | undefined = this.fetch();\r\n      if (item !== undefined) {\r\n        this.itemBuffer.push(item);\r\n      } else {\r\n        this.endReached = true;\r\n      }\r\n    }\r\n    if (offset >= this.itemBuffer.length) {\r\n      if (this.endOfInputIndicator === undefined) {\r\n        this.endOfInputIndicator = this.endOfInput();\r\n      }\r\n      return this.endOfInputIndicator;\r\n    } else {\r\n      return this.itemBuffer[offset];\r\n    }\r\n  }\r\n\r\n  public current(): T {\r\n    return this.nextOffset(0);\r\n  }\r\n\r\n  protected abstract endOfInput(): T;\r\n\r\n  protected abstract fetch(): T | undefined;\r\n\r\n  public consume(): T {\r\n    let result: T = this.current();\r\n    this.consumeNext(1);\r\n    return result;\r\n  }\r\n\r\n  public consumeNext(numberOfItems: number): void {\r\n    if (numberOfItems < 0) {\r\n      return;\r\n    }\r\n    while (numberOfItems-- > 0) {\r\n      if (this.itemBuffer.length !== 0) {\r\n        this.itemBuffer.shift();\r\n      } else {\r\n        if (this.endReached) {\r\n          return;\r\n        } else {\r\n          let item: T | undefined = this.fetch();\r\n          if (item === undefined) {\r\n            this.endReached = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public getProblemCollector(): Array<ParseError> {\r\n    return this.problemCollector;\r\n  }\r\n\r\n  public setProblemCollector(problemCollector: Array<ParseError>): void {\r\n    this.problemCollector = problemCollector;\r\n  }\r\n\r\n\r\n}","import { IExpression } from \"./expressions\";\r\nimport { IFunction } from \"./functions\";\r\n\r\nexport class FunctionExpression implements IExpression {\r\n\r\n  public get expType(): string {\r\n    return this._function.expType;\r\n  }\r\n\r\n  public get className(): string {\r\n    return this._function.className;\r\n  }\r\n\r\n  private _function!: IFunction;\r\n  private _paras: IExpression[] = [];\r\n\r\n  public setFunction(func: IFunction): void {\r\n    this._function = func;\r\n  }\r\n\r\n  public addPara(exp: IExpression): void {\r\n    this._paras.push(exp);\r\n  }\r\n\r\n  public paraCount(): number {\r\n    return this._paras.length;\r\n  }\r\n\r\n  public evaluate(): any {\r\n    let r: any = null;\r\n    try {\r\n      r = this._function.evaluate(this._paras);\r\n    } catch (e) {\r\n      console.log('自定义函数编译错误，错误信息：' + e);\r\n      return null;\r\n    }\r\n    return r;\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let expClone: FunctionExpression = new FunctionExpression();\r\n    expClone._function = this._function;\r\n    for (let i: number = 0; i < this._paras.length; i++) {\r\n      expClone._paras.push(this._paras[i].clone());\r\n    }\r\n    return expClone;\r\n  }\r\n\r\n  public toString(): string {\r\n    let printStr: string = this._function.className + '(';\r\n    for(let i: number = 0; i < this._paras.length; i++) {\r\n      if(i > 0) {\r\n        printStr += ',' + this._paras[i].toString();\r\n      } else {\r\n        printStr += this._paras[i].toString();\r\n      }\r\n    }\r\n    return printStr + ')';\r\n  }\r\n\r\n}","import { IExpression } from \"./expressions\";\r\nimport { ShowError } from \"../html\";\r\n\r\nexport interface IFunction {\r\n  expType: string;\r\n  className: string;\r\n  parameterNumber(): number;\r\n  evaluate(args: Array<IExpression>): any;\r\n}\r\n\r\nexport class Pow implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'pow';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 2;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.pow(args[0].evaluate(), args[1].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Pow函数参数错误，参数1类型：${args[0].expType}，参数1值：${args[0].evaluate()}，参数2类型：${args[1].expType}，参数2值：${args[1].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Ln implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'ln';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.log(args[0].evaluate());\r\n    if (value === NaN || value === Infinity) {\r\n      ShowError.showError(`表达式编译错误：Ln函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Lg implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'lg';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.log10(args[0].evaluate());\r\n    if (value === NaN || value === Infinity) {\r\n      ShowError.showError(`表达式编译错误：Lg函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Sqrt implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'sqrt';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.sqrt(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Sqrt函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Abs implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'abs';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.abs(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Abs函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Random implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'random';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 2;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let start: number = args[0].evaluate();\r\n    let distance: number = args[1].evaluate() - args[0].evaluate();\r\n    let value: number = Math.random() * distance + start;\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Random函数参数错误，参数1类型：${args[0].expType}，参数1值：${args[0].evaluate()}，参数2类型：${args[1].expType}，参数2值：${args[1].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Round implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'round';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.round(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Round函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Sin implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'sin';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.sin(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Sin函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ASin implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'asin';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.asin(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：ASin函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Cos implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'cos';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.cos(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Cos函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ACos implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'acos';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.acos(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：ACos函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class Tan implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'tan';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.tan(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：Tan函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ATan implements IFunction {\r\n\r\n  public get expType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get className(): string {\r\n    return 'atan';\r\n  }\r\n\r\n  public parameterNumber(): number {\r\n    return 1;\r\n  }\r\n\r\n  public evaluate(args: IExpression[]): any {\r\n    let value: number = Math.atan(args[0].evaluate());\r\n    if (value === NaN) {\r\n      ShowError.showError(`表达式编译错误：ATan函数参数错误，参数类型：${args[0].expType}，参数值：${args[0].evaluate()}，请检查！`);\r\n      return undefined;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class CustomFunctions {\r\n  private static _functions: {[key:string]: IFunction} = {};\r\n\r\n  public static hasFunction(func_name: string): boolean {\r\n    func_name = func_name.toLowerCase();\r\n    if(this._functions[func_name]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static addFunction(func: IFunction): void {\r\n    let funcName: string = func.className.toLowerCase();\r\n    if(this._functions[funcName]) {\r\n      ShowError.showError(`自定义函数初始化错误，函数ID重复，当前函数ID：${funcName}，请为当前自定义函数重新分配ID！`);\r\n    } else {\r\n      this._functions[funcName] = func;\r\n    }\r\n  }\r\n\r\n  public static createFunction(func_name: string): IFunction {\r\n    func_name = func_name.toLowerCase();\r\n    return Object.create(this._functions[func_name]);\r\n  }\r\n\r\n  public static remove(func_name: string): void {\r\n    func_name = func_name.toLowerCase();\r\n    delete this._functions[func_name];\r\n  }\r\n}\r\n\r\n\r\nCustomFunctions.addFunction(new Pow());\r\nCustomFunctions.addFunction(new Ln());\r\nCustomFunctions.addFunction(new Lg());\r\nCustomFunctions.addFunction(new Sqrt());\r\nCustomFunctions.addFunction(new Abs());\r\nCustomFunctions.addFunction(new Random());\r\nCustomFunctions.addFunction(new Round());\r\nCustomFunctions.addFunction(new Sin());\r\nCustomFunctions.addFunction(new ASin());\r\nCustomFunctions.addFunction(new Cos());\r\nCustomFunctions.addFunction(new ACos());\r\nCustomFunctions.addFunction(new Tan());\r\nCustomFunctions.addFunction(new ATan());\r\n\r\n","export * from './expressionEnum';\r\nexport * from './expressions';\r\nexport * from './functions';\r\nexport * from './positions';\r\nexport * from './expChar';\r\nexport * from './token';\r\nexport * from './forwardQuery';\r\nexport * from './tokenizer';\r\nexport * from './tokenReader';\r\nexport * from './variable';\r\nexport * from './variableExpression';\r\nexport * from './scope';\r\nexport * from './functionExpression';\r\nexport * from './expressionParsing';\r\nexport * from './expManager';\r\nexport * from './veryExpressions';","export interface IPosition {\r\n  getLine(): number;\r\n  getPos(): number;\r\n}\r\n\r\n\r\nexport class NameLocation implements IPosition {\r\n\r\n  private _value: string = '';\r\n  private _line: number = 0;\r\n  private _pos: number = 0;\r\n\r\n\r\n  constructor(value: string) {\r\n    this._value = value;\r\n    this._line = 1;\r\n    this._pos = 1;\r\n  }\r\n\r\n\r\n  public getValue(): string {\r\n    return this._value;\r\n  }\r\n\r\n  public getLine(): number {\r\n    return this._line;\r\n  }  \r\n  \r\n  \r\n  public getPos(): number {\r\n    return this._pos;\r\n  }\r\n}\r\n\r\nexport enum SeverityExp{\r\n  Warning,\r\n  Error\r\n}\r\n\r\nexport class ParseError{\r\n\r\n  private _pos: IPosition;\r\n  private _message: string;\r\n  private _severity: SeverityExp;\r\n\r\n  constructor(pos: IPosition, msg: string, severity: SeverityExp) {\r\n    this._pos = pos;\r\n    this._message = msg;\r\n    this._severity = severity;\r\n  }\r\n\r\n  public static Warning(pos: IPosition, msg: string): ParseError {\r\n    let message: string = msg;\r\n    if(pos.getLine() > 0) {\r\n      message = `警告>>>行号：${pos.getLine()}，字符序号：${pos.getPos()}，警告信息：${msg}`;\r\n    }\r\n    return new ParseError(pos, message, SeverityExp.Warning);\r\n  }\r\n\r\n  public static Error(pos: IPosition, msg: string): ParseError {\r\n    let message: string = msg;\r\n    if(pos.getLine() > 0) {\r\n      message = `错误>>>行号：${pos.getLine()}，字符序号：${pos.getPos()}，警告信息：${msg}`;\r\n    }\r\n    return new ParseError(pos, message, SeverityExp.Error);\r\n  }\r\n\r\n  public getPosition(): IPosition {\r\n    return this._pos;\r\n  }\r\n\r\n  public getMessage(): string {\r\n    return this._message;\r\n  }\r\n\r\n  public getSeverity(): SeverityExp {\r\n    return this._severity;\r\n  }\r\n\r\n  public toString(): string {\r\n    return `类型：${this._severity.toString()}，信息：${this._message}`;\r\n  }\r\n\r\n}","import { Variable } from \"./variable\";\r\n\r\nexport class Scope {\r\n\r\n  private _parent: Scope | undefined = undefined;\r\n\r\n  private _context: { [key: string]: Variable } = {};\r\n\r\n  private static _root: Scope;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public static Create(): Scope {\r\n    let result: Scope = new Scope();\r\n    result._parent = Scope.GetRootScope();\r\n    return result;\r\n  }\r\n\r\n  public static GetRootScope(): Scope {\r\n    if (Scope._root === undefined) {\r\n      Scope._root = new Scope();\r\n      Scope._root.setVariable(\"PI\", 'number', Math.PI).makeConstant(Math.PI);\r\n      Scope._root.setVariable(\"EULER\", 'number', Math.E).makeConstant(Math.E);\r\n    }\r\n    return Scope._root;\r\n  }\r\n\r\n  public static CreateWithParent(parent: Scope): Scope {\r\n    let result: Scope = Scope.Create();\r\n    result._parent = parent;\r\n    return result;\r\n  }\r\n\r\n  public find(name: string): Variable | null {\r\n    if (this._context[name]) {\r\n      return this._context[name];\r\n    }\r\n    if (this._parent !== undefined) {\r\n      return this._parent.find(name);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public setVariable(name: string, type: string, value: any): Variable {\r\n    let result: Variable | null = this.find(name);\r\n    if (result !== null) {\r\n      result.setType(type);\r\n      result.setValue(value);\r\n      return result;\r\n    }\r\n    return this.createVariable(name, type, value);\r\n  }\r\n\r\n  public createVariable(name: string, type: string, value: any): Variable {\r\n    if (this._context[name]) {\r\n      this._context[name].setType(type);\r\n      this._context[name].setValue(value);\r\n      return this._context[name];\r\n    }\r\n    let result: Variable = new Variable(name, type, value);\r\n    this._context[name] = result;\r\n    return result;\r\n  }\r\n\r\n\r\n  public setValue(name: string, value: any): void {\r\n    if (this._context[name]) {\r\n      this._context[name].setValue(value);\r\n    }\r\n  }\r\n\r\n  public isCreated(name: string): boolean {\r\n    if (this._context[name]) {\r\n      return true;\r\n    }\r\n    if (this._parent !== undefined) {\r\n      if (this._parent.find(name) !== null) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public clear(): void {\r\n    this._context = {};\r\n  }\r\n\r\n}","import { IPosition } from \"./positions\";\r\nimport { ExpressionType } from \"./expressionEnum\";\r\nimport { ExpChar } from \"./expChar\";\r\n\r\nexport class Token implements IPosition {\r\n\r\n  public type: ExpressionType = ExpressionType.STRING;\r\n\r\n  private _source: string = '';\r\n  private _contents: string = '';\r\n  private _trigger: string = '';\r\n\r\n  private _line: number = 0;\r\n  private _pos: number = 0;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public static Create(type: ExpressionType, pos: IPosition): Token {\r\n    let result: Token = new Token();\r\n    result.type = type;\r\n    result._line = pos.getLine();\r\n    result._pos = pos.getPos();\r\n    return result;\r\n  }\r\n\r\n  public static CreateAndFill(type: ExpressionType, ch: ExpChar): Token {\r\n    let result: Token = new Token();\r\n    result.type = type;\r\n    result._line = ch.getLine();\r\n    result._pos = ch.getPos();\r\n    result._contents = ch.getValue();\r\n    result._trigger = ch.getValue();\r\n    result._source = ch.toString();\r\n    return result;\r\n  }\r\n\r\n  public addToTrigger(ch: ExpChar): Token {\r\n    this._trigger += ch.getValue();\r\n    this._source += ch.getValue();\r\n    return this;\r\n  }\r\n\r\n  public addToSource(ch: ExpChar): Token {\r\n    this._source += ch.getValue();\r\n    return this;\r\n  }\r\n\r\n  public addToContentChar(ch: ExpChar): Token {\r\n    this.addToContent(ch.getValue());\r\n    return this;\r\n  }\r\n\r\n  public addToContent(ch: string): Token {\r\n    this._contents += ch;\r\n    this._source += ch;\r\n    return this;\r\n  }\r\n\r\n  public getTrigger(): string {\r\n    return this._trigger;\r\n  }\r\n\r\n  public getTokenType(): ExpressionType {\r\n    return this.type;\r\n  }\r\n\r\n  public getContents(): string {\r\n    return this._contents;\r\n  }\r\n\r\n  public getSource(): string {\r\n    return this._source;\r\n  }\r\n\r\n  public getLine(): number {\r\n    return this._line;\r\n  }\r\n\r\n  public getPos(): number {\r\n    return this._pos;\r\n  }\r\n\r\n  public setTokenType(new_type: ExpressionType): void {\r\n    this.type = new_type;\r\n  }\r\n\r\n  public setTrigger(trigger: string): void {\r\n    this._trigger = trigger;\r\n  }\r\n\r\n  public setContent(content: string): void {\r\n    this._contents = content;\r\n  }\r\n\r\n  public setSource(source: string): void {\r\n    this._source = source;\r\n  }\r\n\r\n  public isEnd(): boolean {\r\n    return this.type === ExpressionType.EOI;\r\n  }\r\n\r\n  public is(type: ExpressionType): boolean {\r\n    return this.type === type;\r\n  }\r\n\r\n  public matches(type: ExpressionType, trigger: string): boolean {\r\n    if (!this.is(type)) {\r\n      return false;\r\n    }\r\n    if (trigger === '') {\r\n      return false;\r\n    }\r\n    return this.getTrigger() === trigger;\r\n  }\r\n\r\n  public isOperator(symbols: string): boolean {\r\n    if (symbols.length === 0) {\r\n      return this.is(ExpressionType.OPERATOR);\r\n    }\r\n    for (let i: number = 0; i < symbols.length; i++) {\r\n      if (this.matches(ExpressionType.OPERATOR, symbols[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isStartBracket(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === '(' || this._trigger === '（') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isEndBracket(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === ')' || this._trigger === '）') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isStartSquareBracket(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === '[' || this._trigger === '【') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isEndSquareBracket(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === ']' || this._trigger === '】') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isStartBrace(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === '{') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isEndBrace(): boolean {\r\n    if (this.is(ExpressionType.OPERATOR)) {\r\n      if (this._trigger === '}') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isKeyword(...keywords: string[]): boolean {\r\n    if (keywords.length === 0) {\r\n      return this.is(ExpressionType.KEYWORD);\r\n    }\r\n    for (let i: number = 0; i < keywords.length; i++) {\r\n      if (this.matches(ExpressionType.KEYWORD, keywords[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isIdentifier(...values: string[]): boolean {\r\n    if (values.length === 0) {\r\n      return this.is(ExpressionType.ID);\r\n    }\r\n    for (let i: number = 0; i < values.length; i++) {\r\n      if (this.matches(ExpressionType.ID, values[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isSpecialIdentifier(...triggers: string[]): boolean {\r\n    if (triggers.length === 0) {\r\n      return this.is(ExpressionType.SPECIAL_ID);\r\n    }\r\n    for (let i: number = 0; i < triggers.length; i++) {\r\n      if (this.matches(ExpressionType.SPECIAL_ID, triggers[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isSpecialIdentifierWithContent(trigger: string, ...contents: string[]): boolean {\r\n    if (!this.matches(ExpressionType.SPECIAL_ID, trigger)) {\r\n      return false;\r\n    }\r\n    if (contents.length === 0) {\r\n      return true;\r\n    }\r\n    for (let i: number = 0; i < contents.length; i++) {\r\n      if (this.getContents() === contents[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public isNumber(): boolean {\r\n    return this.is(ExpressionType.NUMBER);\r\n  }\r\n\r\n  public isBool(): boolean {\r\n    return this.is(ExpressionType.BOOL);\r\n  }\r\n\r\n  public isString(): boolean {\r\n    return this.is(ExpressionType.STRING);\r\n  }\r\n\r\n  public isConstant(): boolean {\r\n    return this.isNumber() || this.isBool() || this.isString();\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.getTokenType().toString() + ': ' + this.getContents() + ' (' + this._line + ': ' + this._pos + '), Trigger: ' + this.getTrigger();\r\n  }\r\n\r\n\r\n\r\n\r\n}","import { ForwardQuery } from \"./forwardQuery\";\r\nimport { ExpChar } from \"./expChar\";\r\n\r\nexport class TokenReader extends ForwardQuery<ExpChar> {\r\n\r\n  private _inputExp: string = '';\r\n  private _line: number = 1;\r\n  private _pos: number = 0;\r\n  private _count: number = 0;\r\n  private _operator: number = 0;\r\n\r\n  constructor(input_exp: string) {\r\n    super();\r\n    if (input_exp === '') {\r\n\r\n    }\r\n    this._inputExp = input_exp;\r\n    this._count = input_exp.length;\r\n    this._operator = 0;\r\n  }\r\n\r\n  protected endOfInput(): ExpChar {\r\n    return new ExpChar('\\0', this._line, this._pos);\r\n  }\r\n\r\n\r\n  protected fetch(): ExpChar | undefined {\r\n    if (this._operator <= this._count - 1) {\r\n      let readChar: string = this._inputExp[this._operator];\r\n      this._operator++;\r\n      if (readChar === '\\n') {\r\n        this._line++;\r\n        this._pos = 0;\r\n      }\r\n      this._pos++;\r\n      return new ExpChar(readChar, this._line, this._pos);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public toString(): string {\r\n    if (this.itemBuffer.length === 0) {\r\n      return this._line + ':' + this._pos + ': Buffer empty';\r\n    }\r\n    if (this.itemBuffer.length < 2) {\r\n      return this._line + ':' + this._pos + ': ' + this.current().toString();\r\n    }\r\n    return this._line + ':' + this._pos + ': ' + this.current().toString() + ', ' + this.next().toString();\r\n  }\r\n\r\n}","import { ForwardQuery } from \"./forwardQuery\";\r\nimport { Token } from \"./token\";\r\nimport { TokenReader } from \"./tokenReader\";\r\nimport { ExpressionType } from \"./expressionEnum\";\r\nimport { ParseError, IPosition } from \"./positions\";\r\nimport { ExpChar } from \"./expChar\";\r\n\r\nexport class Tokenizer extends ForwardQuery<Token> {\r\n\r\n  private _inputExp: TokenReader;\r\n\r\n  private _decimalSeparator: string = '.';\r\n  private _lineComment: string = '//';\r\n  private _blockCommentStart: string = '/*';\r\n  private _blockCommentEnd: string = '*/';\r\n  private _brackets: string[] = ['(', ')', '（', '）', '[', ']', '{', '}', '【', '】'];\r\n  private _treatSinglePipeAsBracket: boolean = true;\r\n  private _specialIdStarters: string[] = [];\r\n  private _specialIdTerminators: string[] = [];\r\n  private _keywords: { [key: string]: string } = {};\r\n  private _keywordsCaseSensitive: boolean = false;\r\n  private _stringDelimiters: { [key: string]: string } = {};\r\n  private _boolConstant: string[] = [];\r\n\r\n  constructor(input_exp: string) {\r\n    super();\r\n    this._inputExp = new TokenReader(input_exp);\r\n    this._stringDelimiters = {};\r\n    this._stringDelimiters['\\\"'] = '\\\\';\r\n    this._stringDelimiters['\\''] = '\\0';\r\n    this._boolConstant = [];\r\n    this._boolConstant.push('false');\r\n    this._boolConstant.push('true');\r\n    this._keywords = {};\r\n    this._keywords['this'] = 'this';\r\n    this._keywords['null'] = 'null';\r\n    this._keywords['none'] = 'none';\r\n    this._keywords['undefined'] = 'undefined';\r\n  }\r\n\r\n  public endOfInput(): Token {\r\n    return Token.CreateAndFill(ExpressionType.EOI, this._inputExp.current());\r\n  }\r\n\r\n  public fetch(): Token | undefined {\r\n    // 获取并且消除空格\r\n    while (this._inputExp.current().isWhiteSpace()) {\r\n      this._inputExp.consume();\r\n    }\r\n\r\n    // 为行尾则返回空\r\n    if (this._inputExp.current().isEndOfInput()) {\r\n      return undefined;\r\n    }\r\n\r\n    // 行注释处理\r\n    if (this.isAtStartOfLineComment(true)) {\r\n      this.skipToEndOfLine();\r\n      return this.fetch();\r\n    }\r\n\r\n    // 注释块处理\r\n    if (this.isAtStartOfBlockComment(true)) {\r\n      this.skipBlockComment();\r\n      return this.fetch();\r\n    }\r\n\r\n    // 是否以数字起始，获取常量\r\n    if (this.isAtStartOfNumber()) {\r\n      return this.fetchNumber();\r\n    }\r\n\r\n    // 是否为字母开头，获取变量和函数\r\n    if (this.isAtStartOfIdentifier()) {\r\n      return this.fetchId();\r\n    }\r\n\r\n    // 字符串常量识别\r\n    if (this._stringDelimiters[this._inputExp.current().getValue()]) {\r\n      return this.fetchString();\r\n    }\r\n\r\n    //括号处理\r\n    if (this.isAtBracket(false)) {\r\n      return Token.CreateAndFill(ExpressionType.OPERATOR, this._inputExp.consume());\r\n    }\r\n\r\n    // 检测是否在特殊字符的开头，一些特殊的ID起始标志位，像“$Test”中的“$”\r\n    if (this.isAtStartOfSpecialId()) {\r\n      return this.fetchSpecialId();\r\n    }\r\n\r\n    // 运算符处理\r\n    if (this.isOperator(this._inputExp.current())) {\r\n      return this.fetchOperator();\r\n    }\r\n\r\n    //当前输入有问题，一般不应该运行到这一步\r\n    this.problemCollector.push(ParseError.Error(this._inputExp.current(), \"无效的输入字符: \" + this._inputExp.current().getValue()));\r\n\r\n    this._inputExp.consume();\r\n    return this.fetch();\r\n  }\r\n\r\n  private fetchNumber(): Token {\r\n    let result: Token = Token.Create(ExpressionType.NUMBER, this._inputExp.current());\r\n    result.addToContentChar(this._inputExp.consume());\r\n    let hasDecimal: boolean = false;\r\n    while (this._inputExp.current().isDigit() || this._inputExp.current().is(this._decimalSeparator)) {\r\n      if (this._inputExp.current().is(this._decimalSeparator)) {\r\n        if (hasDecimal) {\r\n          this.problemCollector.push(ParseError.Error(this._inputExp.current(), \"公式中有多个小数点！\"));\r\n        }\r\n        hasDecimal = true;\r\n        result.addToContentChar(this._inputExp.consume());\r\n      } else {\r\n        result.addToContentChar(this._inputExp.consume());\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private fetchId(): Token {\r\n    let result: Token = Token.Create(ExpressionType.ID, this._inputExp.current());\r\n    result.addToContentChar(this._inputExp.consume());\r\n    while (this.isIdentifierChar(this._inputExp.current())) {\r\n      result.addToContentChar(this._inputExp.consume());\r\n    }\r\n    //UnityEngine.Debug.LogWarning(result.GetContents());\r\n    if (!this._inputExp.current().isEndOfInput() && this._specialIdTerminators.indexOf(this._inputExp.current().getValue()) > -1) {\r\n      let specialId: Token = Token.Create(ExpressionType.SPECIAL_ID, result);\r\n      specialId.setTrigger(this._inputExp.current().getValue());\r\n      specialId.setContent(result.getContents());\r\n      specialId.setSource(result.getContents());\r\n      specialId.addToSource(this._inputExp.current());\r\n      this._inputExp.consume();\r\n      return this.handleKeywords(specialId);\r\n    }\r\n    return this.handleKeywords(result);\r\n  }\r\n\r\n  private fetchString(): Token {\r\n    //读进来的分词标志\r\n    let separator: string = this._inputExp.current().getValue();\r\n    //字典中对应的分词标志\r\n    //char escapeChar = _stringDelimiters[_inputExp.current().GetValue()];\r\n    let result: Token = Token.Create(ExpressionType.STRING, this._inputExp.current());\r\n    result.addToTrigger(this._inputExp.consume());\r\n    while (!this._inputExp.current().isNewLine() && !this._inputExp.current().is(separator) && !this._inputExp.current().isEndOfInput()) {\r\n      result.addToContentChar(this._inputExp.consume());\r\n    }\r\n    if (this._inputExp.current().is(separator)) {\r\n      result.addToSource(this._inputExp.consume());\r\n    }\r\n    else {\r\n      this.problemCollector.push(ParseError.Error(this._inputExp.current(), \"常量字符串没有结束分隔符！\"));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private isAtStartOfLineComment(consume: boolean): boolean {\r\n    if (this._lineComment !== '') {\r\n      return this.canConsumeThisString(this._lineComment, consume);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private canConsumeThisString(check_string: string, consume: boolean): boolean {\r\n    for (let i: number = 0; i < check_string.length; i++) {\r\n      //利用next向后对比，看是否为行注释符“//”\r\n      if (!(this._inputExp.nextOffset(i).is(check_string[i]))) {\r\n        return false;\r\n      }\r\n    }\r\n    if (consume) {\r\n      this._inputExp.consumeNext(check_string.length);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private skipToEndOfLine(): void {\r\n    while (!this._inputExp.current().isEndOfInput() && !this._inputExp.current().isNewLine()) {\r\n      this._inputExp.consume();\r\n    }\r\n  }\r\n\r\n  private isAtStartOfBlockComment(consume: boolean): boolean {\r\n    return this.canConsumeThisString(this._blockCommentStart, consume);\r\n  }\r\n\r\n  private skipBlockComment(): void {\r\n    while (!this._inputExp.current().isEndOfInput()) {\r\n      if (this.isAtEndOfBlockComment()) {\r\n        return;\r\n      }\r\n      this._inputExp.consume();\r\n    }\r\n    this.problemCollector.push(ParseError.Error(this._inputExp.current(), '块注释没有结束符！'));\r\n  }\r\n\r\n  private isAtEndOfBlockComment(): boolean {\r\n    return this.canConsumeThisString(this._blockCommentEnd, true);\r\n  }\r\n\r\n  private isAtStartOfNumber(): boolean {\r\n    if (this._inputExp.current().isDigit()) {\r\n      return true;\r\n    } else if (this._inputExp.current().is('.') && this._inputExp.next().isDigit()) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private isAtStartOfIdentifier(): boolean {\r\n    return this._inputExp.current().isLetter() || this._inputExp.current().is('_') || this._inputExp.current().is('#');\r\n  }\r\n\r\n  private isIdentifierChar(current: ExpChar): boolean {\r\n    return current.isDigit() || current.isLetter() || current.is('_') || current.is('.') || current.is('#') || current.is(':') || current.is('：');\r\n  }\r\n\r\n  private isAtBracket(in_symbol: boolean): boolean {\r\n    let r: boolean = true;\r\n    for (let i: number = 0; i < this._brackets.length; i++) {\r\n      if (!this._inputExp.current().is(this._brackets[i])) {\r\n        r = false;\r\n      }\r\n    }\r\n    if (r) {\r\n      return true;\r\n    }\r\n    if (!in_symbol && this._treatSinglePipeAsBracket && this._inputExp.current().is('|') && this._inputExp.next().is('|')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isAtStartOfSpecialId(): boolean {\r\n    return this._specialIdStarters.indexOf(this._inputExp.current().getValue()) > -1;\r\n  }\r\n\r\n  private fetchSpecialId(): Token {\r\n    let result: Token = Token.Create(ExpressionType.SPECIAL_ID, this._inputExp.current());\r\n    result.addToTrigger(this._inputExp.consume());\r\n    while (this.isIdentifierChar(this._inputExp.current())) {\r\n      result.addToContentChar(this._inputExp.consume());\r\n    }\r\n    return this.handleKeywords(result);\r\n  }\r\n\r\n  private handleKeywords(id_token: Token): Token {\r\n    let keyword: string = \"\";\r\n    if (this._keywordsCaseSensitive) {\r\n      if (this._keywords[id_token.getContents()]) {\r\n        keyword = this._keywords[id_token.getContents()];\r\n      }\r\n    } else {\r\n      if (this._keywords[id_token.getContents().toLowerCase()]) {\r\n        keyword = this._keywords[id_token.getContents().toLowerCase()];\r\n      }\r\n    }\r\n    if (keyword != \"\") { //关键字处理\r\n      let keywordToken: Token = Token.Create(ExpressionType.KEYWORD, id_token);\r\n      keywordToken.setTrigger(keyword);\r\n      keywordToken.setContent(id_token.getContents());\r\n      keywordToken.setSource(id_token.getSource());\r\n      return keywordToken;\r\n    } else if (!id_token.is(ExpressionType.SPECIAL_ID)) { //bool类型处理\r\n      keyword = id_token.getContents().toLowerCase();\r\n      if (this._boolConstant.indexOf(keyword) > -1) {\r\n        id_token.setTokenType(ExpressionType.BOOL);\r\n      }\r\n    }\r\n    return id_token;\r\n  }\r\n\r\n  private isOperator(ch: ExpChar): boolean {\r\n    if (ch.isEndOfInput() || ch.isDigit() || ch.isLetter() || ch.isWhiteSpace()) {\r\n      return false;\r\n    }\r\n\r\n    // let c: string = ch.getValue();\r\n    // if (char.IsControl(c)) {\r\n    // \treturn false;\r\n    // }\r\n\r\n    if (this.isAtBracket(true) || this.isAtStartOfBlockComment(false) || this.isAtStartOfLineComment(false) || this.isAtStartOfNumber() || this.isAtStartOfIdentifier() || this._stringDelimiters[ch.getValue()]) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private fetchOperator(): Token {\r\n    let result: Token = Token.Create(ExpressionType.OPERATOR, this._inputExp.current());\r\n    result.addToTrigger(this._inputExp.consume());\r\n    if (result.isOperator(\"*\") && this._inputExp.current().is('*')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"&\") && this._inputExp.current().is('&')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"|\") && this._inputExp.current().is('|')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"<\") && this._inputExp.current().is('=')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\">\") && this._inputExp.current().is('=')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"!\") && this._inputExp.current().is('=')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    else if (result.isOperator(\"=\") && this._inputExp.current().is('=')) {\r\n      result.addToTrigger(this._inputExp.consume());\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public addError(pos: IPosition, msg: string): void {\r\n    this.getProblemCollector().push(ParseError.Error(pos, msg));\r\n  }\r\n\r\n  public addWarning(pos: IPosition, msg: string): void {\r\n    this.getProblemCollector().push(ParseError.Warning(pos, msg));\r\n  }\r\n\r\n\r\n\r\n}","export class Variable {\r\n\r\n  public get expType(): string {\r\n    return this._expType;\r\n  }\r\n  private _expType: string = 'string';\r\n\r\n  private _value: any = null;\r\n\r\n  private _name: string = '';\r\n\r\n  private _constant: boolean = false;\r\n\r\n  constructor(name: string, type: string, value: any) {\r\n    this._name = name;\r\n    this._expType = type;\r\n    this._value = value;\r\n  }\r\n\r\n  public setType(type: string): void {\r\n    if(!this._constant) {\r\n      this._expType = type;\r\n    }\r\n  }\r\n\r\n  public setValue(value: any): void {\r\n    if(!this._constant) {\r\n      this._value = value;\r\n    }\r\n  }\r\n\r\n  public makeConstant(value: any): void {\r\n    this.setValue(value);\r\n    this._constant = true;\r\n  }\r\n\r\n  public getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public isConstant(): boolean {\r\n    return this._constant;\r\n  }\r\n\r\n  public toString(): string {\r\n    return `Type: ${this._expType} --- ${this._name}: ${this._value.toString()}`;\r\n  }\r\n\r\n}","import { IExpression } from \"./expressions\";\r\nimport { Variable } from \"./variable\";\r\n\r\nexport class VariableExpression implements IExpression {\r\n\r\n  public get expType(): string {\r\n    return this._value.expType;\r\n  }  \r\n\r\n  public get className(): string {\r\n    return 'VariableExpression';\r\n  }\r\n\r\n  private _value: Variable;\r\n  \r\n  constructor(value: Variable) {\r\n    this._value = value;\r\n  }\r\n  \r\n  public evaluate(): any {\r\n    return this._value.getValue();\r\n  }\r\n\r\n  public toString(): string {\r\n    return this._value.getName();\r\n  }\r\n\r\n  public clone(): IExpression {\r\n    let expClone: VariableExpression = new VariableExpression(this._value);\r\n    return expClone;\r\n  }\r\n  \r\n\r\n}","import { Scope } from \"./scope\";\r\n\r\nexport class VE_Expressions {\r\n\r\n  public static _scope: Scope = Scope.Create();\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconsole.log(VE_Expressions._scope);","import { Severity } from \"../enum\";\r\n\r\nexport class VE_Error {\r\n  private _pos: string = '';\r\n  private _message: string = '';\r\n  private _tableName: string = '';\r\n  private _severity: Severity = Severity.Error;\r\n\r\n  /**\r\n   * 实例化报错信息数据结构；\r\n   * @param pos 错误信息位置；\r\n   * @param message 错误信息内容；\r\n   * @param table_name 错误文件路径；\r\n   * @param severity 报警类型；\r\n   */\r\n  constructor(pos: string, message: string, table_name: string, severity: Severity) {\r\n    this._pos = pos;\r\n    this._message = message;\r\n    this._severity = severity;\r\n    this._tableName = table_name;\r\n  }\r\n\r\n  /**\r\n   * 实例化警告类型报错信息；\r\n   * @param pos 错误信息位置；\r\n   * @param msg 错误信息内容；\r\n   * @param table_name 错误文件路径；\r\n   */\r\n  public static warning(pos: string, msg: string, table_name: string): VE_Error {\r\n    return new VE_Error(pos, msg, table_name, Severity.Warning);\r\n  }\r\n\r\n  /**\r\n   * 实例化错误类型报错信息；\r\n   * @param pos 错误信息位置；\r\n   * @param msg 错误信息内容；\r\n   * @param table_name 表格名；\r\n   */\r\n  public static error(pos: string, msg: string, table_name: string): VE_Error {\r\n    return new VE_Error(pos, msg, table_name, Severity.Error);\r\n  }\r\n\r\n  /**\r\n   * 获取错误信息位置；\r\n   */\r\n  public getPos(): string {\r\n    return this._pos;\r\n  }\r\n\r\n  /**\r\n   * 获取错误信息；\r\n   */\r\n  public getMessage(): string {\r\n    return this._message;\r\n  }\r\n\r\n  /**\r\n   * 获取错误信息文件路径；\r\n   */\r\n  public getTableName(): string {\r\n    return this._tableName;\r\n  }\r\n\r\n  /**\r\n   * 获取错误信息类型；\r\n   */\r\n  public getSeverity(): Severity {\r\n    return this._severity;\r\n  }\r\n\r\n  public toString(): string {\r\n    return \"位置：\" + this._pos + \"，错误信息：\" + this._message + \"，表格名：\" + this._tableName;\r\n  }\r\n}\r\n\r\n\r\nexport class VE_ErrorManager {\r\n\r\n  private static _errorList: VE_Error[] = [];\r\n\r\n  /// <summary>\r\n  /// 当前错误个数；\r\n  /// </summary>\r\n  public static get count() {\r\n    return this._errorList.length;\r\n  }\r\n\r\n  /// <summary>\r\n  /// 添加报错信息；\r\n  /// </summary>\r\n  /// <param name=\"error\">具体报错信息数据结构；</param>\r\n  public static add(error: VE_Error): void {\r\n    this._errorList.push(error);\r\n  }\r\n\r\n  /// <summary>\r\n  /// 获取具体的报错信息；\r\n  /// </summary>\r\n  /// <param name=\"index\">报错信息索引；</param>\r\n  /// <returns>具体报错信息数据结构；</returns>\r\n  public static getError(index: number): VE_Error {\r\n    return this._errorList[index];\r\n  }\r\n\r\n  /// <summary>\r\n  /// TODO: 所有报错打印，打印完删除相关信息；\r\n  /// </summary>\r\n  /// <param name=\"prefix\">报错信息前缀；</param>\r\n  public static print(prefix?: string): void {\r\n    if (prefix) {\r\n      for (let i: number = 0; i < this._errorList.length; i++) {\r\n        if (this._errorList[i].getSeverity() === Severity.Error) {\r\n          console.log('错误：' + prefix + \" -> \" + this._errorList[i].toString());\r\n          this._errorList.splice(i, 1);\r\n          i--;\r\n        }\r\n        else if (this._errorList[i].getSeverity() === Severity.Warning) {\r\n          console.log('警告：' + prefix + \" -> \" + this._errorList[i].toString());\r\n          this._errorList.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i: number = 0; i < this._errorList.length; i++) {\r\n        if (this._errorList[i].getSeverity() === Severity.Error) {\r\n          console.log('错误：' + this._errorList[i].toString());\r\n          this._errorList.splice(i, 1);\r\n          i--;\r\n        }\r\n        else if (this._errorList[i].getSeverity() === Severity.Warning) {\r\n          console.log('警告：' + this._errorList[i].toString());\r\n          this._errorList.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /// <summary>\r\n  /// 所有报警打印，打印完删除相关信息；\r\n  /// </summary>\r\n  /// <param name=\"prefix\">报警信息前缀；</param>\r\n  public static printWarnning(prefix?: string): void {\r\n    if (prefix) {\r\n      for (let i: number = 0; i < this._errorList.length; i++) {\r\n        if (this._errorList[i].getSeverity() === Severity.Warning) {\r\n          console.log('警告：' + prefix + \" -> \" + this._errorList[i].toString());\r\n          this._errorList.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i: number = 0; i < this._errorList.length; i++) {\r\n        if (this._errorList[i].getSeverity() === Severity.Warning) {\r\n          console.log('警告：' + this._errorList[i].toString());\r\n          this._errorList.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /// <summary>\r\n  /// 所有错误打印，打印完删除相关信息；\r\n  /// </summary>\r\n  /// <param name=\"prefix\">报错信息前缀；</param>\r\n  public static printError(prefix: string): void {\r\n    if (prefix) {\r\n      for (let i: number = 0; i < this._errorList.length; i++) {\r\n        if (this._errorList[i].getSeverity() === Severity.Error) {\r\n          console.log('错误：' + prefix + \" -> \" + this._errorList[i].toString());\r\n          this._errorList.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i: number = 0; i < this._errorList.length; i++) {\r\n        if (this._errorList[i].getSeverity() === Severity.Error) {\r\n          console.log('错误：' + prefix + \" -> \" + this._errorList[i].toString());\r\n          this._errorList.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","export class GameGlobal {\r\n\r\n  \r\n  \r\n\r\n}","export * from './gameGlobal';\r\nexport * from './time';\r\nexport * from './errorManager';","import { VeryEngine } from \"../veryEngine\";\r\n\r\nexport class Time {\r\n  \r\n  public static get frameCount(): number {\r\n    return this._frame;\r\n  }\r\n  private static _frame: number = 0;\r\n\r\n\r\n  public static get deltaTime(): number {\r\n    // return 1.0 / GameGlobal.Engine.getFps();\r\n    return VeryEngine.Engine.getDeltaTime() / 1000;\r\n  }\r\n\r\n  public static _sum(): void {\r\n    this._frame++;\r\n  }\r\n}","export * from './showError';","export class ShowError {\r\n\r\n  public static errorContentPrefix: string = '<div class=\"alert alert-error\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>';\r\n  public static errorContentNow: string;\r\n  public static errorZone: HTMLElement;\r\n\r\n  public static initZone(): void {\r\n    if (!this.errorZone) {\r\n      this.errorZone = document.getElementById(\"errorZone\")!;\r\n    }\r\n  }\r\n  /**\r\n   * 报错信息显示；\r\n   * TODO: log、error、warn信息分颜色显示，支持滚动栏，不然报错信息多了以后无法查看；\r\n   * @param error_msg 报错或警告信息；\r\n   */\r\n  private static showMsg(prefix: string, error_msg: string): void {\r\n    this.initZone();\r\n    if (!this.errorContentNow) {\r\n      this.errorContentNow = this.errorContentPrefix;\r\n    }\r\n    this.errorContentNow += prefix + error_msg + \"<br/>\";\r\n    this.errorZone.style.display = \"block\";\r\n    this.errorZone.innerHTML = this.errorContentNow + '</div>';\r\n    // Close button error\r\n    let closeBtn = this.errorZone.querySelector(\".close\")!;\r\n    let that = this;\r\n    closeBtn.addEventListener(\"click\", function () {\r\n      that.errorZone.style.display = \"none\";\r\n    });\r\n  }\r\n\r\n  public static show(error_msg: string): void {\r\n    this.showMsg('打印信息>>>', error_msg);\r\n  }\r\n\r\n  public static showError(error_msg: string): void {\r\n    this.showMsg('错误信息>>>', error_msg);\r\n  }\r\n\r\n  public static showWarn(error_msg: string): void {\r\n    this.showMsg('警告信息>>>', error_msg);\r\n  }\r\n\r\n  public static clear(): void {\r\n    ShowError.initZone();\r\n    ShowError.errorContentNow = ShowError.errorContentPrefix;\r\n    ShowError.errorZone.innerHTML = ShowError.errorContentNow + '</div>';\r\n    // Close button error\r\n    let closeBtn = ShowError.errorZone.querySelector(\".close\")!;\r\n    let that = ShowError;\r\n    closeBtn.addEventListener(\"click\", function () {\r\n      that.errorZone.style.display = \"none\";\r\n    });\r\n  }\r\n\r\n  public static close(): void {\r\n    ShowError.initZone();\r\n    if(ShowError.errorZone.style.display === \"none\") {\r\n      ShowError.errorZone.style.display = \"block\";\r\n    } else {\r\n      ShowError.errorZone.style.display = \"none\";\r\n    }\r\n  }\r\n}","export * from './utility/index';\r\n\r\nexport * from './action/index';\r\nexport * from './dataSource/index';\r\nexport * from './enum/index';\r\nexport * from './expression/index';\r\nexport * from './global/index';\r\nexport * from './html/index';\r\nexport * from './manager/index';\r\nexport * from './object/index';\r\nexport * from './state/index';\r\nexport * from './template/index';\r\nexport * from './trigger/index';\r\nexport * from './loader/index';\r\n\r\nexport * from './variables/index';\r\nexport * from '../verytable/index';\r\n\r\nexport * from './library/action/index';\r\nexport * from './library/trigger/index';\r\n","export * from './translate';","import { VE_ActionBehaviour } from '../../index';\r\n\r\nexport class Action_Translate extends VE_ActionBehaviour {\r\n\r\n  public get ID(): string {\r\n    return '直线运动|Translate';\r\n  }  \r\n\r\n  private _refType: BABYLON.Space = BABYLON.Space.LOCAL;\r\n\r\n  \r\n  public active(): void {\r\n    \r\n  }\r\n\r\n\r\n  public onUpdate(): void {\r\n    \r\n  }\r\n\r\n\r\n\r\n  public destroy(): void {\r\n    // \r\n  }\r\n\r\n\r\n}\r\n\r\n","export * from './input';","import { VE_TriggerBehaviour } from '../../index';\r\nimport { VE_Triggers } from '../../trigger';\r\n\r\nexport class Trigger_MouseDown extends VE_TriggerBehaviour {\r\n  \r\n\r\n  public get ID(): string {\r\n    return '鼠标按下|Mouse_Down';\r\n  }\r\n\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  public paraParser(para_array: string[]): boolean {\r\n\r\n    let a: BABYLON.Nullable<BABYLON.Observer<BABYLON.PointerInfo>> = this.scene.onPointerObservable.add(  (pointInfo) => {\r\n\r\n    })\r\n\r\n    this.scene.onPointerObservable.remove(a);\r\n\r\n    return true;\r\n  }\r\n\r\n  public onUpdate(): void {\r\n    \r\n  }\r\n\r\n\r\n  public destroy(): void {\r\n    \r\n  }\r\n  \r\n\r\n}\r\n\r\n\r\n\r\nVE_Triggers.addTrigger(new Trigger_MouseDown());","import { VE_Templates, VE_Template } from \"../template\";\r\nimport { VE_Manager } from \"../manager\";\r\nimport { VE_Objects } from \"../object\";\r\nimport { VE_Variables, VeryVarManager, IVeryVar } from \"../variables\";\r\nimport { ErrorInfo } from \"../utility\";\r\nimport { VE_ErrorManager, VE_Error } from \"../global\";\r\n\r\nexport class CreateInstance {\r\n\r\n\r\n\r\n\r\n\r\n  public static createProject(project_name: string): boolean {\r\n    let templates: VE_Templates = VE_Manager.templates(project_name);\r\n    let objects: VE_Objects = VE_Manager.objects(project_name);\r\n    let globalVars: VE_Variables = VE_Manager.variables(project_name);\r\n\r\n    // 1. 全局变量——创建\r\n    // (1).先初始化普通变量和模板\r\n    for (let i: number = 0; i < globalVars.varData.count; i++) {\r\n      let varID: string = globalVars.varData.getVariableID(i);\r\n      let varPara: string[] = globalVars.varData.getVariableParas(varID);\r\n      // 判断，1.普通变量；2.公式；3.模板变量；\r\n      // 1.公式，等普通变量初始化完毕再处理\r\n      if (varPara[0] === \"公式\" || varPara[0].toLowerCase() === \"expression\") {\r\n        continue;\r\n      }\r\n      // 2.普通IVeryVar变量\r\n      else if (VeryVarManager.hasVarType(varPara[0])) {\r\n        let errorInfo: ErrorInfo = new ErrorInfo();\r\n        let newVar: Nullable<IVeryVar> = VeryVarManager.createVariable(varID, varPara[0], varPara[1], errorInfo);\r\n        // TODO: List或者Dictionary处理\r\n        if (newVar === null) {\r\n          VE_ErrorManager.add(VE_Error.error(globalVars.varData.getPos(varID), \"项目：\" + project_name + \"，全局变量：\" + varID + \"，\" + varPara[0] + \"，\" + varPara[1] + \"，全局变量创建失败，失败原因：\" + errorInfo.message + \"，请检查！\", ''));\r\n          return false;\r\n        } else {\r\n          globalVars.addVariable(varID, newVar);\r\n        }\r\n      }\r\n      // 3.模板变量\r\n      else if (templates.isCreatedTemplate(varPara[0])) {\r\n        globalVars.addTemplate(varID, templates.getTemplate(varPara[0]).clone('__global__', varID));\r\n      }\r\n      // 未知错误\r\n      else {\r\n        VE_ErrorManager.add(VE_Error.error(globalVars.varData.getPos(varID), \"项目：\" + project_name + \"，全局变量：\" + varID + \"，\" + varPara[0] + \"，\" + varPara[1] + \"，全局变量创建失败，当前变量不存在，请检查！\", ''));\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // (2).再初始化公式\r\n    for (let i: number = 0; i < globalVars.varData.count; i++) {\r\n      let varID: string = globalVars.varData.getVariableID(i);\r\n      let varPara: string[] = globalVars.varData.getVariableParas(varID);\r\n      // 判断，公式；\r\n      // 1.公式\r\n      if (varPara[0] === \"公式\" || varPara[0].toLowerCase() === \"expression\") {\r\n        // 公式之间以从前到后的解析顺序变异，若前面的公式引用了后面的公式，会直接报错\r\n        let errorInfo: ErrorInfo = new ErrorInfo();\r\n\r\n        // ExpressionTree globalExp = VE_Expressions.CreateGlobalExpression(varID, varPara[1], project_name, ref errorInfo);\r\n        // if (globalExp == null) {\r\n        //   VE_ErrorManager.Add(VE_Error.Error(\"\", \"项目：\" + project_name + \"，全局变量：\" + varID + \",\" + varPara[0] + \",\" + varPara[1] + \"，全局变量创建失败，公式创建错误：\\n\" + errorInfo, \"\"));\r\n        //   return false;\r\n        // }\r\n        // globalVars.AddExpression(varID, globalExp);\r\n      }\r\n      else {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  public static createInstance(project_name: string, object_id: string, var_id: string, template: VE_Template, object_name: string, error_info: ErrorInfo, destroy_on_create_new: boolean): VE_Template {\r\n\r\n\r\n    return template;\r\n  }\r\n\r\n\r\n}","export * from './loaderManager';\r\nexport * from './createInstance';","import { VeryTable } from '../index';\r\nimport { VE_Template, VE_Templates } from '../template';\r\nimport { VeryEngineObject, VE_Objects } from '../object';\r\nimport { VE_FsmData, VE_StateData, VE_StateTriggerData, VE_StateActionData } from '../dataSource';\r\nimport { VE_Manager } from '../manager';\r\nimport { VE_Variables, GameObject, VeryVarManager } from '../variables';\r\nimport { VE_StringFormat } from '../utility';\r\nimport { VE_ErrorManager, VE_Error } from '../global';\r\nimport { StateConst } from '../state';\r\nimport { CreateInstance } from './createInstance';\r\n\r\n\r\nexport enum AnalisysType { Global, Object, Template }\r\n\r\nexport class LoaderManager {\r\n\r\n  private _currentType: AnalisysType = AnalisysType.Global;\r\n\r\n  private _table!: VeryTable;\r\n\r\n  private _projectName: string = '';\r\n\r\n  private _lastFsmID: string = '';\r\n  private _activeTemplate: Nullable<VE_Template> = null;\r\n  private _activeObject: Nullable<VeryEngineObject> = null;\r\n  private _activeFsmData: Nullable<VE_FsmData> = null;\r\n  private _activeStateData: Nullable<VE_StateData> = null;\r\n\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public load(project_name: string, table: VeryTable): boolean {\r\n    this._projectName = project_name;\r\n    this._table = table;\r\n\r\n    //初始化项目存储结构\r\n    VE_Manager.createProject(project_name);\r\n\r\n    let templates: VE_Templates = VE_Manager.templates(project_name);\r\n    let objects: VE_Objects = VE_Manager.objects(project_name);\r\n    let globalVars: VE_Variables = VE_Manager.variables(project_name);\r\n\r\n    // console.log(table);\r\n    if (table) {\r\n      for (let i: number = 0; i < table.RowCount; i++) {\r\n        // console.log(table.getRow(i));\r\n        // （1）模板对象，创建\r\n        if (table.getData(i, 0).startsWith(\"模板_\")) {\r\n          this._activeFsmData = null;\r\n          this._activeStateData = null;\r\n          this._currentType = AnalisysType.Template;\r\n          let templateID = table.getData(i, 0).replace(' ', '').substring(3);\r\n          // TODO: 继承关系\r\n          if (templateID.indexOf(':') > -1 || templateID.indexOf('：') > -1) {\r\n\r\n          } else {\r\n            if (!VE_StringFormat.isIDLegal(templateID)) {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 0), \"模板对象名：\" + table.getData(i, 0) + \"，当前模板对象名不合法，包含非法字符，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n            if (!templates.isCreatedTemplate(templateID)) {\r\n              let template: VE_Template = new VE_Template(project_name, templateID);\r\n              templates.addTemplate(templateID, template);\r\n              this._activeTemplate = template;\r\n            } else {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 0), \"模板对象名：\" + table.getData(i, 0) + \"，当前模板已创建，请勿使用重复的模板对象名！\", table.ID))\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        // （2）一般对象\r\n        else if (table.getData(i, 0) !== '') {\r\n          this._activeFsmData = null;\r\n          this._activeStateData = null;\r\n          this._currentType = AnalisysType.Object;\r\n          let objectID: string = table.getData(i, 0);\r\n          let objName: string = '';\r\n          if (objectID.indexOf('=') > -1) {\r\n            let nameArray: string[] = objectID.split('=');\r\n            if (nameArray.length === 2) {\r\n              objectID = nameArray[0].trim();\r\n              objName = nameArray[1].trim();\r\n            } else {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 0), \"对象名：\" + table.getData(i, 0) + \"，当前对象名格式错误，应为“对象名”或者“对象名=场景物体名”的形式，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n          }\r\n          if (!VE_StringFormat.isIDLegal(objectID)) {\r\n            VE_ErrorManager.add(VE_Error.error(table.pos(i, 0), \"对象名：\" + table.getData(i, 0) + \"，当前对象名不合法，包含非法字符，请检查！\", table.ID))\r\n            return false;\r\n          }\r\n          // 创建实际GameObject\r\n          let activeGameObject: Nullable<GameObject> = null;\r\n          if (objName === '') {\r\n            activeGameObject = new GameObject(`__${objectID}_Empty`);\r\n          } else {\r\n            activeGameObject = GameObject.find(objName);\r\n            if (activeGameObject === null) {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 0), \"对象名：\" + objName + \"，当前对象在场景中不存在，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n          }\r\n          if (!objects.isCreated(objectID)) {\r\n            // 规范化数据存储结构，与模板对象通用\r\n            let tempObject: VeryEngineObject = new VeryEngineObject(project_name, objectID, activeGameObject);\r\n            objects.add(objectID, tempObject);\r\n            this._activeObject = tempObject;\r\n          } else {\r\n            VE_ErrorManager.add(VE_Error.error(table.pos(i, 0), \"对象名：\" + table.getData(i, 0) + \"，当前对象已创建，请勿使用重复的对象名！\", table.ID))\r\n            return false;\r\n          }\r\n        }\r\n        // （3）变量或者单独的状态\r\n        else if (table.getData(i, 5) !== \"\" && table.getData(i, 1) === \"\" && table.getData(i, 2) === \"\" && table.getData(i, 3) === \"\" && table.getData(i, 4) === \"\" && table.getData(i, 6) === \"\" && table.getData(i, 7) === \"\" && table.getData(i, 8) === \"\") {\r\n          let paraData: string = table.getData(i, 5);\r\n          // 全局变量\r\n          if (this._currentType === AnalisysType.Global) {\r\n            // 字符串加法公式咋办？双引号先不移除\r\n            let varArray: string[] = VE_StringFormat.paraSegment(paraData);\r\n            if (varArray.length === 2 || varArray.length === 3) {\r\n              let varID: string = varArray[0].trim();\r\n              if (!VE_StringFormat.isIDLegal(varID)) {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"全局变量：\" + table.getData(i, 5) + \"，当前变量名不合法，包含非法字符，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n              let paraArray: string[] = [varArray[1].trim()];\r\n              if (varArray.length === 2) {\r\n                paraArray[1] = '';\r\n              } else {\r\n                paraArray[1] = varArray[2].trim();\r\n              }\r\n              if (!globalVars.varData.isCreatedVariable(varID)) {\r\n                globalVars.varData.addVariable(varID, paraArray, table.pos(i, 5));\r\n              } else {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"全局变量：\" + table.getData(i, 5) + \"，当前全局变量名已创建，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n            } else {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"全局变量：\" + table.getData(i, 5) + \"，当前全局变量格式不正确，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n          }\r\n          // 状态赋值或者局部公式变量\r\n          else if (paraData.indexOf('=') > -1) {\r\n            let paraArray: string[] = paraData.split('=');\r\n            // 状态赋值\r\n            // 目前暂不考虑赋值公式中有等号的情况，赋值公式后面只能是常量或者已创建的变量\r\n            if (paraArray.length === 2 && paraArray[0].trim() === this._lastFsmID) {\r\n              if (this._activeFsmData === null) {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态赋值：\" + table.getData(i, 5) + \"，当前状态不属于任何对象和模板对象，请检查！\", table.ID))\r\n                return false;\r\n              } else {\r\n                let stateInfo: string[] = paraArray[1].trim().split(/,|，/);\r\n                let stateIndex: number = StateConst.STATE_INDEX;\r\n                let stateData: Nullable<VE_StateData> = null;\r\n                if (stateInfo.length === 2) {\r\n                  stateInfo[0] = stateInfo[0].trim();\r\n                  stateInfo[1] = stateInfo[1].trim();\r\n                  if (stateInfo[1].startsWith('#')) {\r\n                    stateIndex = parseInt(stateInfo[1].substring(1));\r\n                    if (stateIndex === NaN) {\r\n                      VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态赋值：\" + table.getData(i, 5) + \"，状态关联ID格式错误，状态关联标志ID写法：“状态ID=赋值，#整数ID”，当前整数转化错误！\", table.ID))\r\n                      return false;\r\n                    }\r\n                  } else {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态赋值：\" + table.getData(i, 5) + \"，状态关联ID格式错误，状态关联标志ID写法：“状态ID=赋值，#整数ID”，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                }\r\n                stateData = new VE_StateData(this._activeFsmData, stateInfo[0].trim(), false, stateIndex);\r\n                this._activeFsmData.addState(stateData);\r\n                this._activeStateData = stateData;\r\n              }\r\n            }\r\n            // 公式变量，局部变量\r\n            else {\r\n              let varArray: string[] = VE_StringFormat.paraSegment(paraData);\r\n              if (varArray.length === 3) {\r\n                let varID: string = varArray[0].trim();\r\n                if (!VE_StringFormat.isIDLegal(varID)) {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"变量：\" + table.getData(i, 5) + \"，当前变量名不合法，包含非法字符，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n                let para2Array: string[] = [varArray[1].trim(), varArray[2].trim()];\r\n                // 判断是模板变量，还是对象变量，注意：局部变量名与状态名也不能重合\r\n                if (this._currentType === AnalisysType.Object) {\r\n                  if (this._activeObject!.varData.isCreatedVariable(varID)) {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"对象名：\" + this._activeObject!.objectID + \"，局部变量：\" + table.getData(i, 5) + \"，当前局部变量名已创建，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                  // 状态重复判断，应该是判断未初始化的原始数据\r\n                  if (this._activeObject!.dataSource.isCreatedFsm(varID)) {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"对象名：\" + this._activeObject!.objectID + \"，局部变量：\" + table.getData(i, 5) + \"，局部变量名不能与状态名相同，当前状态已创建，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                  this._activeObject!.varData.addVariable(varID, para2Array, table.pos(i, 5));\r\n                }\r\n                else if (this._currentType === AnalisysType.Template) {\r\n                  if (this._activeTemplate!.varData.isCreatedVariable(varID)) {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"模板对象名：\" + this._activeTemplate!.templateID + \"，局部变量：\" + table.getData(i, 5) + \"，当前局部变量名已创建，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                  // 状态重复判断，应该是判断未初始化的原始数据\r\n                  if (this._activeTemplate!.dataSource.isCreatedFsm(varID)) {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"模板对象名：\" + table.getData(i, 5) + \"，当前局部变量所属未知，格式错误，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                  this._activeTemplate!.varData.addVariable(varID, para2Array, table.pos(i, 5));\r\n                }\r\n                else {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"局部变量：\" + table.getData(i, 5) + \"，当前局部变量所属未知，格式错误，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n              } else {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"局部公式变量：\" + table.getData(i, 5) + \"，当前局部公式变量格式不正确，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n          // 局部变量，一般变量，模板变量或者公式变量\r\n          else {\r\n            let varArray: string[] = VE_StringFormat.paraSegment(paraData);\r\n            if (varArray.length === 2 || varArray.length === 3) {\r\n              let varID: string = varArray[0].trim();\r\n              if (!VE_StringFormat.isIDLegal(varID)) {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"变量：\" + table.getData(i, 5) + \"，当前变量名不合法，包含非法字符，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n              let paraArray: string[] = [varArray[1].trim()];\r\n              if (varArray.length === 2) {\r\n                paraArray[1] = '';\r\n              } else {\r\n                paraArray[1] = varArray[2].trim();\r\n              }\r\n              // 判断是模板变量，还是对象变量，注意：局部变量名与状态名也不能重合\r\n              if (this._currentType === AnalisysType.Object) {\r\n                if (this._activeObject!.varData.isCreatedVariable(varID)) {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"对象名：\" + this._activeObject!.objectID + \"，局部变量：\" + table.getData(i, 5) + \"，当前局部变量名已创建，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n                // 状态重复判断，应该是判断未初始化的原始数据\r\n                if (this._activeObject!.dataSource.isCreatedFsm(varID)) {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"对象名：\" + this._activeObject!.objectID + \"，局部变量：\" + table.getData(i, 5) + \"，局部变量名不能与状态名相同，当前状态已创建，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n                this._activeObject!.varData.addVariable(varID, paraArray, table.pos(i, 5));\r\n              }\r\n              else if (this._currentType === AnalisysType.Template) {\r\n                if (this._activeTemplate!.varData.isCreatedVariable(varID)) {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"模板对象名：\" + this._activeTemplate!.templateID + \"，局部变量：\" + table.getData(i, 5) + \"，当前局部变量名已创建，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n                // 状态重复判断，应该是判断未初始化的原始数据\r\n                if (this._activeTemplate!.dataSource.isCreatedFsm(varID)) {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"模板对象名：\" + this._activeTemplate!.templateID + \"，局部变量：\" + table.getData(i, 5) + \"，局部变量名不能与状态名相同，当前状态已创建，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n                this._activeTemplate!.varData.addVariable(varID, paraArray, table.pos(i, 5));\r\n              }\r\n              else {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"局部变量：\" + table.getData(i, 5) + \"，当前局部变量所属未知，格式错误，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n            } else {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"局部变量：\" + table.getData(i, 5) + \"，当前局部变量格式不正确，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        // （4）状态 + 触发 + 条件 + 响应 + 关联状态，多种复合情况\r\n        else {\r\n          // 状态解析\r\n          if (table.getData(i, 5) !== '') {\r\n            let paraData: string = table.getData(i, 5);\r\n            // 状态赋值\r\n            if (paraData.indexOf('=') > -1) {\r\n              let stateArray: string[] = paraData.split('=');\r\n              let fsmID: string = stateArray[0].trim();\r\n              // 目前暂不考虑赋值公式中有等号的情况，赋值公式后面只能是常量或者已创建的变量\r\n              if (stateArray.length === 2 && fsmID === this._lastFsmID) {\r\n                if (this._activeFsmData === null) {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态赋值：\" + table.getData(i, 5) + \"，当前状态不属于任何对象和模板对象，请检查！\", table.ID))\r\n                  return false;\r\n                } else {\r\n                  let stateInfo: string[] = stateArray[1].trim().split(/,|，/);\r\n                  let stateIndex: number = StateConst.STATE_INDEX;\r\n                  let stateData: Nullable<VE_StateData> = null;\r\n                  if (stateInfo.length === 2) {\r\n                    stateInfo[0] = stateInfo[0].trim();\r\n                    stateInfo[1] = stateInfo[1].trim();\r\n                    if (stateInfo[1].startsWith('#')) {\r\n                      stateIndex = parseInt(stateInfo[1].substring(1));\r\n                      if (stateIndex === NaN) {\r\n                        VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态赋值：\" + table.getData(i, 5) + \"，状态关联ID格式错误，状态关联标志ID写法：“状态ID=赋值，#整数ID”，当前整数转化错误！\", table.ID))\r\n                        return false;\r\n                      }\r\n                    } else {\r\n                      VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态赋值：\" + table.getData(i, 5) + \"，状态关联ID格式错误，状态关联标志ID写法：“状态ID=赋值，#整数ID”，请检查！\", table.ID))\r\n                      return false;\r\n                    }\r\n                  }\r\n                  stateData = new VE_StateData(this._activeFsmData, stateInfo[0].trim(), false, stateIndex);\r\n                  this._activeFsmData.addState(stateData);\r\n                  this._activeStateData = stateData;\r\n                }\r\n              } else {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态赋值：\" + table.getData(i, 5) + \"，状态名：\" + fsmID + \"，当前状态未定义，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n            }\r\n            // 创建状态机\r\n            else {\r\n              let varArray: string[] = VE_StringFormat.paraSegment(paraData);\r\n              if (varArray.length === 2 || varArray.length === 3 || varArray.length === 4) {\r\n                let fsmID: string = varArray[0].trim();\r\n                if (!VE_StringFormat.isIDLegal(fsmID)) {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态名：\" + table.getData(i, 5) + \"，当前状态名不合法，包含非法字符，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n                this._lastFsmID = fsmID;\r\n                let paraArray: string[] = [varArray[1].trim()];\r\n                if (varArray.length === 2) {\r\n                  paraArray[1] = '';\r\n                } else {\r\n                  paraArray[1] = varArray[2].trim();\r\n                }\r\n                let stateIndex: number = StateConst.STATE_INDEX;\r\n                if (varArray.length === 4) {\r\n                  if (varArray[3].startsWith('#')) {\r\n                    stateIndex = parseInt(varArray[3].substring(1));\r\n                    if (stateIndex === NaN) {\r\n                      VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态赋值：\" + varArray[3] + \"，状态关联ID格式错误，状态关联标志ID写法：“状态ID，变量类型，变量值，#整数ID”，当前整数转化错误！\", table.ID))\r\n                      return false;\r\n                    }\r\n                  } else {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态赋值：\" + varArray[3] + \"，状态关联ID格式错误，状态关联标志ID写法：“状态ID，变量类型，变量值，#整数ID”，当前整数转化错误！\", table.ID))\r\n                    return false;\r\n                  }\r\n                }\r\n                // 判断是模板状态，还是对象状态，注意：局部变量名与状态名也不能重合\r\n                if (this._currentType === AnalisysType.Object) {\r\n                  if (this._activeObject!.varData.isCreatedVariable(fsmID)) {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"对象名：\" + this._activeObject!.objectID + \"，状态名：\" + fsmID + \"，状态名与局部变量名不能相同，当前局部变量已创建，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                  // 状态重复判断，应该是判断未初始化的原始数据\r\n                  if (this._activeObject!.dataSource.isCreatedFsm(fsmID)) {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"对象名：\" + this._activeObject!.objectID + \"，状态名：\" + fsmID + \"，当前状态已创建，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                  // 创建状态机数据\r\n                  this._activeObject!.dataSource.createFsm(fsmID);\r\n                  this._activeFsmData = this._activeObject!.dataSource.getFsmData(fsmID);\r\n                  // 初始化状态机\r\n                  if (VeryVarManager.hasVarType(paraArray[0])) {\r\n                    this._activeFsmData.initFsm(paraArray[0], paraArray[1]);\r\n                    // 创建具体状态\r\n                    let stateData: VE_StateData = new VE_StateData(this._activeFsmData, paraArray[1], true, stateIndex);\r\n                    this._activeFsmData.addState(stateData);\r\n                    this._activeStateData = stateData;\r\n                  } else {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"对象名：\" + this._activeObject!.objectID + \"，状态名：\" + fsmID + \"，类型：\" + paraArray[0] + \"，状态类型错误，当前状态变量类型在系统中不存在，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                }\r\n                else if (this._currentType === AnalisysType.Template) {\r\n                  if (this._activeTemplate!.varData.isCreatedVariable(fsmID)) {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"模板对象名：\" + this._activeTemplate!.templateID + \"，状态名：\" + fsmID + \"，状态名与局部变量名不能相同，当前局部变量已创建，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                  // 状态重复判断，应该是判断未初始化的原始数据\r\n                  if (this._activeTemplate!.dataSource.isCreatedFsm(fsmID)) {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"模板对象名：\" + this._activeTemplate!.templateID + \"，状态名：\" + fsmID + \"，当前状态已创建，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                  // 创建状态机数据\r\n                  this._activeTemplate!.dataSource.createFsm(fsmID);\r\n                  this._activeFsmData = this._activeTemplate!.dataSource.getFsmData(fsmID);\r\n                  // 初始化状态机\r\n                  if (VeryVarManager.hasVarType(paraArray[0])) {\r\n                    this._activeFsmData.initFsm(paraArray[0], paraArray[1]);\r\n                    // 创建具体状态\r\n                    let stateData: VE_StateData = new VE_StateData(this._activeFsmData, paraArray[1], true, stateIndex);\r\n                    this._activeFsmData.addState(stateData);\r\n                    this._activeStateData = stateData;\r\n                  } else {\r\n                    VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"模板对象名：\" + this._activeTemplate!.objectID + \"，状态名：\" + fsmID + \"，类型：\" + paraArray[0] + \"，状态类型错误，当前状态变量类型在系统中不存在，请检查！\", table.ID))\r\n                    return false;\r\n                  }\r\n                }\r\n                else {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"局部变量：\" + table.getData(i, 5) + \"，当前局部变量所属未知，格式错误，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n              } else {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 5), \"状态：\" + table.getData(i, 5) + \"，当前状态格式不正确，应为“状态名，类型，初始值”的形式，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n\r\n          // 触发解析\r\n          if (table.getData(i, 2) !== '') {\r\n            if (this._activeFsmData === null || this._activeStateData === null) {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 2), \"触发：\" + table.getData(i, 2) + \"，当前触发不属于任何对象和模板对象，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n            // 触发定义不为空，则加入到DataSource中，并且判断重复性\r\n            let triggerID: string = table.getData(i, 2);\r\n            if (!VE_StringFormat.isIDLegal(triggerID)) {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 2), \"触发名：\" + table.getData(i, 2) + \"，当前触发名不合法，包含非法字符，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n            if (table.getData(i, 3) !== '') {\r\n              if (!this._activeFsmData!.dataSource.isCreatedTrigger(triggerID)) {\r\n                this._activeFsmData!.dataSource.addTrigger(triggerID, VE_StringFormat.paraSegment(table.getData(i, 3)));\r\n              } else {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 2), \"触发：\" + table.getData(i, 2) + \"，当前触发已在该对象中定义，请勿重复定义，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n            }\r\n\r\n            // 触发数据加入StateData中\r\n            let triggerData: VE_StateTriggerData = new VE_StateTriggerData(triggerID);\r\n            this._activeStateData.addTrigger(triggerData);\r\n\r\n            // 触发启动条件\r\n            if (table.getData(i, 1) !== '') {\r\n              triggerData.logicalSwitch = table.getData(i, 1);\r\n            }\r\n\r\n            // 触发逻辑条件\r\n            if (table.getData(i, 4) !== '') {\r\n              triggerData.logicalExp = table.getData(i, 4);\r\n            }\r\n          } else {\r\n            // 触发启动条件\r\n            if (table.getData(i, 1) !== '') {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 1), \"触发启动条件：\" + table.getData(i, 1) + \"，当前无触发，请勿定义触发启动条件，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n\r\n            // 关联状态逻辑条件\r\n            if (table.getData(i, 4) !== '') {\r\n              if (this._activeFsmData === null || this._activeStateData === null) {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 4), \"状态逻辑条件：\" + table.getData(i, 4) + \"，当前状态逻辑条件不属于任何对象和模板对象，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n              if (this._activeStateData.logicalExp !== '') {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 4), \"状态逻辑条件：\" + table.getData(i, 4) + \"，在状态的某个值中，无触发的状态逻辑条件只能填写1个，作为关联状态的逻辑条件，此处为第2个，不符合规则，请检查！\", table.ID))\r\n                return false;\r\n              } else {\r\n                this._activeStateData.logicalExp = table.getData(i, 4);\r\n              }\r\n            }\r\n\r\n            if (table.getData(i, 3) !== '') {\r\n              VE_ErrorManager.add(VE_Error.warning(table.pos(i, 3), \"触发参数：\" + table.getData(i, 3) + \"，该处无触发定义，但是填写了触发参数，请检查！\", table.ID))\r\n            }\r\n          }\r\n\r\n          // 响应解析\r\n          if (table.getData(i, 6) !== '') {\r\n            if (this._activeFsmData === null || this._activeStateData === null) {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 6), \"响应：\" + table.getData(i, 6) + \"，当前响应不属于任何对象和模板对象，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n            // 特殊调试响应\r\n            let tempStr: string = table.getData(i, 6).toLowerCase();\r\n            if (tempStr.startsWith('log(') || tempStr.startsWith('log（') || tempStr.startsWith('调试（') || tempStr.startsWith('调试(')) {\r\n              let newActionID: string = project_name + '___' + StateConst.LogCount++;\r\n              let actionData: VE_StateActionData = new VE_StateActionData(newActionID, 'true', 'false');\r\n              this._activeStateData.addAction(actionData);\r\n              let actionPara: string = table.getData(i, 6).substring(4);\r\n              if (tempStr.startsWith('调试')) {\r\n                actionPara = table.getData(i, 6).substring(3);\r\n              }\r\n              this._activeFsmData.dataSource.addAction(newActionID, ['调试', '调试', actionPara.substring(0, actionPara.length - 1)], ['false', 'false']);\r\n              if (table.getData(i, 7) !== '') {\r\n                VE_ErrorManager.add(VE_Error.warning(table.pos(i, 7), \"响应参数：\" + table.getData(i, 7) + \"，该处不应该再有响应定义，但是填写了响应参数，请检查！\", table.ID))\r\n              }\r\n            }\r\n            else if (tempStr.startsWith('error(') || tempStr.startsWith('error（') || tempStr.startsWith('错误（') || tempStr.startsWith('错误(')) {\r\n              let newActionID: string = project_name + '___' + StateConst.LogCount++;\r\n              let actionData: VE_StateActionData = new VE_StateActionData(newActionID, 'true', 'false');\r\n              this._activeStateData.addAction(actionData);\r\n              let actionPara: string = table.getData(i, 6).substring(6);\r\n              if (tempStr.startsWith('错误')) {\r\n                actionPara = table.getData(i, 6).substring(3);\r\n              }\r\n              this._activeFsmData.dataSource.addAction(newActionID, ['调试', '错误', actionPara.substring(0, actionPara.length - 1)], ['false', 'false']);\r\n              if (table.getData(i, 7) !== '') {\r\n                VE_ErrorManager.add(VE_Error.warning(table.pos(i, 7), \"响应参数：\" + table.getData(i, 7) + \"，该处不应该再有响应定义，但是填写了响应参数，请检查！\", table.ID))\r\n              }\r\n            }\r\n            else if (tempStr.startsWith('warn(') || tempStr.startsWith('warn（') || tempStr.startsWith('警告（') || tempStr.startsWith('警告(')) {\r\n              let newActionID: string = project_name + '___' + StateConst.LogCount++;\r\n              let actionData: VE_StateActionData = new VE_StateActionData(newActionID, 'true', 'false');\r\n              this._activeStateData.addAction(actionData);\r\n              let actionPara: string = table.getData(i, 6).substring(5);\r\n              if (tempStr.startsWith('警告')) {\r\n                actionPara = table.getData(i, 6).substring(3);\r\n              }\r\n              this._activeFsmData.dataSource.addAction(newActionID, ['调试', '警告', actionPara.substring(0, actionPara.length - 1)], ['false', 'false']);\r\n              if (table.getData(i, 7) !== '') {\r\n                VE_ErrorManager.add(VE_Error.warning(table.pos(i, 7), \"响应参数：\" + table.getData(i, 7) + \"，该处不应该再有响应定义，但是填写了响应参数，请检查！\", table.ID))\r\n              }\r\n            }\r\n            else if (table.getData(i, 6).indexOf('=') > -1) {\r\n              if (table.getData(i, 7) !== '') {\r\n                VE_ErrorManager.add(VE_Error.warning(table.pos(i, 7), \"响应参数：\" + table.getData(i, 7) + \"，该处不应该再有响应定义，但是填写了响应参数，请检查！\", table.ID))\r\n              }\r\n\r\n              // 允许“=”后面直接赋值 公式\r\n              let equalIndex: number = table.getData(i, 6).indexOf('=');\r\n              let actionData: VE_StateActionData = new VE_StateActionData('');\r\n              actionData.setAssignmentAction(table.getData(i, 6), table.getData(i, 6).substring(0, equalIndex).trim(), table.getData(i, 6).substring(equalIndex + 1).trim());\r\n              this._activeStateData.addAction(actionData);\r\n            }\r\n            else {\r\n              // 响应ID\r\n              let actionArray: string[] = VE_StringFormat.paraSegment(table.getData(i, 6));\r\n              if (actionArray.length === 2 || actionArray.length === 3 || actionArray.length === 4) {\r\n                let actionData: VE_StateActionData;\r\n                if (actionArray.length === 2) {\r\n                  actionData = new VE_StateActionData(actionArray[0], actionArray[1]);\r\n                } else if (actionArray.length === 3) {\r\n                  actionData = new VE_StateActionData(actionArray[0], actionArray[1], actionArray[2]);\r\n                } else {\r\n                  actionData = new VE_StateActionData(actionArray[0], actionArray[1], actionArray[2], actionArray[3]);\r\n                }\r\n                this._activeStateData.addAction(actionData);\r\n              } else {\r\n                VE_ErrorManager.add(VE_Error.error(table.pos(i, 6), \"响应：\" + table.getData(i, 6) + \"，响应格式不正确，应为“响应ID，启动标志（bool），每帧运行标志（bool）”的形式，请检查！\", table.ID))\r\n                return false;\r\n              }\r\n\r\n              // 响应定义\r\n              if (table.getData(i, 7) !== '') {\r\n                if (!VE_StringFormat.isIDLegal(actionArray[0])) {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 6), \"响应名：\" + table.getData(i, 6) + \"，当前响应名不合法，包含非法字符，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n                if (!this._activeFsmData.dataSource.isCreatedAction(actionArray[0])) {\r\n                  if (actionArray.length == 2) {\r\n                    this._activeFsmData.dataSource.addAction(actionArray[0], VE_StringFormat.paraSegment(table.getData(i, 7)), [actionArray[1], 'false']);\r\n                  } else {\r\n                    this._activeFsmData.dataSource.addAction(actionArray[0], VE_StringFormat.paraSegment(table.getData(i, 7)), [actionArray[1], actionArray[2]]);\r\n                  }\r\n                } else {\r\n                  VE_ErrorManager.add(VE_Error.error(table.pos(i, 6), \"响应：\" + table.getData(i, 6) + \"，当前响应已在该对象中定义，请勿重复定义，请检查！\", table.ID))\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            if (table.getData(i, 7) !== '') {\r\n              VE_ErrorManager.add(VE_Error.warning(table.pos(i, 7), \"响应参数：\" + table.getData(i, 7) + \"，该处无响应定义，但是填写了响应参数，请检查！\", table.ID))\r\n            }\r\n          }\r\n\r\n          // 关联状态解析\r\n          if (table.getData(i, 8) !== '') {\r\n            if (this._activeFsmData === null || this._activeStateData === null) {\r\n              VE_ErrorManager.add(VE_Error.error(table.pos(i, 8), \"关联状态：\" + table.getData(i, 8) + \"，当前关联状态不属于任何对象和模板对象，请检查！\", table.ID))\r\n              return false;\r\n            }\r\n            this._activeStateData!.addAssociatedState(table.getData(i, 8));\r\n          }\r\n        }\r\n      }\r\n\r\n      return CreateInstance.createProject(project_name);\r\n    } else {\r\n      VE_ErrorManager.add(VE_Error.error('', '表格内容不存在，引擎无法启动！', 'null'));\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}","export * from './projects';\r\nexport * from './manager';\r\nexport * from './reset';","import { VE_Projects } from \"./projects\";\r\nimport { VE_Objects } from \"../object\";\r\nimport { VE_Templates } from \"../template\";\r\nimport { VE_Variables } from \"../variables\";\r\nimport { VE_VariableData } from \"../dataSource\";\r\n\r\nexport class VE_Manager {\r\n\r\n  public static get projects(): VE_Projects {\r\n    if(this._projects === null) {\r\n      this._projects = new VE_Projects();\r\n    }\r\n    return this._projects;\r\n  }\r\n  private static _projects: VE_Projects | null = null; \r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public static createProject(project_name: string): void {\r\n    if(!VE_Manager.projects.isCreatedObjects(project_name)) {\r\n      VE_Manager.projects.addObjects(project_name, new VE_Objects(project_name));\r\n    }\r\n    if(!VE_Manager.projects.isCreatedTemplates(project_name)) {\r\n      VE_Manager.projects.addTemplates(project_name, new VE_Templates(project_name));\r\n    }\r\n    if(!VE_Manager.projects.isCreatedVariables(project_name)) {\r\n      VE_Manager.projects.addVariables(project_name, new VE_Variables(project_name));\r\n    }\r\n  }\r\n\r\n  public static globalVarData(project_name: string): VE_VariableData {\r\n    if(!VE_Manager.projects.isCreatedGlobals(project_name)) {\r\n      VE_Manager.projects.addVariables(project_name, new VE_Variables(project_name));\r\n    }\r\n    return VE_Manager.projects.getGlobalVars(project_name);\r\n  }\r\n\r\n  public static templates(project_name: string): VE_Templates {\r\n    if(!VE_Manager.projects.isCreatedTemplates(project_name)) {\r\n      VE_Manager.projects.addTemplates(project_name, new VE_Templates(project_name));\r\n    }\r\n    return VE_Manager.projects.getTemplates(project_name);\r\n  }\r\n\r\n  public static variables(project_name: string): VE_Variables {\r\n    if(!VE_Manager.projects.isCreatedVariables(project_name)) {\r\n      VE_Manager.projects.addVariables(project_name, new VE_Variables(project_name));\r\n    }\r\n    return VE_Manager.projects.getVariables(project_name);\r\n  }\r\n\r\n  public static objects(project_name: string): VE_Objects {\r\n    if(!VE_Manager.projects.isCreatedObjects(project_name)) {\r\n      VE_Manager.projects.addObjects(project_name, new VE_Objects(project_name));\r\n    }\r\n    return VE_Manager.projects.getObjects(project_name);\r\n  }\r\n\r\n  public static clear(): void {\r\n    this._projects = null;\r\n  }\r\n\r\n  public static clearProject(project_name: string): void {\r\n    VE_Manager.clearProject(project_name);\r\n  }\r\n\r\n\r\n}","import { VE_Objects } from \"../object\";\r\nimport { VE_VariableData } from \"../dataSource\";\r\nimport { VE_Templates } from \"../template\";\r\nimport { VE_Variables } from \"../variables\";\r\n\r\n\r\nexport class VE_Projects {\r\n\r\n  private _objects: { [key: string]: VE_Objects } = {};\r\n  private _variables: { [key: string]: VE_Variables } = {};\r\n  private _templates: { [key: string]: VE_Templates } = {};\r\n\r\n  public projects: string[] = [];\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public isCreatedObjects(project_name: string): boolean {\r\n    if(this._objects[project_name]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addObjects(project_name: string, objects: VE_Objects): void {\r\n    this._objects[project_name] = objects;\r\n  }\r\n\r\n  public getObjects(project_name: string): VE_Objects {\r\n    return this._objects[project_name];\r\n  }\r\n\r\n  public isCreatedVariables(project_name: string): boolean {\r\n    if(this._variables[project_name]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addVariables(project_name: string, variables: VE_Variables): void {\r\n    this._variables[project_name] = variables;\r\n  }\r\n\r\n  public getVariables(project_name: string): VE_Variables {\r\n    return this._variables[project_name];\r\n  }\r\n\r\n  public isCreatedTemplates(project_name: string): boolean {\r\n    if(this._templates[project_name]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addTemplates(project_name: string, templates: VE_Templates): void {\r\n    this._templates[project_name] = templates;\r\n  }\r\n\r\n  public getTemplates(project_name: string): VE_Templates {\r\n    return this._templates[project_name];\r\n  }\r\n\r\n  public isCreatedGlobals(project_name: string): boolean {\r\n    if(this._variables[project_name]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getGlobalVars(project_name: string): VE_VariableData {\r\n    return this._variables[project_name].varData;\r\n  }\r\n\r\n  public clear(): void {\r\n    // TODO\r\n    this._objects = {};\r\n    this._templates = {};\r\n    this._variables = {};\r\n  }\r\n\r\n  public clearPorject(project_name: string): void {\r\n    delete this._objects[project_name];\r\n    delete this._templates[project_name];\r\n    delete this._variables[project_name];\r\n  }\r\n\r\n  public sleep(): void {\r\n    \r\n  }\r\n\r\n\r\n}","export class VE_Reset {\r\n  constructor() {\r\n\r\n  }\r\n}","export * from './veryengineObject';\r\nexport * from './objects';","import { VeryEngineObject } from \"./veryengineObject\";\r\nimport { ArrayUtility } from \"../utility\";\r\n\r\nexport class VE_Objects {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  private _objectIDs: string[] = [];\r\n  private _objectDics: { [key: string]: VeryEngineObject } = {};\r\n\r\n  public get count(): number {\r\n    return this._objectIDs.length;\r\n  }\r\n\r\n  constructor(project_name: string) {\r\n    this._projectName = project_name;\r\n  }\r\n\r\n  public isCreated(object_id: string): boolean {\r\n    if (this._objectDics[object_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public add(object_id: string, very_object: VeryEngineObject): void {\r\n    if (!this.isCreated(object_id)) {\r\n      this._objectIDs.push(object_id);\r\n      this._objectDics[object_id] = very_object;\r\n    }\r\n  }\r\n\r\n  public getObjectID(index: number): string {\r\n    if(index >= 0 && index < this._objectIDs.length) {\r\n      return this._objectIDs[index];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public getVeryObject(object_id: string): VeryEngineObject {\r\n    return this._objectDics[object_id];\r\n  }\r\n\r\n  public unloadObject(object_id: string): void {\r\n    // this._objectIDs.re\r\n    ArrayUtility.remove(this._objectIDs, object_id);\r\n    delete this._objectDics.object_id;\r\n\r\n  }\r\n\r\n  public clear(): void {\r\n    for(let i: number = 0; i < this._objectIDs.length; i++) {\r\n      let tempObject = this._objectDics[this._objectIDs[i]];\r\n      if(tempObject) {\r\n        tempObject.clear();\r\n      }\r\n    }\r\n    this._objectIDs = [];\r\n    this._objectDics = {};\r\n  }\r\n}","import { GameObject, IVeryVar } from \"../variables\";\r\nimport { IExpression } from \"../expression\";\r\nimport { VE_ActionBehaviour } from \"../action\";\r\nimport { VE_TriggerBehaviour } from \"../trigger\";\r\nimport { VE_Fsm, VE_State } from \"../state\";\r\nimport { VE_Template } from \"../template\";\r\nimport { VE_DataSource, VE_VariableData } from \"../dataSource\";\r\n\r\nexport class VeryEngineObject {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  public get objectID(): string {\r\n    return this._objectID;\r\n  }\r\n  private _objectID: string = '';\r\n\r\n  public gameObject: GameObject = new GameObject('');\r\n\r\n  private _variables: { [key: string]: IVeryVar } = {};\r\n  private _expressions: { [key: string]: IExpression } = {};\r\n  private _actions: { [key: string]: VE_ActionBehaviour } = {};\r\n  private _triggers: { [key: string]: VE_TriggerBehaviour } = {};\r\n  private _fsms: { [key: string]: VE_Fsm } = {};\r\n  private _templates: { [key: string]: VE_Template } = {};\r\n\r\n  public dataSource: VE_DataSource;\r\n\r\n  public varData: VE_VariableData;\r\n\r\n\r\n\r\n  constructor(project_name: string, object_id: string, game_object: GameObject) {\r\n    this._projectName = projectName;\r\n    this._objectID = object_id;\r\n    this.gameObject = game_object;\r\n    this.dataSource = new VE_DataSource(project_name, object_id, false);\r\n    this.varData = new VE_VariableData(project_name);\r\n  }\r\n\r\n  public isCreatedFsm(fsm_id: string): boolean {\r\n    if (this._fsms[fsm_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addFsm(fsm_id: string, fsm: VE_Fsm): void {\r\n    this._fsms[fsm_id] = fsm;\r\n  }\r\n\r\n  public getFsm(fsm_id: string): VE_Fsm {\r\n    return this._fsms[fsm_id];\r\n  }\r\n\r\n  public isCreatedTrigger(trigger_id: string): boolean {\r\n    if (this._triggers[trigger_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addTrigger(trigger_id: string, trigger: VE_TriggerBehaviour): void {\r\n    this._triggers[trigger_id] = trigger;\r\n  }\r\n\r\n  public getTrigger(trigger_id: string): VE_TriggerBehaviour {\r\n    return this._triggers[trigger_id];\r\n  }\r\n\r\n  public isCreatedAction(action_id: string): boolean {\r\n    if (this._actions[action_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addAction(action_id: string, action: VE_ActionBehaviour): void {\r\n    this._actions[action_id] = action;\r\n  }\r\n\r\n  public getAction(action_id: string): VE_ActionBehaviour {\r\n    return this._actions[action_id];\r\n  }\r\n\r\n  public isCreatedVariable(var_id: string): boolean {\r\n    if (this._variables[var_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addVariable(var_id: string, variable: IVeryVar): void {\r\n    this._variables[var_id] = variable;\r\n  }\r\n\r\n  public getVariable(var_id: string): IVeryVar {\r\n    return this._variables[var_id];\r\n  }\r\n\r\n  public isCreatedExpression(exp_id: string): boolean {\r\n    if (this._expressions[exp_id]) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public addExpression(exp_id: string, expression: IExpression): void {\r\n    this._expressions[exp_id] = expression;\r\n  }\r\n\r\n  public getExpression(exp_id: string): IExpression {\r\n    return this._expressions[exp_id];\r\n  }\r\n\r\n  public isCreatedTemplate(template_id: string): boolean {\r\n    if (this._templates[template_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addTemplate(template_id: string, template: VE_Template): void {\r\n    this._templates[template_id] = template;\r\n  }\r\n\r\n  public getTemplate(template_id: string): VE_Template {\r\n    return this._templates[template_id];\r\n  }\r\n\r\n  public isCreatedVar(var_id: string): boolean {\r\n    if (this._variables[var_id] || this._expressions[var_id] || this._templates[var_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // getState(fsm_id: string, index: number): VE_State {\r\n\r\n  // }\r\n\r\n  unload(): void { }\r\n\r\n  // setUnloadCallback(callback): void {}\r\n\r\n\r\n\r\n\r\n  public clear(): void {\r\n\r\n    if (this.dataSource) {\r\n      this.dataSource.clear();\r\n    }\r\n    if (this.varData) {\r\n      this.varData.clear();\r\n    }\r\n    this._variables = {};\r\n    this._expressions = {};\r\n\r\n    if (this._templates) {\r\n      Object.keys(this._templates).forEach(key => {\r\n        this._templates[key].clear();\r\n      })\r\n      this._templates = {};\r\n    }\r\n\r\n    this._fsms = {};\r\n\r\n    if (this._actions) {\r\n      Object.keys(this._actions).forEach(key => {\r\n        this._actions[key].destroy();\r\n      })\r\n      this._actions = {};\r\n    }\r\n\r\n    if (this._triggers) {\r\n      Object.keys(this._triggers).forEach(key => {\r\n        this._triggers[key].destroy();\r\n      })\r\n      this._triggers = {};\r\n    }\r\n  }\r\n\r\n\r\n}","import { VE_State } from \"./state\";\r\nimport { AssociatedFsmType } from \"../enum\";\r\nimport { VE_Template } from \"../template\";\r\n\r\nexport class VE_AssociatedState {\r\n\r\n  private _types: AssociatedFsmType[] = [];\r\n  private _indexs: number[] = [];\r\n\r\n  private _numberIndex: { [key: number]: number } = {};\r\n  private _states: { [key: number]: VE_State } = {};\r\n  private _templates: { [key: number]: VE_Template } = {};\r\n  private _templateIDs: { [key: number]: string } = {};\r\n\r\n  public get FromState(): VE_State {\r\n    return this._fromState;\r\n  }\r\n  private _fromState: VE_State;\r\n\r\n  constructor(from_state: VE_State) {\r\n    this._fromState = from_state;\r\n  }\r\n  \r\n  public add(state: VE_State, index: number): void {\r\n    this._types.push(AssociatedFsmType.Object);\r\n    let key: number = this._types.length;\r\n    this._indexs.push(key);\r\n    this._numberIndex[key] = index;\r\n    this._states[key] = state;\r\n  }\r\n\r\n  public addTemplate(template: VE_Template, fsm_id: string, index: number): void {\r\n    this._types.push(AssociatedFsmType.Object);\r\n    let key: number = this._types.length;\r\n    this._indexs.push(key);\r\n    this._numberIndex[key] = index;\r\n    this._templates[key] = template;\r\n    this._templateIDs[key] = fsm_id;\r\n  }\r\n\r\n  public connect(): void {\r\n\r\n  }\r\n\r\n\r\n}","import { Dictionary } from \"../utility/dictionary\";\r\nimport { VE_State } from \"./state\";\r\nimport { Time } from \"../global\";\r\nimport { StateConst } from \"./stateConst\";\r\n\r\nexport class VE_Fsm {\r\n\r\n  public get ID(): string {\r\n    return this._id;\r\n  }\r\n  private _id: string = '';\r\n\r\n  public get ObjectID(): string {\r\n    return this._objectID;\r\n  }\r\n  private _objectID: string = '';\r\n\r\n  public get FsmID(): string {\r\n    return this._fsmID;\r\n  }\r\n  private _fsmID: string = '';\r\n\r\n  private _stateDics: Dictionary<string, VE_State> = new Dictionary<string, VE_State>();\r\n  private _states: VE_State[] = [];\r\n\r\n  private _frameCount: number = -1;\r\n  private _triggerIDs: string[] = [];\r\n\r\n  constructor() {\r\n    // this._stateDics.TryGetValue(1);\r\n  }\r\n\r\n  public hasState(state_value: string): boolean {\r\n    return this._stateDics.ContainsKey(state_value);\r\n  }\r\n\r\n  public addState(state_value: string, state: VE_State): void {\r\n    if (!this._stateDics.ContainsKey(state_value)) {\r\n      this._stateDics.Add(state_value, state);\r\n      this._states.push(state);\r\n    }\r\n  }\r\n\r\n  public getState(state_value: string): VE_State | null {\r\n    return this._stateDics.GetValue(state_value);\r\n  }\r\n\r\n  public removeState(state_value: string): boolean {\r\n    if (this.hasState(state_value)) {\r\n      this._stateDics.Remove(state_value);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public receiveEvent(trigger_id: string): boolean {\r\n    if (Time.frameCount != this._frameCount) {\r\n      this._frameCount = Time.frameCount;\r\n      this._triggerIDs = [];\r\n      this._triggerIDs.push(trigger_id);\r\n      return true;\r\n    } else {\r\n      if (trigger_id.startsWith(StateConst.ASSOCIATED_STATE_PREFIX)) {\r\n        // console.log(`ID: ${trigger_id} Return True`);\r\n        return true;\r\n      } else {\r\n        if (this._triggerIDs.indexOf(trigger_id) !== -1) {\r\n          return false;\r\n        } else {\r\n          this._triggerIDs.push(trigger_id);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}","export * from './state';\r\nexport * from './fsm';\r\nexport * from './stateAction';\r\nexport * from './associatedState';\r\nexport * from './stateConst';","import { VE_Fsm } from \"./fsm\";\r\nimport { VE_StateAction } from \"./stateAction\";\r\nimport { VE_AssociatedState } from \"./associatedState\";\r\n\r\nexport class VE_State {\r\n  public get Fsm(): VE_Fsm {\r\n    return this._fsm;\r\n  }\r\n  private _fsm: VE_Fsm;\r\n\r\n  public get Value(): string {\r\n    return this._value;\r\n  }\r\n  private _value: string = \"空状态\";\r\n\r\n  private _stateActions: VE_StateAction[] = [];\r\n  private _assocaitedStates: VE_AssociatedState[] = [];\r\n\r\n  public get IsSequence(): boolean {\r\n    return this._isSequence;\r\n  }\r\n  private _isSequence: boolean = false;\r\n\r\n  constructor(fsm: VE_Fsm, state_value: string = \"空状态\") {\r\n    this._fsm = fsm;\r\n    this._value = state_value;\r\n  }\r\n\r\n  public setValue(state_value: string): void {\r\n    this._value = state_value;\r\n  }\r\n\r\n  public addAction(state_action: VE_StateAction): void {\r\n    this._stateActions.push(state_action);\r\n    BABYLON.Mesh.bind;\r\n  }\r\n\r\n  public action(trigger_id: string): void {\r\n    if(this._fsm.receiveEvent(trigger_id)) {\r\n      \r\n    }\r\n  }\r\n}\r\n","\r\nimport { VE_ActionBehaviour } from \"../action/actionBehaviour\";\r\nimport { StateActionType } from \"../enum\";\r\n\r\nexport class VE_StateAction {\r\n  \r\n  public get Type(): StateActionType {\r\n    return this._type;\r\n  }\r\n  private _type: StateActionType = StateActionType.Action;\r\n\r\n  public get Action(): VE_ActionBehaviour {\r\n    return this._action;\r\n  }\r\n  private _action: VE_ActionBehaviour;\r\n\r\n  constructor(action: VE_ActionBehaviour, enabled: boolean, every_frame: boolean = false, is_sequence: boolean = false) {\r\n    this._action = action;\r\n  }\r\n\r\n\r\n\r\n\r\n}","export class StateConst {\r\n\r\n  public static readonly STATE_SEPARATOR: string = '.';\r\n  public static readonly ASSOCIATED_STATE_PREFIX: string = 'Associated_State:';\r\n  public static readonly VARIABLE_SYMBOL: string = '*';\r\n  public static readonly STATE_INDEX: number = -1;\r\n  public static LogCount: number = -1;\r\n  \r\n}","export * from './template';\r\nexport * from './templates';","import { VeryEngineObject } from \"../object\";\r\nimport { VE_DataSource, VE_VariableData } from \"../dataSource\";\r\n\r\nexport class VE_Template {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  public get templateID(): string {\r\n    return this._templateID;\r\n  }\r\n  private _templateID: string = '';\r\n\r\n  public get templateVarID(): string {\r\n    return this._templateVarID;\r\n  }\r\n  private _templateVarID: string = '';\r\n\r\n  public get objectID(): string {\r\n    return this._objectID;\r\n  }\r\n  private _objectID: string = '';\r\n\r\n  public templateInstance: VeryEngineObject | null = null;\r\n\r\n  public dataSource: VE_DataSource;\r\n\r\n  public varData: VE_VariableData;\r\n\r\n  public instanceCount(): number {\r\n    return this._instanceCount;\r\n  }\r\n  private _instanceCount: number = 0;\r\n\r\n\r\n  constructor(project_name: string, template_id: string) {\r\n    this._projectName = project_name;\r\n    this._templateID = template_id;\r\n    this.dataSource = new VE_DataSource(project_name, template_id, true);\r\n    this.varData = new VE_VariableData(project_name);\r\n  }\r\n\r\n  public setInstance(instance_obj: VeryEngineObject): void {\r\n    this.templateInstance = instance_obj;\r\n  }\r\n\r\n  public isCreatedVariable(var_id: string): boolean {\r\n    return this.varData.isCreatedVariable(var_id);\r\n  }\r\n\r\n  public addVariable(var_id: string, var_paras: string[], pos: string): void {\r\n    this.varData.addVariable(var_id, var_paras, pos);\r\n  }\r\n\r\n  public clone(object_id: string, template_var_id: string): VE_Template {\r\n    let cloneTemplate: VE_Template = new VE_Template(this._projectName, this._templateID);\r\n    cloneTemplate._objectID = object_id;\r\n    cloneTemplate._templateVarID = template_var_id;\r\n    cloneTemplate.dataSource = this.dataSource;\r\n    cloneTemplate.varData = this.varData;\r\n    cloneTemplate._instanceCount = this._instanceCount;\r\n    return cloneTemplate;\r\n  }\r\n\r\n  public clear(): void {\r\n    if(this.dataSource) {\r\n      this.dataSource.clear();\r\n    }\r\n    if(this.varData) {\r\n      this.varData.clear();\r\n    }\r\n    if(this.templateInstance) {\r\n      this.templateInstance.clear();\r\n    }\r\n  }\r\n\r\n}","import { VE_Template } from \"./template\";\r\nimport { ErrorInfo } from \"../utility\";\r\n\r\nexport class VE_Templates {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  private _templateDic: { [key: string]: VE_Template } = {};\r\n\r\n  private _instanceDic: { [key: string]: { [key: string]: VE_Template } } = {};\r\n\r\n\r\n  constructor(project_name: string) {\r\n    this._projectName = project_name;\r\n  }\r\n\r\n  public isCreatedTemplate(template_id: string): boolean {\r\n    if(this._templateDic[template_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addTemplate(template_id: string, template: VE_Template): void {\r\n    this._templateDic[template_id] = template;\r\n  }\r\n\r\n  public getTemplate(template_id: string): VE_Template {\r\n    return this._templateDic[template_id];\r\n  }\r\n\r\n  public isCreatedInstance(object_id: string, var_id: string): boolean {\r\n    if(this._instanceDic[object_id] && this._instanceDic[object_id][var_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getInstance(object_id: string, var_id: string): VE_Template {\r\n    return this._instanceDic[object_id][var_id];\r\n  }\r\n\r\n  // public getState(var_id: string, state_id: string, index: number): VE_State {\r\n    \r\n  // } \r\n\r\n  public clear(): void {\r\n    if(this._templateDic) {\r\n      Object.keys(this._templateDic).forEach(key => {\r\n        this._templateDic[key].clear();\r\n      })\r\n      this._templateDic = {};\r\n    }\r\n  }\r\n\r\n  // TODO\r\n  public createInstance (object_id: string, var_id: string, template: VE_Template, object_name: string, error_info: ErrorInfo, destory_on_create_new: boolean): VE_Template\r\n  {\r\n\r\n    return new VE_Template(this._projectName, var_id);\r\n  }\r\n\r\n}","export * from './triggerBehaviour';\r\nexport * from './triggers';","import { VE_State } from \"../state/state\";\r\nimport { StateConst } from \"../state/stateConst\";\r\nimport { IExpression } from \"../expression\";\r\n\r\nexport abstract class VE_TriggerBehaviour {\r\n\r\n  public abstract get ID(): string;\r\n\r\n  protected scene!: BABYLON.Scene;\r\n\r\n  public get enabled(): boolean {\r\n    return this._enabled;\r\n  }\r\n  public set enabled(val: boolean) {\r\n    this._enabled = val;\r\n  }\r\n  private _enabled: boolean = true;\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  public get isEnabled(): boolean {\r\n    if (this._logicalSwitch) {\r\n      for (let i: number = 0; i < this._logicalSwitch.length; i++) {\r\n        if (!this._logicalSwitch[i].evaluate()) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // Logical\r\n  private _logicalSwitch: IExpression[] = [];\r\n  private _logicalExp: IExpression[] = [];\r\n  // State\r\n  private _triggerTargets: VE_State[] = [];\r\n\r\n  // protected GameObject ObjectInstance = null;\r\n  // protected VeryEngineObject VeryObject = null;\r\n\r\n  public get objectID(): string {\r\n    return this._objectID;\r\n  }\r\n  private _objectID: string = 'object-axxx';\r\n\r\n  public get triggerID(): string {\r\n    return this._triggerID;\r\n  }\r\n  private _triggerID: string = '';\r\n\r\n  private _id: string = '';\r\n\r\n  public call(): void {\r\n    console.log(this._objectID);\r\n  }\r\n\r\n\r\n  public set(scene: BABYLON.Scene): void {\r\n    this.scene = scene;\r\n  }\r\n\r\n  public setTriggerID(trigger_id: string, object_id: string): void {\r\n    this._triggerID = trigger_id;\r\n    this._objectID = object_id;\r\n    this._id = object_id + StateConst.STATE_SEPARATOR + trigger_id;\r\n  }\r\n\r\n  public addLogicalSwitch(exp: IExpression): void {\r\n    this._logicalSwitch.push(exp);\r\n  }\r\n\r\n  public addTriggerTarget(exp: IExpression, state: VE_State): void {\r\n    this._logicalExp.push(exp);\r\n    this._triggerTargets.push(state);\r\n  }\r\n\r\n  public sendEvent(): void {\r\n    if(this.isEnabled) {\r\n      this.eventProcess();\r\n    }\r\n  }\r\n\r\n  // 关联具体响应\r\n  private eventProcess(): void {\r\n    if (this._triggerTargets) {\r\n      for (let i: number = 0; i < this._triggerTargets.length; i++) {\r\n        if (this._logicalExp[i].evaluate()) {\r\n          this._triggerTargets[i].action(this._id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public paraParser(para_array: string[]): boolean {\r\n    return true;\r\n  }\r\n\r\n  public update(): void {\r\n    if(this.isEnabled) {\r\n      this.onUpdate();\r\n    }\r\n  }\r\n\r\n  public onUpdate(): void {\r\n\r\n  }\r\n\r\n  public abstract destroy(): void;\r\n\r\n\r\n}","import { VE_TriggerBehaviour } from \"./triggerBehaviour\";\r\nimport { ShowError } from \"../html\";\r\n\r\nexport class VE_Triggers {\r\n\r\n  private static _triggerDics: { [key: string]: VE_TriggerBehaviour} = {};\r\n\r\n  public static addTrigger(trigger: VE_TriggerBehaviour): void {\r\n    let ids: string[] = trigger.ID.split('|');\r\n    for(let i: number = 0; i < ids.length; i++) {\r\n      let id: string = ids[i].trim().toLowerCase();\r\n      if(this._triggerDics[id]) {\r\n        ShowError.showError(`触发初始化错误，触发ID重复，当前触发ID：${id}，请为当前触发重新分配触发ID！`);\r\n      } else {\r\n        this._triggerDics[id] = trigger;\r\n      }\r\n    }\r\n  }\r\n\r\n  public static hasTrigger(trigger_id: string): boolean {\r\n    trigger_id = trigger_id.toLowerCase();\r\n    if(this._triggerDics[trigger_id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static createTrigger(trigger_id: string): VE_TriggerBehaviour {\r\n    trigger_id = trigger_id.toLowerCase();\r\n    // console.log(this._triggerDics[trigger_id]);\r\n    return Object.create(this._triggerDics[trigger_id]);\r\n  }\r\n  \r\n  public static remove(trigger_id: string): void {\r\n    trigger_id = trigger_id.toLowerCase();\r\n    delete this._triggerDics[trigger_id];\r\n  }\r\n\r\n}","export class ArrayUtility {\r\n  public static remove<T>(arr: Array<T>, ele: T): void {\r\n    let index = arr.indexOf(ele);\r\n    if (index > -1) {\r\n      arr.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  public static clear<T>(arr: Array<T>): void {\r\n    arr = [];\r\n  }\r\n\r\n}\r\n\r\n","/**字典数据结构类 */\r\nexport class Dictionary<KT, VT> {\r\n  private _keys: KT[] = [];\r\n  private _values: VT[] = [];\r\n  public get count(): number {\r\n    return this.Count();\r\n  }\r\n\r\n  public constructor() {\r\n  }\r\n\r\n  /**给字典增加一条数据,返回字典的长度 */\r\n  public Add(key: any, value: any): number {\r\n    this._keys.push(key);\r\n    return this._values.push(value);\r\n  }\r\n\r\n  public Remove(key: any) {\r\n    var index = this._keys.indexOf(key, 0);\r\n    this._keys.splice(index, 1);\r\n    this._values.splice(index, 1);\r\n  }\r\n\r\n  private Count(): number {\r\n    return this._keys.length;\r\n  }\r\n\r\n  /**直接使用SetValue()修改已经存在的字典数据项 */\r\n  public SetValue(key: any, value: any): boolean {\r\n    var index = this._keys.indexOf(key, 0);\r\n    if (index != -1) {\r\n      this._keys[index] = key;\r\n      this._values[index] = value;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\t/**\r\n\t *返回字典数据；\r\n\t */\r\n  public GetValue(key: KT): VT | null {\r\n    var index = this._keys.indexOf(key, 0);\r\n    if (index != -1) {\r\n      return this._values[index];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public ContainsKey(key: any): boolean {\r\n    let ks = this._keys;\r\n    for (let i = 0; i < ks.length; ++i) {\r\n      if (ks[i] == key) {\r\n        return true;;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public GetKeys(): KT[] {\r\n    return this._keys;\r\n  }\r\n\r\n  public GetValues(): VT[] {\r\n    return this._values;\r\n  }\r\n}","export class ErrorInfo {\r\n\r\n  public isRight: boolean = true;\r\n  public message: string = '';\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  public clear(): void {\r\n    this.isRight = true;\r\n    this.message = '';\r\n  }\r\n\r\n}","export * from './arrayUtility';\r\nexport * from './dictionary';\r\nexport * from './errorInfo';\r\nexport * from './stringFormat';","export class VE_StringFormat {\r\n\r\n  private static _illegalChar: { [key: string]: boolean } = {};\r\n  private static _formulaChar: { [key: string]: boolean } = {};\r\n  private static _escapeCharacters: { [key: string]: string } = {};\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public static init() {\r\n    this._escapeCharacters['n'] = '\\n';\r\n    this._escapeCharacters['b'] = '\\b';\r\n    this._escapeCharacters['r'] = '\\r';\r\n    this._escapeCharacters['t'] = '\\t';\r\n    this._escapeCharacters['v'] = '\\v';\r\n    this._escapeCharacters['f'] = '\\f';\r\n    this._escapeCharacters['0'] = '\\0';\r\n\r\n    this._illegalChar['='] = true;\r\n    this._illegalChar[','] = true;\r\n    this._illegalChar['，'] = true;\r\n    this._illegalChar[':'] = true;\r\n    this._illegalChar['：'] = true;\r\n    this._illegalChar['*'] = true;\r\n    this._illegalChar['('] = true;\r\n    this._illegalChar['（'] = true;\r\n    this._illegalChar[')'] = true;\r\n    this._illegalChar['）'] = true;\r\n    this._illegalChar['@'] = true;\r\n    this._illegalChar['#'] = true;\r\n    this._illegalChar['$'] = true;\r\n    this._illegalChar['%'] = true;\r\n    this._illegalChar['&'] = true;\r\n    this._illegalChar['^'] = true;\r\n    this._illegalChar['-'] = true;\r\n    this._illegalChar['+'] = true;\r\n    this._illegalChar['|'] = true;\r\n    this._illegalChar['/'] = true;\r\n    this._illegalChar['['] = true;\r\n    this._illegalChar['【'] = true;\r\n    this._illegalChar[']'] = true;\r\n    this._illegalChar['】'] = true;\r\n    this._illegalChar['{'] = true;\r\n    this._illegalChar['}'] = true;\r\n    this._illegalChar['.'] = true;\r\n    this._illegalChar['。'] = true;\r\n    this._illegalChar['<'] = true;\r\n    this._illegalChar['>'] = true;\r\n    this._illegalChar[';'] = true;\r\n    this._illegalChar['；'] = true;\r\n    this._illegalChar['?'] = true;\r\n    this._illegalChar['\\\"'] = true;\r\n    this._illegalChar['“'] = true;\r\n    this._illegalChar['”'] = true;\r\n    this._illegalChar['\\''] = true;\r\n    this._illegalChar['‘'] = true;\r\n    this._illegalChar['’'] = true;\r\n    this._illegalChar['!'] = true;\r\n    this._illegalChar['！'] = true;\r\n    this._illegalChar['`'] = true;\r\n    this._illegalChar['·'] = true;\r\n    this._illegalChar['~'] = true;\r\n\r\n    this._formulaChar['('] = true; this._formulaChar[')'] = true; this._formulaChar['（'] = true; this._formulaChar['）'] = true;\r\n    this._formulaChar['!'] = true; this._formulaChar['！'] = true;\r\n    this._formulaChar['^'] = true; this._formulaChar['%'] = true; this._formulaChar['&'] = true; this._formulaChar['-'] = true; this._formulaChar['+'] = true; this._formulaChar['='] = true;\r\n    this._formulaChar['<'] = true; this._formulaChar['>'] = true; this._formulaChar['|'] = true;\r\n  }\r\n\r\n  /**\r\n   * 输入参数字符串格式化，识别转义字符\r\n   * @param para_str 原始字符串\r\n   */\r\n  public static strEscapeCharacterAction(para_str: string): string {\r\n    let tmpStr: string = \"\";\r\n    for (let i: number = 0; i < para_str.length; i++) {\r\n      if (para_str[i] == '\\\\' && i != para_str.length - 1) {\r\n        tmpStr += this.getEscapeCharacter(para_str[i + 1]);\r\n        i++;\r\n      }\r\n      else {\r\n        tmpStr += para_str[i];\r\n      }\r\n    }\r\n    return tmpStr;\r\n  }\r\n\r\n  /**\r\n   * 输入参数字符串格式化，识别“（）”， 输出格式化字符串；；\r\n   * @param para_str 输入字符串；\r\n   */\r\n  public static strSubsectionAction(para_str: string): string[] {\r\n    let strBuilder: string = '';\r\n    let rStr: string[] = [];\r\n    let bracketFlag: boolean = false;\r\n    let hasQuote: boolean = false;\r\n    for (let i: number = 0; i < para_str.length; i++) {\r\n      if (para_str[i] == '\\\\') {\r\n        if (i < para_str.length - 1) {\r\n          strBuilder += para_str[i + 1];\r\n          i++;\r\n          continue;\r\n        }\r\n        else {\r\n          strBuilder += para_str[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!hasQuote && (para_str[i] === '\\\"' || para_str[i] === '“')) {\r\n        hasQuote = true;\r\n        bracketFlag = true;\r\n        strBuilder += '\\\"';\r\n      }\r\n      else if (hasQuote && (para_str[i] === '\\\"' || para_str[i] === '”')) {\r\n        strBuilder += '\\\"';\r\n        bracketFlag = false;\r\n        hasQuote = false;\r\n        if (strBuilder !== '') {\r\n          rStr.push(strBuilder);\r\n        }\r\n        strBuilder = '';\r\n      }\r\n      else if (para_str[i] === ',' || para_str[i] === '，') {\r\n        if (!bracketFlag) {\r\n          if (strBuilder !== \"\") {\r\n            rStr.push(strBuilder);\r\n          }\r\n          strBuilder = '';\r\n        }\r\n        else {\r\n          strBuilder += para_str[i];\r\n        }\r\n      }\r\n      else if (para_str[i] === ' ') {\r\n        continue;\r\n      }\r\n      else {\r\n        strBuilder += para_str[i];\r\n      }\r\n    }\r\n    if (strBuilder !== \"\") {\r\n      rStr.push(strBuilder);\r\n    }\r\n    return rStr;\r\n  }\r\n\r\n\r\n  private static getEscapeCharacter(para_char: string): string {\r\n    if (this._escapeCharacters[para_char])\r\n      return this._escapeCharacters[para_char];\r\n    else\r\n      return para_char;\r\n  }\r\n\r\n  private static getEscapeCharacter2(para_char: string, is_escape: boolean[]): string {\r\n    if (this._escapeCharacters[para_char]) {\r\n      is_escape[0] = true;\r\n      return this._escapeCharacters[para_char];\r\n    }\r\n    else {\r\n      is_escape[0] = false;\r\n      return para_char;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 输入参数字符串格式化，识别“（）”，\"（XXX）\"或者\"“XXX”\"当中的XXX会自动成为一个单独的字符串；\r\n   * @param para_str 输入字符串；\r\n   */\r\n  public static strSubsection(para_str: string): string[] {\r\n    let strBuilder: string = '';\r\n    let rStr: string[] = [];\r\n    let bracketFlag: boolean = false;\r\n    let needSpace: boolean = false;\r\n    for (let i: number = 0; i < para_str.length; i++) {\r\n      if (para_str[i] == '\\\\') {\r\n        if (i < para_str.length - 1) {\r\n          strBuilder += this.getEscapeCharacter(para_str[i + 1]);\r\n          i++;\r\n          continue;\r\n        }\r\n        else {\r\n          strBuilder += para_str[i];\r\n          break;\r\n        }\r\n      }\r\n      if (para_str[i] === '(' || para_str[i] === '（' || para_str[i] === '\\\"' || para_str[i] === '“') {\r\n        bracketFlag = true;\r\n        needSpace = false;\r\n      }\r\n      else if (para_str[i] === ')' || para_str[i] === '）' || para_str[i] === '\\\"' || para_str[i] === '”') {\r\n        bracketFlag = false;\r\n        if (strBuilder !== \"\") {\r\n          rStr.push(strBuilder);\r\n        }\r\n        strBuilder = '';\r\n        needSpace = false;\r\n      }\r\n      else if (para_str[i] === ',' || para_str[i] === '，') {\r\n        if (!bracketFlag) {\r\n          if (strBuilder !== \"\") {\r\n            rStr.push(strBuilder);\r\n          }\r\n          strBuilder = '';\r\n        }\r\n        else {\r\n          strBuilder += para_str[i];\r\n        }\r\n        needSpace = false;\r\n      }\r\n      else if (para_str[i] === ' ' && !needSpace) {\r\n        continue;\r\n      }\r\n      else {\r\n        strBuilder += para_str[i];\r\n        needSpace = true;\r\n      }\r\n    }\r\n    if (strBuilder !== \"\") {\r\n      rStr.push(strBuilder);\r\n    }\r\n    return rStr;\r\n  }\r\n\r\n  /**\r\n   * 将输入参数字符串进行格式化，识别$开头的公式变量，转化为相应的值；\r\n   * @param project_name 项目名；\r\n   * @param para_array 参数字符串列表；\r\n   */\r\n  public static getParaArrayAll(project_name: string, para_array: string[]): string[] {\r\n    let coloneStr: string[] = para_array.slice();\r\n    for (let i: number = 0; i < coloneStr.length; i++) {\r\n      if (coloneStr[i].startsWith(\"$\")) {\r\n        //递归处理“（）”中的参数\r\n        if (coloneStr[i].indexOf(\",\") > -1 || coloneStr[i].indexOf(\"，\")) {\r\n          let paraArray: string[] = coloneStr[i].split(/,|，/);\r\n          paraArray = this.getParaArrayAll(project_name, paraArray);\r\n          let newPara: string = '';\r\n          for (let j: number = 0; j < paraArray.length; j++) {\r\n            if (j === paraArray.length - 1) {\r\n              newPara += paraArray[j];\r\n            }\r\n            else {\r\n              newPara += paraArray[j];\r\n              newPara += \",\";\r\n            }\r\n          }\r\n          coloneStr[i] = newPara;\r\n        }\r\n        else {\r\n          // TODO\r\n          console.log(\"变量名：\" + coloneStr[i] + \"，该变量未被创建！\");\r\n        }\r\n      }\r\n      else if (coloneStr[i].startsWith(\"%\")) {\r\n        //递归处理“（）”中的参数\r\n        if (coloneStr[i].indexOf(\",\") > -1 || coloneStr[i].indexOf(\"，\") > -1) {\r\n          let paraArray: string[] = coloneStr[i].split(/,|，/);\r\n          paraArray = this.getParaArrayAll(project_name, paraArray);\r\n          let newPara: string = '';\r\n          for (let j: number = 0; j < paraArray.length; j++) {\r\n            if (j == paraArray.length - 1) {\r\n              newPara += paraArray[j];\r\n            }\r\n            else {\r\n              newPara += paraArray[j];\r\n              newPara += \",\";\r\n            }\r\n          }\r\n          coloneStr[i] = newPara;\r\n        }\r\n        else {\r\n          // TODO\r\n          console.log(\"变量名：\" + coloneStr[i] + \"，该BlurVar变量未被创建！\");\r\n        }\r\n      }\r\n      //递归处理“（）”中的参数\r\n      else if (coloneStr[i].indexOf(\",\") > -1 || coloneStr[i].indexOf(\"，\") > -1) {\r\n        let paraArray: string[] = coloneStr[i].split(/,|，/);\r\n        paraArray = this.getParaArrayAll(project_name, paraArray);\r\n        let newPara: string = '';\r\n        for (let j: number = 0; j < paraArray.length; j++) {\r\n          if (j == paraArray.length - 1) {\r\n            newPara += paraArray[j];\r\n          }\r\n          else {\r\n            newPara += paraArray[j];\r\n            newPara += \",\";\r\n          }\r\n        }\r\n        coloneStr[i] = newPara;\r\n      }\r\n    }\r\n    return coloneStr;\r\n  }\r\n\r\n  /**\r\n   * 参数字符串分割：\r\n     1、字符串有双引号，且有字符串加法，无法分辨，所以字符串暂时不做任何处理；\r\n     2、小括号有使用需求，需要按要求分析；\r\n        （1）单独括号，后面接逗号：自动取消括号后返回；\r\n        （2）前缀字符串 +（）：保留括号，整段返回；\r\n        （3）（）+ 后缀字符串：保留括号，整段返回；\r\n        （4）括号嵌套情况：1）内层括号全保存；2）外层参考123；\r\n    返回字符串解析后的数组；\r\n   * @param para_str 参数字符串；\r\n   */\r\n  public static paraSegment(para_str: string): string[] {\r\n    let strBuilder = '';\r\n    let rStr: string[] = [];\r\n    let bracketFlag: boolean = false;\r\n    let innerBracket: number = 0;\r\n    let saveBracket: boolean = false;\r\n\r\n    let quotationMark: boolean = false;\r\n\r\n    for (let i: number = 0; i < para_str.length; i++) {\r\n      //转义字符判断\r\n      if (para_str[i] == '\\\\') {\r\n        if (i < para_str.length - 1) {\r\n          let isEscape: boolean[] = [true];\r\n          let c: string = this.getEscapeCharacter2(para_str[i + 1], isEscape);\r\n          if (isEscape[0]) {\r\n            i++;\r\n            strBuilder += c;\r\n          }\r\n          else {\r\n            i++;\r\n            strBuilder += para_str[i];\r\n          }\r\n          continue;\r\n        }\r\n        else {\r\n          strBuilder += para_str[i];\r\n          break;\r\n        }\r\n      }\r\n      if (para_str[i] === '(' || para_str[i] === '（') {\r\n        if (quotationMark) {\r\n          strBuilder += para_str[i];\r\n        }\r\n        else {\r\n          if (bracketFlag) {\r\n            innerBracket++;\r\n            strBuilder += para_str[i];\r\n          }\r\n          else if (strBuilder.trim() !== \"\") {\r\n            strBuilder += para_str[i];\r\n            saveBracket = true;\r\n          }\r\n          else if (i < para_str.length - 1) {\r\n            if (this.needSaveBracket(para_str.substring(i + 1))) {\r\n              strBuilder += para_str[i];\r\n              saveBracket = true;\r\n            }\r\n          }\r\n          bracketFlag = true;\r\n        }\r\n      }\r\n      else if (para_str[i] === ')' || para_str[i] === '）') {\r\n        if (quotationMark) {\r\n          strBuilder += para_str[i];\r\n        }\r\n        else {\r\n          if (innerBracket > 0) {\r\n            innerBracket--;\r\n            bracketFlag = true;\r\n            strBuilder += para_str[i];\r\n          }\r\n          else if (bracketFlag && saveBracket) {\r\n            strBuilder += para_str[i];\r\n            saveBracket = false;\r\n            bracketFlag = false;\r\n          }\r\n          else {\r\n            bracketFlag = false;\r\n          }\r\n        }\r\n      }\r\n      else if (para_str[i] === '\"') {\r\n        strBuilder += para_str[i];\r\n        quotationMark = !quotationMark;\r\n      }\r\n      else if (para_str[i] === ',' || para_str[i] === '，') {\r\n        if (quotationMark) {\r\n          strBuilder += para_str[i];\r\n        }\r\n        else {\r\n          if (!bracketFlag) {\r\n            if (strBuilder !== \"\") {\r\n              rStr.push(strBuilder.trim());\r\n            }\r\n            strBuilder = '';\r\n          }\r\n          else {\r\n            strBuilder += para_str[i];\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        strBuilder += para_str[i];\r\n      }\r\n    }\r\n    if (strBuilder !== \"\") {\r\n      rStr.push(strBuilder.trim());\r\n    }\r\n    return rStr;\r\n  }\r\n\r\n\r\n  private static needSaveBracket(str: string): boolean {\r\n    let hasBracket: boolean = false;\r\n    let innerBracket: number = 0;\r\n    for (let i: number = 0; i < str.length; i++) {\r\n      if (hasBracket) {\r\n        if (str[i] === ' ') {\r\n          continue;\r\n        }\r\n        else if (str[i] === ',' || str[i] === '，') {\r\n          return false;\r\n        }\r\n        else {\r\n          return true;\r\n        }\r\n      }\r\n      else {\r\n        if (str[i] === '(' || str[i] === '（') {\r\n          innerBracket++;\r\n        }\r\n        else if (str[i] === ')' || str[i] === '）') {\r\n          if (innerBracket > 0) {\r\n            innerBracket--;\r\n          }\r\n          else {\r\n            hasBracket = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  public static isIDLegal(id: string): boolean {\r\n    for (let i: number = 0; i < id.length; i++) {\r\n      if (this._illegalChar[id[i]]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  public static isFormulaString(var_str: string): boolean {\r\n    for (let i: number = 0; i < var_str.length; i++)\r\n    {\r\n      if (this._formulaChar[var_str[i]]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n}\r\n\r\nVE_StringFormat.init();\r\n\r\n// console.log(VE_StringFormat.paraSegment(\"设置相机背景颜色, Main Camera, *插值背景色\"));\r\n// console.log(VE_StringFormat.paraSegment(\"颜色插值, *相机背景色, *目标背景色, 1, *插值背景色\"));\r\n\r\n// console.log(VE_StringFormat.paraSegment(\"创建模板对象, *针, Pin, Example/SpinAPin/Pin , null, (0, -6, 0), (0,0,90),false\"));","\r\n// import { VeryEngine } from \"../veryEngine\";\r\n\r\nexport class GameObject {\r\n\r\n  public get gameObject(): GameObject {\r\n    return this;\r\n  }\r\n\r\n  public get transform(): Transform {\r\n    return this._transform;\r\n  }\r\n  private _transform: Transform = new Transform();\r\n\r\n  public name: string;\r\n\r\n  private mesh: BABYLON.Nullable<BABYLON.Mesh> = null;\r\n\r\n  constructor(name: string) {\r\n    this.name = name;\r\n    // VeryEngine.Scene.getMeshByName()\r\n  }\r\n\r\n  // TODO\r\n  public static find(name: string): Nullable<GameObject> {\r\n    return new GameObject(name);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport class Transform {\r\n\r\n\r\n  private _transformNode: BABYLON.Nullable<BABYLON.TransformNode> = null;\r\n  private _mesh: BABYLON.Nullable<BABYLON.Mesh> = null;\r\n\r\n  public localPosition: BABYLON.Vector3 = BABYLON.Vector3.Zero();\r\n  public position: BABYLON.Vector3 = BABYLON.Vector3.Zero();\r\n\r\n  public localEulerAngles: BABYLON.Vector3 = BABYLON.Vector3.Zero();\r\n  public eulerAngles: BABYLON.Vector3 = BABYLON.Vector3.Zero();\r\n\r\n  public get childCount(): number {\r\n    return 0;\r\n  }\r\n\r\n  public forward: BABYLON.Vector3 = BABYLON.Vector3.Forward();\r\n\r\n\r\n  public get hierarchyCount(): number {\r\n    return 0;\r\n  }\r\n\r\n  public localScale: BABYLON.Vector3 = new BABYLON.Vector3(1, 1, 1);\r\n\r\n\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}","export * from \"./IVeryVar\";\r\nexport * from \"./veryVarManager\";\r\nexport * from \"./veryVariables\";\r\nexport * from './babylonVariables';\r\nexport * from './variables';","import { VE_VariableData } from \"../dataSource\";\r\nimport { IVeryVar } from \"./IVeryVar\";\r\nimport { VE_Template } from \"../template\";\r\nimport { IExpression } from \"../expression\";\r\n\r\nexport class VE_Variables {\r\n\r\n  public get projectName(): string {\r\n    return this._projectName;\r\n  }\r\n  private _projectName: string = '';\r\n\r\n  public varData: VE_VariableData;\r\n\r\n  private _veryVars: { [key: string]: IVeryVar } = {};\r\n  private _tempalteVars: { [key: string]: VE_Template } = {};\r\n  private _expressions: { [key: string]: IExpression } = {};\r\n\r\n  constructor(project_name: string) {\r\n    this._projectName = project_name;\r\n    this.varData = new VE_VariableData(project_name);\r\n  }\r\n\r\n  public isCreated(id: string): boolean {\r\n    if(this._veryVars[id] || this._tempalteVars[id] || this._expressions[id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isCreatedVariable(id: string): boolean {\r\n    if(this._veryVars[id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addVariable(id: string, very_var: IVeryVar): void {\r\n    this._veryVars[id] = very_var;\r\n  }\r\n\r\n  public getVariable(id: string): IVeryVar {\r\n    return this._veryVars[id];\r\n  }\r\n\r\n  public isCreatedTemplate(id: string): boolean {\r\n    if(this._tempalteVars[id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addTemplate(id: string, template: VE_Template): void {\r\n    this._tempalteVars[id] = template;\r\n  }\r\n\r\n  public getTemplate(id: string): VE_Template {\r\n    return this._tempalteVars[id];\r\n  }\r\n\r\n  public isCreatedExpression(id: string): boolean {\r\n    if(this._expressions[id]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public addExpression(id: string, exp: IExpression): void {\r\n    this._expressions[id] = exp;\r\n  }\r\n\r\n  public getExpression(id: string): IExpression {\r\n    return this._expressions[id];\r\n  }\r\n\r\n\r\n  public clear(): void {\r\n    if(this.varData) {\r\n      this.varData.clear();\r\n    }\r\n    this._veryVars = {};\r\n    this._expressions = {};\r\n    this._tempalteVars = {};\r\n  }\r\n\r\n\r\n\r\n}","import { ShowError } from \"../html/showError\";\r\nimport { IVeryVar } from \"./IVeryVar\";\r\nimport { ErrorInfo } from \"../utility\";\r\n\r\nexport class VeryVarManager {\r\n\r\n  private static _veryVarTypes: { [key: string]: IVeryVar } = {};\r\n\r\n  public static hasVarType(var_type: string): boolean {\r\n    var_type = var_type.toLowerCase();\r\n    if (this._veryVarTypes[var_type]) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public static addVarType(var_type: string, var_prototype: IVeryVar): void {\r\n    var_type = var_type.toLowerCase().trim();\r\n    // 由于直接访问，所以在这里直接报错\r\n    if (this._veryVarTypes[var_type]) {\r\n      ShowError.showError('VeryVar变量初始化错误，变量类型重复，当前变量名：' + var_type + '，当前变量类型：' + var_prototype);\r\n    } else {\r\n      // console.log(var_proto.VarType);\r\n      this._veryVarTypes[var_type] = var_prototype;\r\n      // let a = Object.create(this.GetVarType(var_type));\r\n      // console.log(a.Value);\r\n      // a.Value = true;\r\n      // console.log(a.Value);\r\n      // a.Value = 1234;\r\n      // console.log(a.getValue());\r\n      // console.log(this.GetVarType(var_type).__proto__);\r\n    }\r\n  }\r\n\r\n  // TODO\r\n  public static createVar(var_type: string): IVeryVar {\r\n    var_type = var_type.toLowerCase();\r\n    return Object.create(this.getVarType(var_type));\r\n  }\r\n\r\n  public static createVariable(var_id: string, var_type: string, value: string, error_info: ErrorInfo): Nullable<IVeryVar> {\r\n    var_type = var_type.toLowerCase();\r\n    let variable: any;\r\n    try {\r\n      variable = Object.create(this.getVarType(var_type));\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      error_info.isRight = false;\r\n      error_info.message = '变量创建错误：当前类型在平台中不存在，请检查！类型名：' + var_type + '，错误原因：' + error.message;\r\n      return null;\r\n    }\r\n    if (variable === null) {\r\n      error_info.isRight = false;\r\n      error_info.message = '变量创建错误：当前类型在平台中不存在，请检查！类型名：' + var_type;\r\n      return null;\r\n    }\r\n    return variable;\r\n  }\r\n\r\n  public static getVarType(var_type: string): any {\r\n    var_type = var_type.toLowerCase();\r\n    if (this._veryVarTypes && this._veryVarTypes[var_type]) {\r\n      return this._veryVarTypes[var_type];\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  public static remove(var_type: string): void {\r\n    var_type = var_type.toLowerCase();\r\n    delete this._veryVarTypes[var_type];\r\n  }\r\n\r\n\r\n\r\n}","import { IVeryVar } from \"./IVeryVar\";\r\nimport { ErrorInfo } from \"../utility/errorInfo\";\r\nimport { VeryVarManager } from \"./veryVarManager\";\r\n\r\nexport class VeryBool implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'bool';\r\n  } \r\n\r\n  public get Value(): boolean {\r\n    return this._value;\r\n  }\r\n  public set Value(val: boolean) {\r\n    this._value = val;\r\n  }\r\n  private _value: boolean = false;\r\n\r\n  constructor() {\r\n    this._value = false;\r\n  }\r\n\r\n  public setValue(val: any): void {\r\n    this._value = val;\r\n  }\r\n\r\n  public getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  public initValue(value_str: string, error_info: ErrorInfo): any {\r\n    if(value_str.toLowerCase() === 'false') {\r\n      return false;\r\n    } else if(value_str.toLowerCase() === 'true'){\r\n      return true;\r\n    } \r\n    else if(value_str === '' || value_str.toLowerCase() === 'null' || value_str.toLowerCase() === 'none') {\r\n      return false;\r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class VeryInt implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'int';\r\n  }\r\n\r\n  public get Value(): number {\r\n    return Math.round(this._value);\r\n  }\r\n  public set Value(val: number) {\r\n    this._value = Math.round(val);\r\n  }\r\n  private _value: number = 0;\r\n\r\n  constructor() {\r\n    this._value = 0;\r\n  }\r\n\r\n  public getValue(): any {\r\n    return this.Value;\r\n  }\r\n\r\n  public setValue(val: any): void {\r\n    this.Value = val;\r\n  }\r\n\r\n  public initValue(value_str: string, error_info: ErrorInfo):any {\r\n    // 先转化为float，直接使用parseInt没有四舍五入的效果\r\n    let newFloat = parseFloat(value_str);\r\n    if(!isNaN(newFloat)) {\r\n      // 可对float进行四舍五入\r\n      return Math.round(newFloat);\r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class VeryFloat implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'float';\r\n  }\r\n\r\n  public get Value(): number {\r\n    return this._value;\r\n  }\r\n  public set Value(val: number) {\r\n    this._value = val;\r\n  }\r\n  private _value: number = 0;\r\n\r\n  constructor() {\r\n    this._value = 0;\r\n  }\r\n\r\n  public setValue(val: number) {\r\n    this._value = val;\r\n  }\r\n\r\n  // 之后可能会有公式的情况\r\n  public getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  public initValue(value_str: string, error_info: ErrorInfo): any {\r\n    let newVal = parseFloat(value_str);\r\n    if(!isNaN(newVal)) {\r\n      return newVal;\r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n\r\nexport class VeryNumber implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'number';\r\n  }\r\n\r\n  public get Value(): number {\r\n    return this._value;\r\n  }\r\n  public set Value(val: number) {\r\n    this._value = val;\r\n  }\r\n  private _value: number = 0;\r\n\r\n  constructor() {\r\n    this._value = 0;\r\n  }\r\n\r\n  public setValue(val: number) {\r\n    this._value = val;\r\n  }\r\n\r\n  // 之后可能会有公式的情况\r\n  public getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  public initValue(value_str: string, error_info: ErrorInfo): any {\r\n    let newVal = parseFloat(value_str);\r\n    if(!isNaN(newVal)) {\r\n      return newVal;\r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n\r\nexport class VeryString implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'string';\r\n  }\r\n\r\n  public get Value(): string {\r\n    return this._value;\r\n  }\r\n  public set Value(val: string) {\r\n    this._value = val;\r\n  }\r\n  private _value: string = '';\r\n\r\n  constructor() {\r\n    this._value = '';\r\n  }\r\n\r\n  public getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  public setValue(val: any): void {\r\n    this._value = val;\r\n  }\r\n\r\n  public initValue(value_str: string, error_info: ErrorInfo): any {\r\n    if (value_str.startsWith('\\'') || value_str.startsWith('\"') || value_str.startsWith('“') || value_str.startsWith('‘')) {\r\n      this._value = value_str.substr(1, value_str.length - 2);\r\n    } else {\r\n      this._value = value_str;\r\n    } \r\n    error_info.isRight = true;\r\n  }\r\n}\r\n\r\nexport class VeryVector3 implements IVeryVar {\r\n\r\n  public get varType(): string {\r\n    return 'vector3';\r\n  }\r\n\r\n  public get Value(): BABYLON.Vector3 {\r\n    //let a: BABYLON.Vector3 = new BABYLON.Vector3 (1,1,1);\r\n    return this._value;\r\n  }\r\n  public set Value(val:BABYLON.Vector3) {\r\n    this._value = val;\r\n  }\r\n  private _value: BABYLON.Vector3 = BABYLON.Vector3.Zero();\r\n\r\n\r\n  constructor() {\r\n    this._value = BABYLON.Vector3.Zero();\r\n  }\r\n\r\n  public getValue(): any {\r\n    return this._value;\r\n  }\r\n\r\n  public setValue(val: any) {\r\n    this._value = val;\r\n  }\r\n\r\n  public initValue(value_str: string, error_info: ErrorInfo): any {\r\n    if(value_str === 'none' || value_str === 'null') {\r\n      \r\n    } else {\r\n      error_info.isRight = false;\r\n      error_info.message = 'Type: ' + this.varType + '，值：' + value_str + '，该变量值和类型不匹配，转化错误，请检查！'\r\n    }\r\n  }\r\n}\r\n\r\nVeryVarManager.addVarType('bool', new VeryBool());\r\nVeryVarManager.addVarType('开关', new VeryBool());\r\n\r\nVeryVarManager.addVarType('int', new VeryInt());\r\nVeryVarManager.addVarType('float', new VeryFloat());\r\n\r\nVeryVarManager.addVarType('number', new VeryNumber());\r\nVeryVarManager.addVarType('数字', new VeryNumber());\r\n\r\nVeryVarManager.addVarType('string', new VeryString());\r\nVeryVarManager.addVarType('字符串', new VeryString());\r\nVeryVarManager.addVarType('vector3', new VeryVector3());\r\nVeryVarManager.addVarType('响应', new VeryVector3());","import { VeryTable } from \"../verytable/index\";\r\nimport { ShowError } from \"./html/showError\";\r\nimport { LoaderManager } from \"./loader/loaderManager\";\r\n\r\n// 导出entrance\r\nexport * from \"./index\";\r\n\r\nexport class VeryEngine {\r\n\r\n  public static Canvas: HTMLCanvasElement;\r\n  public static Engine: BABYLON.Engine;\r\n  public static Scene: BABYLON.Scene;\r\n\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n\r\n  public init(data: Array<Array<string>>, project_name: string): void {\r\n    // TODO: 之后可能s会变成多个Table，暂时未1个\r\n    let tableData: VeryTable = new VeryTable(data, 'VeRyEngine');\r\n    // console.log(tableData.pos(7, 5));\r\n    // console.log(tableData);\r\n    console.log('开始');\r\n\r\n    let manager: LoaderManager = new LoaderManager();\r\n    if (manager.load(projectName, tableData)) {\r\n\r\n    }\r\n\r\n\r\n\r\n    // this.showErrorTest(tableData);\r\n  }\r\n\r\n\r\n  public showErrorTest(tableData: VeryTable): void {\r\n    // /*\r\n    ShowError.show('大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n    ShowError.showError('大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n    ShowError.showWarn('大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n    ShowError.show('大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n    ShowError.show('大股东萨芬个是电饭锅三分隔收费的发，错误位置：' + tableData.pos(7, 5));\r\n\r\n\r\n    document.getElementById(\"settingsButton\")!.addEventListener(\"click\", ShowError.close);\r\n    // */\r\n  }\r\n\r\n}","\r\nexport * from \"./veryTableRow\";\r\nexport * from \"./veryTable\";\r\nexport * from \"./veryTableSet\";\r\n","import { VeryTableRow } from \"./veryTableRow\";\r\n\r\nexport class VeryTable {\r\n  private _id: string = \"\";\r\n  public get ID(): string {\r\n    return this._id;\r\n  }\r\n  public set ID(id: string) {\r\n    this._id = id;\r\n  }\r\n\r\n  private _columnIDs: string[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\n  private _rows: VeryTableRow[] = [];\r\n\r\n  public get RowCount(): number {\r\n    if (!this._rows) {\r\n      return 0;\r\n    } else {\r\n      return this._rows.length;\r\n    }\r\n  }\r\n\r\n  constructor(data: string[][], id = \"默认Sheet\") {\r\n    this._id = id;\r\n    this._rows = [];\r\n    if (data) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        let newRow = new VeryTableRow(data[i]);\r\n        this._rows.push(newRow);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据行序号和列序号获取表格数据\r\n   * @param row_index 行序号\r\n   * @param column_index 列序号\r\n   */\r\n  public getData(row_index: number, column_index: number): string {\r\n    // if (row_index >= 0 && row_index < this._rows.length) {\r\n    //   let row: VeryTableRow = this._rows[row_index];\r\n    //   return row.getData(column_index);\r\n    // } else {\r\n    //   return undefined;\r\n    // }\r\n    return this._rows[row_index].getData(column_index);\r\n  }\r\n\r\n  /**\r\n   * 根据行号返回行数据\r\n   * @param row_index 行序号\r\n   */\r\n  public getRow(row_index: number): VeryTableRow | undefined {\r\n    if (row_index >= 0 && row_index < this._rows.length) {\r\n      return this._rows[row_index];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取表格位置\r\n   * @param row_index 行序号\r\n   * @param column_index 列序号\r\n   */\r\n  public pos(row_index: number, column_index: number): string {\r\n    return \"表名：\" + this.ID + \"，位置：（\" + (row_index + 1) + \"，\" + this.getColumnID(column_index) + \"）\";\r\n  }\r\n\r\n  /**\r\n   * 根据列序号获取列ID，序号超过26以后，需要进行计算\r\n   * @param column_index 列序号\r\n   */\r\n  private getColumnID(column_index: number): string {\r\n    if (column_index >= 0 && column_index < 26) {\r\n      return this._columnIDs[column_index];\r\n    } else if (column_index < 0) {\r\n      return 'error';\r\n    } else {\r\n      let a: number = Math.floor(column_index / 26);\r\n      let b: number = column_index % 26;\r\n      if (a === 0) {\r\n        return this._columnIDs[a];\r\n      } else {\r\n        return this._columnIDs[a - 1] + this._columnIDs[b];\r\n      }\r\n    }\r\n  }\r\n\r\n  // public addRowStringArray(row_data: string[]): void {\r\n\r\n  // }\r\n\r\n  // public addRowStrings(...strs: string[]): void {\r\n\r\n  // }\r\n\r\n  public addRow(data: VeryTableRow): void {\r\n    // \r\n    this._rows.push(data);\r\n\r\n  }\r\n\r\n\r\n}","\r\nexport class VeryTableRow {\r\n  public get Count(): number {\r\n    if (!this._rowData) {\r\n      return 0;\r\n    } else {\r\n      return this._rowData.length;\r\n    }\r\n  }\r\n\r\n  private _rowData: string[] = [];\r\n\r\n  constructor(row_data: string[]) {\r\n    this._rowData = row_data;\r\n  }\r\n\r\n  /**\r\n   * 根据列序号获取表格数据\r\n   * @param column_index 列序号\r\n   */\r\n  public getData(column_index: number): string {\r\n    // if (column_index >= 0 && column_index < this.Count) {\r\n    //   return this._rowData[column_index];\r\n    // } else {\r\n    //   return undefined;\r\n    // }\r\n    return this._rowData[column_index];\r\n  }\r\n\r\n  public add(data: string): void {\r\n    this._rowData.push(data);\r\n  }\r\n\r\n  public insert(index: number, data: string): void {\r\n    // 先将数组一分为二，在第2个\r\n    this._rowData.push(data);\r\n    let tempData = this._rowData.slice(index);\r\n    tempData.push(data);\r\n    this._rowData = tempData;\r\n  }\r\n\r\n  public remove(index: number): void {\r\n    this._rowData.splice(index, 1);\r\n  }\r\n\r\n  public removeEnd(): void {\r\n    this._rowData.pop();\r\n  }\r\n\r\n\r\n\r\n  // public\r\n\r\n  // public remove(index: number): any {\r\n\r\n  // }\r\n}","// import { VeryTableRow } from \"./veryTableRow\";\r\n/**\r\n * 1. 主要使用TypeScript进行开发，掌握其一般开发流程，从项目建立到发布最终的生产代码（打包、合并、编译等）；\r\n * 2. 实际使用过程：在浏览器代码中，点击运行代码\r\n */\r\nimport { VeryTable } from \"./veryTable\";\r\n\r\nexport class VeryTableSet {\r\n\r\n  private _tables: VeryTable[] = [];\r\n\r\n  public get Count(): number {\r\n    if (!this._tables) {\r\n      return 0;\r\n    } else {\r\n      return this._tables.length;\r\n    }\r\n  }\r\n\r\n  constructor(tables?: VeryTable[]) {\r\n    if (tables) {\r\n      this._tables = tables;\r\n    }\r\n  }\r\n\r\n  public getTable(index: number): VeryTable | undefined {\r\n    if (index >= 0 && index < this.Count) {\r\n      return this._tables[index];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public addTable(table: VeryTable): void {\r\n    this._tables.push(table);\r\n  }\r\n\r\n  public removeTable(index: number): void {\r\n    if (index >= 0 && index < this.Count) {\r\n      this._tables.splice(index, 1);\r\n    }\r\n  }\r\n\r\n\r\n}"]}